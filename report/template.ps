%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: template.dvi
%%CreationDate: Fri Jun  5 02:08:18 2015
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMBX12 CMR10 CMBX10 CMTT9 CMMI10 CMSY10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter template.dvi -o
%+ template.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.06.05:0208
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 856 2013-12-09 10:34:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.21, 2013/11/28
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E692F6C00B521F7AB2F32545952358F
0D39246DE215D0A7EE67F377E81F9E65B25658B7FD97FAF98C7EA9161530404B
62B9AB7A91C863095D5433BB06F9A29488DA84D58A1394AD7878BB27E3CF4AF1
BC29DC64F319758518AB652F9E8BCA586D3D2021CA860F84DC0A2F61A93B6B44
F08A7F7C5F36FEE9F5D450D19F72C09580DDE2B3747D8A1054981BAEF31D6C42
040D7D5F37DE6DE019849E7C7754DD27E9511F9A9AFA4FB727695444F739448F
3D2021
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 61 /slash put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455597DEE127E914C372C6EA0E250402117B903
1D7D6FC7153D77458569B2E0E6FB978B06AAD616BBEB70B58E0BCAE1013D4405
873D2AA3C41309993563E652BCF2B244451D8FA1305BD9BC2C57BCEA7F065670
A5059B0B17303312E8B787E02152FA92480CDED118924A9D490B2BCBF9A560A0
D4B55DC4968ACE1019CC2840E1AA0596F8E8D4BF7119B047E55B0FA01C69B9A9
F79DA6C9C9B49EAD94943613151247423679B7A29AD2C71BD077306FB9EE0AAF
9AE4B268C8BEDF3CAE8CE885ED53184F9BF2F55AA05933071F536B7180F6301C
A04438DB5BE00037A8145A4476A0E38524892AE3B58FB6BDB3CE35C7667AB0E8
14FC9C55BF4E1A3C0FD44C35250329D53A8407714B6D3EEC264489B49ED7B734
794A68033929A8F3627857BD900FF0C057731EE70F8C93387CD7CD723FB3E361
98278CAF1043E3BC2E65547871CDC8552D21866E60FB220F01C6D469EEAB3686
69112752ACCB5783D5CFF9D7EEF4B1466DD6D243685A17351512207AD779743D
E10AD4EAD4C32C64313931CB2FD4F233641F039BFF3076C7C9C7EE2066E06784
1402C0B852CF441D2593E7FEDF59F622687DB9CF10CD88A8BC0B8147A9A4F11E
42A097A4C9042E96C6D19AE17C20A4DFE529948D422F0D4518E6F086E4EF3F30
799A73686340DBB04907EF8F775CEF65AB74E0726D21C9AA5F0E1406C722B8DC
D43F8D3AFDE424527237FBDC50650E4912060BFAB8C4EF99DA137182A5A06AA2
C2A949C5057B9C20F3A631DC196D28C9095EF36EE36E17E8419465F471EA02DE
84244E9EC4392C584EF5D80A714FA9764D1F2B3EE791B74073496BA0415869C7
CF8CB54FD702085CFA27A59D9FD02EB1DC0575E1B5DA915390F6C5E15B0AB6CA
A7E3BC56853C88794AE9837A727D71BCB1C793F2F0CC80E1CB373D8B450D2D25
480088E5F262D06E3D732C3AE11D374F623F19596ECC7E16A6E1179935E8D88F
686F16316DED25629727C2239BE82126769767D37A82D49696532635B98C5018
193C7618407393A8FD9D8F54872BA54EBE82C77CA414141D66EF1C103DDD465C
757CE41587DE7DF5FAAC538414697F4A4A2A71B958AAE5B3DC9CA01AA1B5EE47
BBB24A620F2D1757AB0ABA9A80A326236B0C669D33CAA2F95F2ED385F8DE1255
5971659EE962F5AE7D1E33FAB2EB0E9FE369D5343F9C25E5CF761BD752DA8529
E6927D641B664AFEBA07643944925ADC4F87EDB74EC374E1DD27EB794104D14F
3A5945C0F89E77BACE874E847073670EDF51C5704D2500157D3990F5267AFFAB
9749C4ACBF4617209D255E694C936167D062FB6A13406B71E74DF221A7D37993
A86B9BA08E7949725286A5B96213413D59E50BE4843421B87AAED8A934566918
22D808EAD87D599F3B726298AD3A3D25917DD6C086216E205354105346104B85
236136C0810AAFD124279612DA5AE02B660C974263E23414E42E6CEF00B080E9
E525EE6A8CD3DF44D65764696AFF279959CFC4756EBE2AA46CC31EE065CE36C5
8525C2011E4471E9439A9654639FD3FC5BF0898F5824C5414CB11477496466C3
75E06ECC67D12A07F556B88367896C8C97E841B93DB5C6BE420094FF2F89729C
EAA5FE076FFEFF94F8794E0C0AE59C8FE4716640B36F1FBE15233A18842E9212
386BA9593FD809745F624500991972A3CADF50D495FAEDDE055F298490AB8DF9
FA51128FD38E70D850B41F408CECD9183DFE467E6FD1B5291E5A3BBE39503110
BDC5EFF933F322C113BDD9D1F8C560055B9423E7831BD2C03E9A8DA17C7F02D2
B801F88ED55319148811AECFA269061E8B5BB22563064CDF7A31A242FEA8D7FF
81A31239A560565B5A516BCD745C90C9F87117D481217FA4984ED42053523874
4055DF68A8367A8120001F651FC53DB5CCC442B4E4F9BE6CD8C9BDF5438F2A7A
0A982517B3F0FFBF4CEB4B0CBBFB4AE264C93FF4FA87C90C91DA7BE8FFD1512A
5C55C20D35C91A4AAE74F81A381A81B3B5716F1AFDFA36EA2DFBFA783B47A38F
18C88180D561D6440089DFCADC12D92C5838A412186F30ABF27540EB6BDDC994
CBADBACB6FC65E1C35699C94A2AFA724BC498D7B6D21AD1092D364D2747B46E7
4B8520E550EC26C70D9A2538B6C848A8AA95741F8EE9BE260CA1E21DE0A371E6
EB8EEB408CDBB5257C9A46A9A7A3D51F952A1C2605FAA66E1263EC5CC88E71F2
84A949EC2B67A103042D6386C37F986A632071571DCE0D4D21DB3AAE314F8831
FC24FD678A7BC96D28245736080802055B9D518710AB0258819F4663C4A47D67
F1D0ABCE7A97EBC816B32445C458177CF4F7E83A1EC101E5DAF2E7BBB145449D
ADB396323A61FCDBE1E5A1960716563CA000569BF640C8CEAE12B2ED9383833D
D2E88F3BB2CAB85F7197F42E0523D72B1CF1ECD69D4824F45CE58578E2E34617
1058EC30F7C433FC9995948E856E57FB977227D455F6F324568BA9524C59989A
2C65D23A3D55A95EC3C877A12175B34A096FD7D8280EF10105EA08F7A9A8D1D9
60529232B595F2111A78DA5111ED8FE716101F97DCE507138C8A87702B4ACA97
BF876F780607F1D4916DFE72D26B90AF158DE2EDC42D7DE5E64DDDD9BAD074B3
035E3366DED084C7654F31933F85B67A455930B9F549F17A1E0C61B3C47356AF
F461BE0796673D697D83088B2FBDC9D96B3B64D0D434A84F09EB2FC5557D616F
6A78305FACD34BB67945790327E929B54D461CD52103D7547E96641F4CC70CE0
FF8BFF4C49B45EFF64892A468245F386B760BB23AB3078A47E5207F200A67979
9C9D714708644ABFC6D0F136FF8C8003F82A76F8E9C9B57CC2DB52FD18278213
C240E3442ED231F39C4390E5D0D0BFCC13C710CD8F5A6BDD9FF88352D10B1BE8
908AE0D74BD94F7D3EB507A91F0883F3A22871D1285718F032AF489BBABC27DE
E3CE89CCF79C6D3AB03437EC7CA22388694B611FC41DAA40F352734DA9F60DF7
E3F088C1743504F5798A85B89BC582F67B01D119BECA2CA45C76BFAC57345321
4FF67B5941D13A6092DA0FB4282A7354ACD851C7B0B548D8DDC2F28BE47F5714
98D5B6F534DCBC85372CFEAE74EE514C8FF110C7B5B56AFCA04E923F5B7DD20C
F2409950AD2BBB77A2305E5591625A3429502D2AC8675417FF772C079E361675
314C4F6218969BACCBD7548A4695F636BE201350AB69A59CD5B6573573D8B50C
CB7FF3F261BCC159C2652CA86F27A32D7F14BBEEB3172167C926535F9925211A
0553AE02A9CA598C1F38EE4628BD1110016E11F8F8708E1B519D4AD788AD5A49
A6A4C9AF8C6A57C5FA8F615B3DBE14049DC2E95C4812A69FE26787AC8587937A
7BC644F601D821BCD14EFD4D1BA5E18DCA5D55FA734D05D6EB266640A876739A
32B5B299C553F185015831028287890E9F2A1A8AFE1C0A6ECC33B21842A50AE1
F041C362AAC177D97B4B6CD939EE43F8CDE3010AB37974EDC24614D9D2835F73
0F2AB783C1AF254068AA3D975BF4C0CC9D373BA0A22E6C291B5795B912C36807
0357196679F0A6BDC7A6354DAA2CB82D8D20C32A726C9B00CA313DCE2C586011
92E46B6E6F9D46A65199B16F9C44D31EFFF8526745F34A4DFF323005CB02FFFE
B72F4BD0921CB89613F31D89BC517F1494FA5EC9BB9071D1B420783B9359F93E
A2955DB5522568ABFC9B867AC85609F7DB0503C20E9B361F34A53BDC9497EBF1
E6BF31DC0DA7FB296387B1920E8037C4892B17909DAA8DE656C1A5BAD9F95135
5AEA92496357C798CF5C4B26F14786F85D0CF49592568AB52BFEF1D07128CED0
28ACDB5C8BBF373E26A9C1AFC6BD24F7A4DA2EDB0FE6973B5E2D8F60AFDFA8CE
D0A54C089FA66B17C08E3977C086192FC9983722C883C1C1BC46620FD689F356
749B07D9014071FB7FDA0000147A23B7C49D9022BF153BF1B30C09189B840059
A0A2ACF2E75314A790101893D8F7EF7E0B61840995DD3AE5ABD16E0C6FB2FA96
12A9774AEAA19A9E2D8721F8A16622266915AFAA570CC8034CCF6514E4832753
D8472490624397A1A86806BB4BC4526556595DF14B05D596252F327943D866D4
23484727FA9A9CC585FC991502706B9D1A47F9459124E7C71ECC280E650016D1
E02DF8C611B379C3F588CA298D4D5FE660DC4DF98EA23D9B5F09B68543F040EA
32CE9849F735C1D28493D718BF1D72ACF159F7831B0A00E65A29C14E6DF2D71F
ADA075EB08466A5AEAE61FED8A6113F77502121CED2334A0327BC1EA3AE1C9AF
D5A6DD36B09D82F00B331D853D2C54E5BBB24346DF15BAC41CFE1A77A5363BEE
D9CE2454C918267C609EC9E9DE047F7A11A225706B6D906917500780B20EE269
343AB3DD9664A2260F604044F333D3D917D7C3794A6E8A9B5FB43068BCF89822
2C4A5CC3619187236D08EB6D9ECBE7D6778B7B2215683851705BFC32BE4B18BE
EF0788EAC3E32D8A88F44B01E83A93257BFDCCC2C2DC3DCD036B5BFAE9243788
454CA6912FFD2D8CBC8ECF129D2B91EB7C19CB5AB2A677653EF6260EF62CB8FF
31354C5449762E16ECF4A62003EFC84B0B00B680A3F72A2A1602E278606B28EA
BFD9C96D4A84A2EEC5EF2C7E2212B68FA8A2062EA67FA3DBAF173FBF1007C79C
C4C37A039A210ED55EB9190DFA3AC38CB874784DFCA2BB7157909E6739BBA6ED
369F12693E0DA1B8DB210D4B061E9BC46ABD5DA7C900AA427F365E146D84E1BE
DE58C254ADEEE8CBDB3BE9B4BEA9570B6185FC6FAAE47BEB2F41EF7AADF0B2DF
76800405E719D284904673675F19A834A537FE84FFF66B082581CB1E3EDDB91D
085ADBA32CDD7E40EB1D3868E455A3B797684379F93108591029A319331A52B9
5127A65B963AFE5BC9D0692E5DD5BF83E6AF28F8C285BA68761CCB5F498D5493
C06A69527D4497FCE784D289D16C9A3E15BBBB20C7CFE9AF826B62D97158F69F
309F024931FE4D7FBE0FDFFBE6F02E46B1438BA8009B7F9CEE1921015F3005ED
930BC7AE7EAF85A0296F02C103AA1A503E0DA26268E264DC9EC540FA237C60F1
A128FD3517869315A4FBDF2710542C1A74435C7207B3104C879A4982EBFD0E97
1500D59DFDEA3613F48EEB9990A16E85DC217F3C5005FB914C8ED8E6ADF62F16
F602B264AB7B82E11EFBE6EE718EF16738E260608B6DEEADBEEA750F09DFD53C
2C0A57E5CECA92C58F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.0: CMTT9 003.002
%%Title: CMTT9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT9 known{/CMTT9 findfont dup/UniqueID known{dup
/UniqueID get 5000831 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT9 def
/FontBBox {-6 -233 542 698 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT9.) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 86 /V put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E6BABDA4215500A0
42D1A3D0D02C0C98BB1D6ED0B7791274C38B038FC7921FF1FB8FAE7258C09259
4B8E1BD9EDCEDE9ADAD9BD9598EEA9691589649A9A21539161E374075BEE3457
689F308A4A7AC9F2FE4B301A6C36B0442FB92E3B002623493DC087800B5A0521
0DB96A23175AC584DE166F59142779F26FEE9783E28DE49FC3A8D6583EE63FBA
610DA773CA18ACE6F64A4867A1A7817120ABF9DE4D17782866E6CB6B65A9F6D8
3667C8D3E61E5356E35343FDD4C6436DF73934470916CB5F0ECEA6BFF092E735
C7C355B56189D1DD5715EC97E50145FFC17BB1497315A9585D713A7A6DFC7933
995468EFD0F59E3C15865B87925A3F2930E20D5A35970E2C44F1629FA16E00EE
EE21EFC50D49F5BC02300D0A7BB85E649CB4E2E828C8B1C5469463013E71D723
2CB11BCBAC191AC751A2AF7FC228395CE9472DC1809052012AEC2CD66695DAF0
4CA04234F0187F4116C93F59A7F1F8123DE87F111853B785A20CA8B49B3B0CEC
B11AD345E1A11578D2EFEB0536D125237086CC8CD9F34A5137AC5DDFD8746014
D74AAE8239B81ACF65F379CF2153B06A238A2D767F294CAE0D79228F0B7D45CE
510AC9657A1776202FEF42F96D476E7DF407786AEA12DEA0013D3B4C5D0640F5
BC5BB72C34066270399CE595827175B23B25072723BD24E07F6BCD9EF0175DEF
93714BAA53960F81103CFB731CED4A267B53727BCA3C97B0BA5004055D4EF0EC
F725658E53AC86E4061B489AD4154915C3981B3B703E1E2A8D390CCECCA99385
45EBE35441B062D7D12DAB2B31569387187D74A4043FD71F1C6D352EAE0F6757
4345FBFB6DB15CAE47CAC4BAE47AECAE5FF5EC19057DCEFA1B23F47364ABDF47
088A7C6A2AE26B10459B6D41CB69182FD1472F326CE3A15B59255D1DE3B616D8
9D1F12561038839781E657C896B8C58A32DF5AEA23732A0966D96C68C988ED7A
09B7E2C8F9F3D0D56879764781566299A4EDD3588BDF70E3D924D25074F30988
E35BDD827AE4D0B4A06F55A9976BF0DB3C0B1D09CD08E8CB168B50617691638C
0EC1A791C228177D4FFB021EC3DF5082CA3487AD2EFC8DE9466A690ADDB4C52A
FE2A6DB4CC275CD33D9136E735279FBB2008D59E667905EBB04326EC33C98B2C
94744B7F540D86E90DED64572ECF1EAD3A58EC101642B245A9C7232DC8FB8741
03F97883BB32FB955C22F878FA0FD114451A3B3859B0B5537AFAB73AEC7DB2BF
409E1FB41D473714F6BEA73CB085139879FA31710E01915C2938C37BAD6D7D71
45B897E00857D3931A489EAC7B42BCE4E65F73F67FE027CE482DC47598ABCB95
39E98DA8ECA3E23F0799D5963ABA6E2984DEACBE7B46B40ADC6213E0F4D08971
58F68C946C748E4B4217CBA2391BE2086C9758F4E32C9B6413E48D84D33A6E85
84747029C0A9C9B92841D217A902BA8EB333999D62FDA9F82BFC8ED11F67988A
0CAE42182E414A9766AFFF4B046A09D476F8E3F15A8C7829BEE982D8350BDF5F
F215F2BBBF68D4B567BAB798B9604C79306C475926E9FEC0F07A99F43473C6FD
B15AC29C3D07FEBAD1BAFF75AAF2FBE94F104F1DBF838044FAD94B661B06AECD
D9AEBD02B60CA4546DD6B5B5C1A3833ED07845671CEFCA8955CE0DE5DB8FC93B
3306683CBFB8E5B79A863DE78D455DE9D592043C2686F88A43140F8B9F3B553B
7047420E93E753829F8D47AC7621CFE3626F271E31F0019CC02D0B57F67BB47D
8CFB63E902EA3231C00EC66EEC0D30FE8394558BD3535C888C4CEFC6EB72E737
712ADC6300162D5D79BEE0CA1F6E4127A0BC90656C01692F6D82C85550AFC97E
C2693E379160FDB9636FA41AE9C75B7F6643B05971C6D67CE30971D590FC07B3
E0B36B4D1C7F25110B5DA2130D574FA292B47322975A2BADBDB39AAE69BDDBDA
A880F9AAB580117708C79204DFFDC08BF4A48919B5C22228845CE8C3109E93AC
2479E523B8A1C12A6E541118F121DC6B4EAED83491A03192D5C3A2A45D1A2467
757E7B377C635CF5CAE11A7CB49D49F3A1BB2286090B5F0E4F89869D1771D50C
54B5C5E091E3048A2C194F0ED00DD64FB95BAC6FA9D61ECD093ED416DA3A4981
DB07CFF17C4F55C62DF628EBFF06FAC3F3D3F91C30EBB34052BE1A08F5EDA4B9
08977197950A282B84E21D43C64BE3AE4BCE22C70E7D392DE09D89B7F23351AD
6AD37225C12BA79EC9951F5DA1E505DB26200190ADE0E549305B7530CB86EFD2
A896F13A97E51754F70B609CB4511CEFC38BA579C071E9510A49982389980DC5
336D6C4A2DB100DFEC4055C7AA9C55880F94FBEA9EB280BEF66CB8E1E38A359D
E5AFB12B540CD599085ADDA7FC2C72E7C873015773FFEECA2C596B75BC39A3EB
3C43FA2E53C0D7993042F3D652BCC483E48B7F6C94C3FF6D38E276086A6AE67A
E5A571B9C72E0D7824E0BC2ADF51A393B9E334649F786EC1923C854382B89627
1B9E701AE5A6C42E672B2C6A33C8BBCA8F69B9061E787D6B92183F20CF4C3903
FF5417427B84798C82BE28D2C81624E3920CA61EC9EADB364B5A6E50E49A1A72
A9A090A1FCD84814B8B2708AD787D2B5015DA1305874F58C5EB62F843685FCB6
465FCA80176CAB2B2FE65E0A270BCE1E3DB97564BEDFAE5CA44395A8DF4505C0
3E103CC3B914359B2870DA6CD30382EAE8949131CFE31E9E75C3E47A3834BB32
CF183D4A8B9001710D0A11390C9DAD116196568591D38C2AF4ADD852F31494EF
573462759A35415900360882739789D6B89ACEFA251C5ED90ED704DD7C3C80CA
9F6CDED69537D201D520C99E69EEAD5D3C0EB84C166660B3C190166D93EDFE6D
15BCB6DC5CDCA825E48D33845CC2FB15291AAB823F25CF8BB0A1EAED8BEC524D
D9CA016027141FAC9D35B64FB9C224552F29EF6B32497254E319090E698FD8A5
15491CDFE1B988C79A0E3B9D01E12FF084E9FA86CCAE02A3EE6F2917B61A2CC1
64B8CAF309D1AB48A34227A7729DFF99CB6EC282E3FAEDD2673779AA7E4C1789
D93FDC37FE95F087C5F88F53D30A2DA9C913BF205FC6BDD060A40184F4AAEB3C
D080D63B89CA3DEFF310D09EF0A83F3914BD5B7932980ECE139EF0313C20B4C8
576EE0FE3F28FAF4D3CE7CD0890BC824A85B8EF4636BDF1EF1BB519F93D36540
ED09FAF93FD71992CA2CE2E83F5355162ECEB32AD218092F45D5A61A44E67135
EF0453589CECDC6962D0E8DA7E7567603BAF50B2C8F1CA65EA5320984E7D69AC
9A7D3D7F92565D79E8C9DD2D92CCA7DE9CD058545E9F98AA47904D70E1897099
3C4C852B3BA131DDD348433C336BDF5FBDFB62120DDEAEB3255E3207B0C84A0A
1ECF9EC869DB9BFA3693B03FCB27C5A5D3CDD62630DEDE91B4DD5B9784BF0BDD
FC6EEC3FA7ACA9E15FAE47CDD9B7FCD2BF0EFA10716F08C0AF25FF67CB6F9598
C607D2FCA452417D2C69DC808A9441A66492394C3450BD30632AE739EAD654BA
4343459CA36B6D5B2C12C39495952F2EF93D82C73E33236785A79609E260C4E0
CF3A3C950DE71DDC3939D42DB1CB1CA917CEAD56979A70F8F3B207C805319FA7
3C000AE2B21D711A6D78C7BFB901334DC06F59EAB6D94B507734C27971F8458D
D00193645AB92FB8FE163D5C51AE4F40BDB4F2C51691E76EE0636F071F37AAA9
BA78BD12459CA499210EB0CE2F8BD317387797C33F5933AE7A6264DA06B4A6A6
1188326147A16B205D1F965872DED7D8EDB3294FAD2FCDF0D423329E9CCF879D
4E0B966D509F45527F7609DD09694D286F6FF7535EF8971B7DFBAF608A19D442
C133207EB1152ABBD11C455D0977F66A9B73E51381D1CA4B66E87C0C7175A63D
80C699A052F00C41DAEF42E7A40E07B1B14107AB0787E24E17C1462960E3C54C
AE73BE4924464FB177EC62F116B2822842541543EFF7ABDDEE197D6BD8F8D4E6
59175D8C5957550B70BE775AD52FFF6E7C00DA7CDC16E1DF7446BB5D8FD82647
3E9F87D5EA365C82A2D991321ECB14A9E3AEADC5A56665DF7072D6DAE402BCB6
14D92B17F9E063E4E9D8D239C91F5C7C0BCD2FBD936C9D4A0B57659420343B59
B395BBD1AB5B6003F653699D57E7581F9813CC98D4F072FB78899D6DECC42D34
F2787EDEA64058B46C4BFAA2BB96E9BE5CACE8D91E4C080ADFC0FA0D4A29C6B8
54FEA9E11DBCF53D9CA40A21AE5076451EDAB3593E56B6D453DC8EAB8C78B588
34D4C4F36861B5649BC1E9F3091E704BDA7613ED45C911DFECA74EEA05165191
825F95A947CAF382FBAF01F3B8B041ACCDF39718D7DC5BA6CA12BB20EEE96439
BF2E2628AA3BD2C91998E6247A690FCB0CC95F286F427345CC4F1115BA3A6E54
4743355F2CC991CBDFF5725902C1F5A6DEFDC8638A26EA456C33C27773D6214F
66536CD2E44FD253531732D5A8C44B336B1BB47B0477350EB8CF74889B93402E
2356A9CAAFCA562315D8E0B3F42F08932CB87BA2499A875AFA08D11DA73B38AF
F46D03B7F639A8D7BF88CF07FFF4E91716DCCE6E2CCAB60A64D5E40EFD8B336A
1BFCC4CB04F49DE1FBDE7AA5B2092A6EDBD913D161A3271AB6411622D0E14416
37F81E0102F5B0F2F9A2B27819E4BACD7C50E29D6291AE5B0973C657761545A6
741729620EF2BF1046B3913399C10982EE5F4142CF461EA31042E432CC79A1A1
39C607D22E45A6DEC008CB4BF6007CDE9DD5802B49A62C8E02A6D448B64177CC
887AD71D171B99E7ABE2085B37D90B3BD8513995D9A57F53184DA474F6DB5E49
B73E04CC214EA5398DF7D7541F94E623E8687B511640457A48A68E9D9D6584CD
15B57CC044D8091C771D175F2EEDD411099BC8F7B4317DC503BB5E405AEEB526
5E6E1B1F2705275D274E012A98F66075CEB90AFC648B964DDC0E9C4AE7B24CE1
80B051022E5781A533A21DCFB97893847D685137EAD85BA708A7E118C72FA839
A9E460B5D17365A0AF1F53A98319FB64A5819B087F554BC056C4BE44113A5404
BEF759F890C1CA5E7AE156F4F8106FDB4F8DFCCC640976983EADB30976344048
2A86D7B2AF4A01CA736B98D52ACE392AD4BECE7E61C710B08B66F01857CA460B
B8376E257113E10F6DEDF14CE2A4E6A99ECBCD302C36CADB713D849EAE9EB598
F29DC98531D793B79F83091F9B136809E006F34E423D528CC4309AFFB3EEB47B
9A9DE4D5B25CE953345C326BCBE2B4912641780637783084D3D12693F8135483
CBB0AC4EE0B5610D7CEB7DF205830BDB9BB404DC1B28FB0824CC187B26C19A91
DA0025EC739BF3993700101D042DED86D67F5FB87912CFC51AA7DF53F2162D62
6314A2CE13810D0B8D81F45771391A236422CFA0F35F7A0CDF14ACB2724AA57B
7C2C28D53029B1146558610E0CFBBF72A85AB9BA308F846228F299F13F68E8F7
D963B2EE9EF7D4C21690632B640BDDAD0556EFA4EFBF035F13377ABB5CBC280B
9E0C12AACB153C93351E5BA95A7D149010E204950A59C7FC6581D9703468C1E9
EFAE37E7E6ACB892B3F8D1248D9A4A72F642FECC5E0B25C15EEB921EDDE84D12
0E524FE6133C4921FF4921242392C12FBE69744D53739F7E849C1B96C4020AB2
1FF10DEA608F111749E2FBD8DBCB17F353DCB3075B4F4B8186963EFE95A76A10
85AA5BB6DB4095291974221829A8E436680F4860E01C3843BE5BB3101D0869C0
EFCE08D187BC04F58C7A450A59093680A0F09E8E3F12DF5223E7EAFEFA01978F
D8354753A68022CC92C71F2CA732DADAA8A466D4AAE5999B0DC077715671F518
E6277741F44AE798EE50DF44CCF71FCF8BC71F76374005FEBC4883C6EDA854B0
88C0C2B476709AA809ECE41AE786DB1A32B3FBBCC14921673578D3514C8CA842
E1FF90BE33F7B93ADF6BFB8B1AFBBD080783BEF056A6BFAEF676F7BF9F2DFCC8
01D255A9F0391951210D60D4D4DCA93AA858B38C0D7B8FD740D5FC6F277C2A68
54CC2DE1F40B6347201FCA2A0A91822708D820CE645C3E4E5A09FE25721AB33A
97871ED448F38FC5A349D81F402B34461D840D5768BFC6849439AB6115104F78
B87115B1DAE12542EA898F86ACE247709817850B067F537E6137196101D46DD2
D842EA03EF4501E34074E8458E638ACC4EB349A7430AB035BEF2DD4CE00554F9
18F9FE32A55AC1E7E50D64AAFDA278D77A7149C59DC5B1E3064A4B281A54C9CE
A5EA94ABEAE4C6D5674C208ABC72563976487136AF2E21F835BEFD232D7F0D13
1D19932367F51D5379934DA7F1635AC51EE5CEBFA63D4D32F018DEF13624EE62
31DAE68A08DBE3B4FDAAFC75291C8C6CC7A657E3C7453C7D1461A36E88E633D5
408253B673AD87A9FB2D0F56DF1305916D14D5DD62051E27BCE09CEE9A1F14AF
1D7164BA5FB6E6EC8D38750F7E28BE330909F303ECDEE692E347DE13C8C2F82E
29C8BE6EFD76546F362A12A1C2DC12389EA95ACB4DCBE95620F0C193EAD91B33
BAAC5801AE827B9AB3FCE5D11D1D7854F8FA8A31670119CC0CA98628F801838B
AAC7EF90AC5466BE69CE3E3CD9951A5EB9AC08014285422F6DA6F6E221BB30F8
0042A11F2E4B765BB0D142AD52F4D85785EA71B2E1CE20728B9E9306CE93268D
99B822A5AB5232EC7E26EE1160850AD3905864A01357F22722B6A54D4EBE58CE
480EAD9FBF068EE965AC4B5FD2FA8CCB91ECFC6E90B9C49268CA0B0FDAD23ADC
D5A74B41149BB08454054C451AD0DA4CCF8B60F2EBD061AA03A011D548B6B481
FAB00AF9225BB5463F27FD67333FB51F8664536267E95CFAA0BE3BC1B8F889CB
587A3A4FA2B45864F07E11372C9507A625C0030EF7030A0B4D931BCC48F6DD51
A4D1F63FDC4B59C1CB18E6242E9F4B4B8AD9755B870FE60D640181FB7EB8120C
C56F51DC8C47FCC6318C2145EDCBEFA7BC4253315BA67FD2B3D4AF6A9F3F229C
AB75B592EADE15B1FB5FDBA1C0F786BD21A51506B7A2E42C2D086BA6F84D1B3D
AC7531545F0B01346831FF36A52CAC1E390F99AEDC265B44B0FC9C581BBA6BE4
48B723811EBCAEA5FEFAEA7E5B987F2C7B3E9A65D2D14A7B74F099401C57E367
385352D0776D2A908F7A5A2E4D4160946C5591397877025C8C387CA413EFED56
8B142E8341E349DB4DBA422A4FEE56A573972A0C66590175158E48850A9F7F38
4B95726787B8F969FDBC97491CC81CABC976CD00A27D1DFCA7CF467A956C1C6C
839817AEF8794B6151FAE9261119DD5DB787DC9D3B420FD325ED6599FACADE0C
320D54C2E0D296537E22C1783670A9D9BECAEC63853EC2F05A990260DC189D63
7CCC0BDDF2CF7585071ABAC14630666737041194D0777EA4292AE60BD7F7100E
DB568C90F0D899EA006CA423CFFD6EC70A5D3D8AC43C747DBAD3B02219E47D8D
DE030631F4678C357A58ECC52782B31B50CFD44EC33F41585E51B27E3997D33F
461BEF897220AEC80007F13C5A1EE3A0430CA899047DF944831F8B010A7DE74A
BFD26001472DC00CDC9F17CC435F61ADAD4E9AE062ED477FC621FDDF9242C449
1BB3F77FDD1519A251B663A693D84B42BF0962F537757F38CE5C5D56B98AB10A
3B70C8AE8D52DCAFCEC22E7B09D3C4EFDA1841C74CA975E4F8294F7BDC796500
0ABE197ED3737A65F7BAE601C91DB3983EAE11DA3EA18ABBBA3650DC361C2E77
EF9F97618B0C337A906FF39926D2B0B7883ABBA650816C4C6B34EEA836994EEA
AFEDDE56E0099D0E09EB88EB093544B9BF4871200746A0409C475FC4232A38D8
F3105B0FF44E4F132378DD12D9E796412FD0F9478322215E9F59E69396C35AC4
097C4995B2C3BAB2DD04B1A7097DE16DFDD76465E79ADEEBA90489ADD0914EBA
53E11A43ECB11D072C68D2131BE1C7C43CB9DD5FBA0A67BA43D6851AD4CD3BC7
39AE2E22CCC183A56CEB71D4F9F578518E376426E42B6390426A8434B5A83E78
77A5B9963BAECD5FA5521C2A29418764E4EC1A72462B04957F823E2817A7F8D0
1512919889500024B1C42EC107E8B8533C0B314EE4E23313A4C1BDB009A2073F
9BAB479A3F9DA76CCD65629CCEF78015ADBC2D0D124B3BB2D322FC4D209E417D
84BC3C758B6AB64A01E25C9C7B71D741AF90A19A339F99A0BE9FC39622F04C6F
737474CFEC19C890A657BCE192B9DCD8F273CDC5294875DD4507DC5723EBB357
73DB0933927DC21081E67E5DCF4E41FAA6E00E8DF04128F86348FB0718068FA9
918319C4EE9D090CDF348153B6CC48648C55E889B4FFD3D75466F1B50C437546
7DD9CF20980B148F60BB146402DC0732A27F255DCB859CFB6F9D329C12FB14A6
7824D6DE27B03FF85BC59703A5D6C5B7D1CEBCF3C3FCD71D6D6F0311E41BF8BF
0609D23C84720FA9EAC961C9D49C2E962D9618C32BAFBAA8CAB0B2F616E57DA6
8CB44C5595A22E12E3707806FE0978DDEBB602329D5AB80A8E05BA67D022BED4
AC8288BDCB7DE042AA82FF31930E7D4A98B6380B145BC7311F51DDBB33D69AD1
ED313749E436516518F899F7CE5AB22F5E79CD6F956FAA65BE6C2475F433A600
4C63568887E714275FE81A78A78D05D34D3402A650C64F4CDE20457D707F126F
A800999ED6E2575532E07E17D9C9E10128AB21FF28722DE740420A3E9DF26808
6BF4989F41CD78E0A2C04E7DD0CEE79583577A6DBB001D2806861433595EF4A4
6D4B724318C151B93F32EAB0095123315F9372A92C7FF940F4531CBA75977587
70C3A5492D91339DD70ABD5D0BC130C2CCF12169E8FC4935F5DC5C6274A58028
ACE466A736A7C3B1E09C29094F9984061CF2445A59359844FAD8656F73BC6121
3947D89180EFE9AD3F4937F7B1DA65FEDC58321E6210F971AB5BE343F41C41F0
AAD3273533F01A1EEF4CAC8087F09E97B2061044BB49F6E379E8E44D643D2AA2
22F2151CDEC61A510D5A32F742A0ACF18AFBC981DBCA44E768EB6C987AD9CE20
CDE13E7594B4BA75BF7F95FE7779A401835E6036DC168ECB9DB0B105B9744D53
8B6B3F0A3642DB36351F6794455195ABB69AB970EE13178C050CABC53339E8CD
F19BDA1BEC3A3AD1F192C5BA405D8012CEAD9C2B20E3910CCF4FC35322A803DD
057565AEE3E2E94258631705A0249D2D30925B99A69BE6309EA2E86304025B50
548125ED7C3F69F570B72FB8F5520203319C98411548B1E4B658D647509D4C66
B09D0E760E649B00C816ABF68BB91075F9914CE626DA64CD2BD9533BD16C4D36
5624EB9A70C92BF2BD39FE8A9BCB7928D26DE3DE65F32FF987949D9D5024F13A
305AE571193D98D923B8A75B77571100541221CD0CE00EC175E21396598A2537
74683AB0ABAE85BAD616829F413DBF6B1AF56B5257CD8C33B25B93DA7185CFEA
2CE3C21E93F5D95F710DC8AB5927A7C13FE0B281324E85925D3ECC1365E02258
08356CF900BD52D9F495F8FA235CADC4897B0284BB5080C003B1DEC17A8FD6A0
ADF7F65CD6E18C61E3591DE0E130610B9AAD3FEDE212F7B21B2542E8E0FDB042
C4324F797EC7F9C00EA42C3A1782FAA46F82F40359A59EA993BA904DAEB3FD79
A134FE13C8DC65DE85245E76784F24561969EF5567D53F5FECE28D50C26317A8
9B7A95E38B6F6DB64C2A307A95D8A1044DC2A8D7D8F275DDBC720E721C532755
0917BA2938C5F7E8288CF0059B2A56B50D8A9864536BF3C554A588288CAB2243
E71926EACF60D5E7D25BD0836BFD330C4089EC8FDB0663349C9F3B0651A92667
DCED2DA7546DD3E0452A4AD927318B77128390C6AD0E54B8A502B68137C211A8
79A1A994BCE655B1BEF820238A697266A28C6DC225D2973BF8DEB3EC80F66E8D
A64BB0AA6D1878207BD2D287044899895543F53006611466860A293CA7C2F61E
E0341C24838FD3C852BD76C879DE5182FC98ADD44640348FE80D812B15441258
4512FC6628194AAA09A03911CD5076CE05DF03822414EF021AE0E8E4A58546DE
D8F9C933F229F2CED384FD327CE2128CB39513843EC9CA2AEE58EA17F1EC2C3A
58CE093F41D149718CBECC5CFE081D1EDC20518D6646620552E7B27EE74A03AC
BEF2CC6D52CD20F623443DF8A5DE5514E1BF944B36BEB6FBD3D573F814BD11A8
99C877A1F71CF5519AF25FFC996F3C26C1BBF9B16E946A5E09EE7FBC833E42B8
20AC941E3D2BE1CB8F0BCA24B2769079BC1539C0168FC859EBD97AD90C57B6A0
66A3B25C121167A76088B22F406A13BFEAA6E0E9BC8B657A6490527DC7072E0D
824D33412E198998C6B983F376C3FEC88496D68EAE075DACD9209FFC28C4CF2F
7A8B90D7832CE3C610185BC34AAC6722D5AD917ECBA3023C096585567D6EADA6
0DFBB8B88AEAB62CF715333743DF37113AD79AEB76AD993FD19F6B259A8D2401
D441C2C3C85BE312EA7D878CA002DC5C4E117D9BEA8342F84565C98E88977C95
3AA66C1ED9669F45FEAA797B45DF1F2A218F972DAAD84FF97E94EDA4FB389C1A
EBF0DCE6FDA0133A142A7797DBA71299D9CA9DAF5FCA2DBBE047DACEE1B0FA07
13F86C1BD77994C1F2BBB037709082441C1F177415E8F93A6740638A2BA86E98
BDB777C2CE9C572AE54A209575B36862B4A8864A8882AE9CBE912582BD19212B
626B5AFFB3627CBAC68F3319B8B807039122452661DFE33151ED64C9244284CD
BF2574AAECC80661375C3062224C5EF8635C7729CF4249A7397A6BD88F145164
C7D3F0C41ACAF504C64968786FAA608E85CAC17CEAE8EA59B8B430A21C8B3FC2
209A06BDFB7FFAE88E7370D868CC596E737AAEA2F8B531763ED36FB903E958C4
4B014BE472ADE1F63CE18A421DD9CB878225110186EAB6DB5C6D2A3601452FC0
DC43A0AC94326965ECF17EAE8C172F3DF2E79DB8BB4B1A74158FFB1D160B1B69
DCF812368D5D7AC2EE583A59061728EFB3E131B423A82260FA493D6EA53AFE16
FE211A2F753805468193CB31B76AED8BA4897B9CD837E5164C258637FFBEEA54
BECDCDB9F1FFAA8A3AA97539C067169B58136280CD8AFEC9F040A781AE7440BD
8F71BD298AF7CE77E5E5411A7AF4731FA67B6F2045CD8C6167541080655BC2DD
63E9FFF571A201062309E641FECB2319BDF992E0A4119CCDDEFC48ECF252486B
8F72421EE50E188D3BF8D63E158B463C82246A05EDC0CFB49F3AB5603C34D0C9
1B0EA98888FD6ECCE601939DE28F0A80A9E5C0CC05E912D99D34798147A34196
72873EFCE4E6A6BAE24FF11C3897B3A696F4F48D25B6ED7DE31293CD78DBD26F
4DB3F816E1FE788FACE5E29B5ED48EF9F20CFCD21E52A9BBD4B2D4700832455A
23640C1AD664AE40A3AAA2F0C02E64BF426F41303171974D334C4068289139AC
7BFFCA7426EF1C263140B0062DC06877B9C4212C9D709724BEEA1FD4FD0C5FE3
8675D0393A723E85AE3A3B361DC9A5F560D5B41F2A1FEFE314F18718EED294BE
56A5FFEB6639055B1633ED4B02A713292F469EF6B2261A49E24F93CE0A21C97A
40FDCBD420ADC093F7A59942ED09A222DD4884EEC09677903B91B970329F8270
529FB480D95BFECDB6BE2D813CE4D23DCF0F52F16F844C901A8B11C62D1877C3
D4245559388260CF98E89B5FF2B81A9A9C47DF6D3C5154E08325142BF70C308C
D2FEA9D18241C4D7A9ECA99B835A548FB6394BD9DE84EE9788371C15185D85CF
2AEFFEB0AA1DA78A000CB533CA47520E650F487754AA015AB07908A170AB836E
0C024AD30DA4EB51B2069E39F65B5C9F445458559447974E9487FCD1F1937DE3
24990523FFEE124D7B154EB46E84E31588E4C32A94FC7CB423D7217201B05B12
419AD5F97E24AAA9B9105965223CE8FE29DC47A6F93AE5773033283D30663D7A
33C8D56967CC960EDD8306DDBADCCD051E44A5CD308B3CC60791199B580CA39F
744BD9612F467907206D1FAED3DE3BF0A75D4BB91D39885D8B4B8377F6A19D5F
370528ACADE9CEC321492836009BD9D23E25A79EAB0AE8FCD97C6F9C8612A31F
D93D02FCD4B316D7E1A42C089027EE86504EAE86B7E593EC2AA5CDDE18C561D9
89C36964CF1F133B32046D3B933697CA3BCE32545865D7A90BEB9DBA23FA0BD2
AEBE8D4A36CF3AAC03285EE032D9D5D6BF76B3418E1A98D7EEFF2621C6A4A3E7
345D3C77330494611157592B2BA08FBB4E121F8000C9327FDE778DF7ED7C91AA
FA623F8D6E7B578FAD6800BA7F067CD7448793CA5C68E015DF2F3302683016C1
641180B1AE3CA896A4478B2E49D0137C7852E85F8320573EAC3348C83D68F561
457415F3AEAB520FF0DC421ACD5EFF66EB2AF12E47DB0242902F7E657EFB7091
2752B0B3DFA686D6F655E6C42B3CD121471DB365E50A123634D77C031542D590
98F87716623C83C182F856AB3148CB0F902D24E40FF9672FEEDEA1F0AC97C7A8
FD33D6DE5F832F0D29EC01EE91FEA4051A252328628CD1BC4D8F6426EB3CEB55
715A5C6A18CC1064DD1CFB649DA30817871FDCA085101A6F516F34F4CE197495
0A28FC51E6FF61543E438A7B4452A86966E00B297A4796542550C5EF58263505
7990DEA8E620009A5BBA88FF26BD236D6432C7690DE7A82065738BC713B5528A
CE63B3D35E14EA4395ADCB4A77609CD15011F6B0A7FBCD7278BFB50DBE5EA7C2
6BE2C85890F7700E224AE1813B2F87C2D1208A4C73B5AC6B8D4003C62CCB305C
2626832FD65556FF2F37F7045C793777956E984735F5C36A977D843DCB5B306B
E8E7AE10254C3A4F2012BD6F414D9AD6E4D30541DE557D33E20632F62E70C505
19C0BC0427582CB5451EA06A355F15CFE5C49B6C1A6E7BCEAD08A2DC7C44E259
89C7274DB39FD883C0C7C9D4CD4C128C174BCEC6ADC8FC15A5CF1C962CF4E99F
07EFDE447E05D602C89E35C156C022E5421CB61CA652B5E192E691A1AB1D3AE7
06D38EE4B7C183A7041C6A287D0C6D2BAC002C43D01D76514B61E0EC111E7A65
7E9D94508DF5A930C19DCCD2E63F3F9AC49CB7874727DE8091C636C54459EAD7
6040CDA831785F8CD5CC3FBCF023F7CFF203EED37F92456C2F6BC72AA79BF8E1
9F14D145076BBB7A695542A20F92C1F3C5240BE7E2F3924EA01995BD0D804C9E
17BF076AA6AFDCCED76C14F99D08B860E79D4EFEF1CB7D95E3906E5A599BA20E
77F7249CE30A83BC81A9A917C8F5F72F753FD9B59F51B756B242CCDC1EA99B54
DA11424ECAD125256B8B1528360FF09B6C7CB20205B37AFE0590E295E6978F91
58EAC2BD7364234D5DB149B43057AB19A3CEAD7BD6B331EFE4F405829D6102D2
0E61447A650D671907E542EE82F132EB7FB82728B3CE0A37F6CE7C8A760357F7
9DD9F9B0A1EB7586E7B855F986337596CE2CC79EE001E630C93EA16E0EE5EA92
BFE636DBCC517858027D0638F9064651AB389A9559272D6E559AC37F2BA310AF
FA57355A8A71348900BB6E2234285F55015DA31298099951FF6835474423252C
36EFE31B563D10095EA311C30A83E69AE0A03E3796559DF2B27241A2F611F778
AB4B75B67B2671BACB955B16DF986C95258814D4DAAD9AF90FF883E01DB117FD
B10C9DC7BC1BAE5AC05C084FEA9540AA84520DB01B4C00E17B98D6AE48FEACC5
2B57A3F1D4A03D96FEB71C68380B254778B03712F109DDAE7908FEBA682DB616
CD1FDBECF23D66FEC5DB98648DAA0313EDBC6211C1B635E7F05B9A6A8B8A9A45
4E68A1FD5A58B31D4B1A1750F39A63CFB612CB0066B5A9C877D4DF23F9550D91
2CDA4939EE99D02D3FE7C095F810D1D8DB20A3E5B84407C2B4D2B953D4FBD6CC
2994901E5D757E22B9E6A025C6FB671CB5A6030E46997724DAFA92C3FB952C77
8B7016770EB0DF81DEBFB946A0FDC25A1C789D160BC3415CC91B9D9700BF01AD
BFA3C18EC4503D3F9D4BBF88B74AE01F02347EBBFA968EDAE4BA7DD819A4014D
946347FF7CA64CC2F7B1F42940822AB2FA4A1CF2516F9D1617C8D293E91D2233
DB014868416F97683E97F43DFBE05226929F47814703669A276DCFFD6DC513C1
864DC9C10A1A2DFDE8160A95504C5AC80427CDEF9A4049166FEB41728554A284
2F7FDEA0E7F54B2A2C90870D120EB1784B9E9D4F885F340192C6A6BD1B8EF587
3B8F0464137237EA1240820BD638E45E2932DE6EBB146659D6DF6697C42BB1DF
AF6D1B30C9499E85B9217174968CFA344BF3993F441919A1317B7CFAB0344487
9E4677F92EE8E0CA4C0E30764AB55F9E6F0EFC9F2AD374A42255065D6802342B
25AEC94EA4DE7B64E6AB9C524D0341A0F7F8B03343434E9F4D579466FF9BD85C
2918ABE88ED7F339FAD792B259E3DB80DB56E28E37B8A13C1017D3F24FDEB2E6
80144F4D5383159225C6D1888811F64EB784B055678F5D92703E6BBF736D4709
47E0DA88D18B15749510D03EF117AA5D58EC6C525603DC3B6DBCB214F7978461
BD86DBD58F850EA06564CC683EAB8229EC531B36980DADB6CA3253FC2FFBBCDC
0678033F6857BBF9BDE7F7162AC51A6AD727D9ECE2AF9BB9AD4A799B729D5E50
59E0DAAC08B85E3E23552C1165F4B1C36CC776A908626AE1304D6B213B2093D4
4536494D0B07C2BAC1E205FA918730E746B5F0788A96C81DB0A540ED2A15B2B7
9F0DF731B2037A02A64A78CAC5731F6A1842265E4009F0F5230B633B2C7E8BAD
04A728166E052D02B8F7BD1CC62DA17011CB1F35BD95D32F650C429AF024EF5E
09447C0528BEDB56744970873B31845875F4B79E5BA34E493EA5928478929D4F
26563B73D4B30A95F735F8167DDDF5DA25228C24C7069681DE1510279F4D128B
21CB1243A1493342E6E2AEF791357C712BDF139DC13B828B69B864C5992B53DF
025DDA8FC81D37CAAB030A4A20E2F529B641897E3DDD87C11EF838A61FCAFA2B
40380B640823C7A973BD17329540968782E14F1ACCCCBA221CA54BD47B11779F
1ACCF6E2403CD5FC19C8F3C23570FF31646DD2F13602D890E5D75C0F1601A905
95575292327C512646E2C6E6596ADF25B6DCCBB051759526EA5B753C670C2E56
E64A8A59AB2016A7D63F187D1B3ED99E87D2FF16FAF393664A643FA92BD43CFF
F6D00D58395370E480E7872E888DB6B41516D1E7F63480694DC5B6E0749BB2CB
77081016B4FA38014663A26DE230A7B8ED5F9C2BED3E4FECE484E51604A29B6F
59EADE6764485304777E4D73D9CB74D26A1134BE120C09653961224FFD48217E
935D273C2E018D43509E1DA85130EF737C92E211E3CE42C3A93E700353F79F7B
862D883090445C6DD0362EA6979E69E6805C9680F29CC628E127F07C372043B3
52236FC1085DBBA107C494520756D5F25AA444CDE5C540C958F7701F47C79682
1A5587B7C4011D975592EEAE7A778E1FD2BDE765D68FE7FABB7F7D516C0D5435
A1BADAC7A8B8C3EBFF678ADA5A02E322CA3BED9120064C6215C99B02A56EB179
D2F394BC3F155A48810B5577FF191CDE952437E71838448B211A37B0EBD7C755
546D7578B74F474305F0571CEE0ABF425D9B075C2992FBC744E050439135489D
65A12DE753B7CF45C07EB71FEEBD348BE2A21586EA347D7DAB82A8656CE58372
57D523C26BD5DFD3FCBFB21ACA38068CD85547A9DE54B60D2AE42D2E8FD37DC7
90913750C8008345B3B08141DD5CDE6922B67B1084C997FC5F01E61B2808A4A8
1314B10DCF8BA23ABE7B28C5A53B41D44F9A5248D99763AA63CCB948DC234799
9025F16B993F8F6FFD1A39B64BAA328839A0B79E8DC46156E36B1FB14D1A83F2
BFDD6E5C926CAFE71263F5021F04ADAF1B24FEA0222264C44C8D03050B12270D
FFCA569E7C37C980D9283FB02E3CFDB2F504E64F5E2379A9D65CD7E626DF182C
69CBDA278BB4DA16DC8BD7A39F012782AE5B8D8044706B85B2A7055B3C537586
13C17660056DED2FAAEE27DAF9564389A94D76F21C5841FFDB2CAD22C882CCE9
74CC9D50214351B6168565D488321EC9D6B1F0BBDE4C21E3DC8731772CF7CA9E
3DF2E5F002A1290A8A919C601CAEAC90FC23D3914E8BF68E0A144D1CCE060DC2
805709CCDDAA970DFC34E36D13D5A3F5B44A8E8DB7F5D9D942CB708429263CB4
C524A0EB4BEB61EE34F6B0FE19B0D3B76101FBD2DD585E80570C80572D13FB0C
50751F3F76EF00CD04A22D486E5E61E3A781803FC2278B5B7B9CB5C2788664BC
2B2668475FB8917FD4F7CA52627E513C1D0A56501F02DC549BAD624D9A17627D
52F692A48F2CE3D62E1B894F6C1251CAA7B368E3D6497B705DC48683F8C7EACA
2DE3BBC29B4F00B14749D77E5A737CB165B466166C2486CF2FDD3C043B160230
4A4D6CAC7C3BDC998A4F120A2EA03231B1FEE8DC8F325003BF6FD3ADB4796C52
B29FC2CD0C6A7AAC21FBE99F6738EE12EE5BF3566DD829E6902B65EF9E736087
DDF00FE9E875B6626052787B2454FAF2A3CEFD9CF9804130326FA79CD9D58EC5
E1145628EB2984BD6FA1E5C6F36FFB43351EBE65F3A2D45E71145A4439DDABEC
12ED6C2A0251F166017B191AAF8D62889A4E21731DA9C2E73DFB5DC5DD08BF05
CC8A63B5F8D6A931E1E55FF93C6A10BFC094DDDA21A91B34484C98554F3F3EE6
DDB6F44BC05242E30B188CFAD17656918AAE334DFB918D3B0ACAB4DD39D7D76F
0934CBD40D30D173E6321F68CBE20F2742469BB36756637E741AD81B34C0E2DE
9CBB367DD3F9DAD545464AEE93208D1FF0488D072DD4F61C62B37E0B3F255EB7
3118A4D7586891DA00F3EB9DCD41C86CD55BB238065864003C08167CEF7B9346
2B54B6E78EE9EBB1D500AF0457CBD7B591727745F8A20112B0A6BF3DB2B17C29
8745460C1CC2318F4AA09F400EF497DCBFB417747E464C04C96075F2B5980DC5
13E61DD02B88DCB89FDA1A600EB69A966A75F06AEC9D7C5E439FF4FAF906D9B8
87F6F553725AC86851296BF6F5CE875A3B33954ABAB9C5529CB032AEBD944F9E
185AFB54C0582B5321AF6C3FF776ED790E1512E7A4BF9B977ED18A5C7A3823D1
E182B4C08A5F3C77EE1F020770A353F4C28036A2293CD3F70EB2F47ABE37598F
508052B373ACB35A8B4F4975A5203ECE3003323A7AB306EF969FCE1B98BDA0F3
D52C16EB06E6251B56F4ADC4E2BADEE4E4CFA028B6C4EB39F28F4C1371AB9BEA
979E382E024B46F36F3FD472AE90EA4AE7BA33F42A18902C9593E9880828436A
8E8AE4C9B58842CEA944DEF11AD00C454AB7F3EDC2466281F32133FC7D2B7F1C
BABFBE844BD9CEAAF15C6F3E3E0F91E3C2C27D13B43C91B5E86B6E3978BFE395
A21FC3EFCDF7A4ABEC6941E990DD8BEF574A310AE9B927AB621E4F14362A0537
7744E0FC8D9700DD7B0A0F8D3ECDC35E17D1D562C2A0E385185986522E85FA14
FFD03E621D1F04E2FF4AF2F476AB9C71156009CDCEFFCDCA69358C1AB49AF15F
FB4C63A8D14F9B0341039ADF9A217EAA44513A1DC2DEFC5C554C74073B232734
C6E798898BE0ED9B9C40088B4128DA63671EC15AB7D406639E1D936618346776
97A3D9E66D50DABEB666B0C401EA00917B41BF0CBEC960B91B3A444D8A45F741
4CB500189DD0517A10F81BE4F2BE4E3F3E13B37EF3A5C13AF38CB39BBF933662
372FE843423B04AC0B5A5047C6E0449590642467AB661027D0ABF085A0D44A8A
9FBFD5E21213350C6562E4DCA87341BFE48C07A68A122AC64AFB6CBAF837964B
A0F9D3178CF4AB3F155A8E889FC718638EBAECA3078679736B95F02A01108D44
997D33B29F34D44C29DB670FBA9EC11564D7F5F66E757286BCC32EECD2662AB1
7E0F9B25F3B83258CF377EEC31F2E43FE01CE00B48607C29E1FD3CFCC9135839
6E94CC8EA23BDC22A0178690C0B04284A0886D14214D283612A039AB8ABE446D
010DAF3B129CF976C25C08DB483C4640CE7927B95D509C32438B7F6E164C2A16
FCB6CF3DA9E75B9A499DC397748E2F4AB64C05ABB9C774CC79446063F268F600
B77D82A3D52CBDF4EAE3D5BAED4469D9A678B69B8F100A6E026964FDB1D093CC
8B27C5EE391365F0AA2B6F1AE0964C2B85CBF35B6A129AAA5F59B11D0620C8FC
038B1FC3A78BBFEC50519A3995AC68B80E6A7B78B810964A014DDB803DCB998B
04E703EDD8AF3D37D6A5962C5D77D3ECD24BCB4D28F2F8704C46CC77FA9176CC
FC5BD40026EEDF80FD08A361724E10B100313C8C0F09770673B29120DB068CD9
071E6F8FC230C04FFCFCC98018656295FC826FB4F8C07483AE7E81EBA0D360A0
8FF4D0E9B344C34AD80E456DE59B9D58F875201A40700D5F0D19E25AB6769AEB
542F723384C51E54620E39043C9906107E03A2777DE762B6331BE16D2C0271D9
AE633BA72330B9597C891EFA3F80F6C7813D66FBCA6D4B226570340BBB756C34
10BD79A32B72C063B1DE6172B5F557EDCB34CD780C1B9A21A9B2CA0C922644E2
11F04D07D805303EC2CA7F628351F637BCA2CAE845D17910F74A52F51784FDD7
90B766898ABA4DFEE62DEED97A777AF634EEDE8560EA714C3EFA09664974746B
AEEB79964A576A4AB3DBB3C46D149A43901022AF385F6597341E5780DEE5D070
C4B3B93A6E9986C9586DA3AEC8EF79AC3F1B4EC11ABB137D167C9DACB3BBFE94
C878B7076F68F1E857640AF307ED3A223A3EB7C6E23CD2ECF4E48D9C7BC20021
B5B39EF338C1C7639AC504B0683B530965787A332CA9853FE136557AE5BEE8CC
41FF069AE30E1122ACC43DC0A771333B5E8108DA395D677E42B345C2AFA3F7F5
F652049C00847001581E230F4D40A9712F49EC51AF1D43A35381AB69DCFB736B
2143B543622305E16E3F3FD7C58F4D88645244C2B57C4B9CAE84852C4A9DDB00
E23F666EF4DBBA48D0D2CE2435A5BFB2B7C9EB1F20408BB14EF04EBE9A4C1A75
68CA30495F2BB7ED58A89AE83AAFA9CFEA9AE9D1CD1C1A20B80395ABA03CBF60
7D994B6C340A6D8B245328E1675068D0B7F04A6D9BA57CA813A9D7CE31711423
E1F0985316314A87D15779B482AADEAF109C2B006B65916A214A75DC432E46E6
70812FBC5C8014DE5CEF36B60113C4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EEB5128796E
46CB0AF4B537987C2ED552B37D83F393222659DB735F2A293159AD84AF082B95
6F1454471FC36D805485D619D58FC53FBD6E3F72660ABA559B91ECDEFB267268
86A75650C3919962B0139409A29F5E3FA70B901CD5D2C49144778CFFF1D5B63E
099C92AABDAA73D54689812279C95FB7A4F7E840DD53DD3197A4E6D3099446FA
C0032FD40411E8F3300A8A8934B5216B01D916D41DDB32513DC4ACFCEFE43D6B
22FEF13D3567B047C6B35C477ACF2E172701FDB0FFFBE01DD58D7E54398EF4AF
DA5A404E194BCC39BEADEE5C76D7CD1E602793B950256F25871A9760C80B1EB4
D1E1179C390BC240DA061C9D539B20F4FCFB72DD0C1E860DEA2988E749819787
F04BA7A9CC3EDBF9CDE46895FE31EF0F8DEB63E295E8826BF920C8FEAE3B2080
8C98DC43DB22C6537028798198E2D3B0453ED725B774686310F635AE6153D9E1
8A0514882D4CCFE9D2D2465513E42E548F64A50ED78AEC9D62E0F9CF61EBFC9E
EF7E90CF0F8A4B01F9F104FDDC660327BC1C2CC6028E5F304B32A46CB8E92C56
78BA7BCA00EA900B237CCD5AF00EE2F085B06BFE3A60452F1941ECFA4B41004A
B230A276087FFAA689D9C697602424CC86C82456FB8BADFE275C7B24275AAE27
F07800A56620BBF75F6A59807B6A3E546CA5DE98937770A2258EDAF9CC8FA09F
0886EB93711F2A49C15D5E5B473345AF316C64F9D27F4FBCCAD57D7D0D0B1A0F
BA8E217CDBFAD1144AE4B86CB8017A27E311AEE29F4857748B884AC027378E1B
82A1B13700DB37EEDC8E0F605B0975E31FD7764794CA1509CD3A8545A6DC0F6E
1C7BCE4197BFD48C6B56020D69F650E86F6CA4EE7819402B04750F95CAF9DD30
87C4764D4403574E6705AD9E0E1972EBF280D07715F98E65ABB50F703160494A
A8A5AC12E289CF2D906220B2303E9546615A0E247A380847DF0ED3DE484FFE71
4170D4C62BA9DC3A3147DB1D48DA2A8D5B9649141BBE104795D5D90AA454C1E9
9D878ECF5F957B2F2CD39BF76B47EDEDCD5A24E346EBA2DDED31AEFAD8BBD5D9
B2BF18129DB2B8546F9FB56EFA45CF44A5161468AFCA6EF1127CE3BF44B56726
3EE8A52209C2A49FCA5BB62E5EDF793C877CEFF1DABAC5277A15A7B1BBE0BD38
9867CA0C54978C821D33E49B6BB1CE1113D64B375A591E5B6D177A3E42525D2D
45F98A95BC94534501285318ADA7FF6A5828D0A8902B759C38088BB76CA846A5
45C90D1F6C57A80EF9AC1425E415699FF3EF2939B8FE92859F085A05262EC559
8D9CFA8B1F91DB49F181F02FAE8EB7A2BA23FBC09D1BFC18B5827AE2541A27F5
2889ADC7DDAE3704EE867A843258D9BD552DE9B8B0D605298B99DFD5BC2E703C
C2156888683F2EF7EF76E3D2AC2047F1233224146E5EEF76A3EB43CC47E40A1F
67125D3750E3B0F16A3FAA86A0FFA2F74915021CB046215C9753C347AB47CFE0
92F16FC59B70F2FB8EA21E0480E9DFA13A544888651BCA2EF6C9EB51AD52DB7F
ACA9FA17A4D78B525B256291CE72CD8E2392469D4BC8FF30DFE2892816A86B95
C2E50C1E50DDF90E37DCEFB7EC37E53EA6A525BEB63745A9CE85E0DAF7A5BC39
E277E0B7E3191449DEB3E0E96C71479FE3A4A5CCD867E5357A9C218E25C1ED80
13898B5CEAD46B04C4CD97D1BF18538CA4A094D78434E3975D168E962AB70FE6
B93342626EF81DD9402B29BAA7D6002720AF00091562205ED6B956EA36B22FBD
EA32651DA48890F2307CAEBDE021B4AC23BD3005E8BAD801177B0EFA57AA5CC8
75A6678AC981489FBD4CA2D4D8474122CD4E69A92200FD27DAC85CFD994787FD
2F1FD5349E544A90925C0013929637EC633491A26F1927389F1E876DE4848A4B
ACF08F7C784508366C4F2B11D3C31EB545F4F15E2B55634A21391FA905EAA816
47628E18DD125203A4F8E9EF8D735BFB4715B7121ACDF395BA649935ABA360D7
43463F58A341F49E2A77E1D5EAC17A0788DBD61926474C6ACA7EDE43667FCC74
ED0D3BE8A2338A680B06372211F15B3ED73705851BBD2AD9D78C6524B9197699
638173A4543C6D279081AE20EAA7AD46DB27787F7C247FE67EF6BABA6D1482E9
C107F36FF02001C1F094DECCDD1FA7FAA0B762536D2F19C8744B2BFF90B7B3F0
2A88FD24540AD71CE5BC214EA9F9A0D2322C8B3C3142DAB6A24980C03FFA66E3
9A154A7D1DDBE9AFC81FF93991E2E1117EBF3D9A4DEFC8E6F107FC5EFB0342CD
420B41920A65DCDFCEE6144744E50AD48FBAE6948FC4D1F6F1052FCB5BA1CBEE
181912E3F82E263F7BC718B343821AD20575B7C1EB18CEE6EB3F8115514B0FCD
8B218F5D6F402974C4ABDB32658490863E9ADD2BD5FC05D3BD77DA90A733DF8E
98FBB119B879BCA1C23E1379381AB6EF957CD340311CB416BBE2250A81D6E81C
3AC691F3768103D70FFB8EDCD1646652B50A7406626BCCFB3AF6B755776EAD16
EF46CC1DD04F02BC73BBCFDC64D95F9C492BF1F32ABC486E717CE9A1D0F5E2B3
BE9F4381BB511B7EE8981BACE2173FDEC7727B8DC99F0A33FE83C973E6597159
6DC7423CAF3A9190BF97B72A12C91CBBDB13FF3DE31109B39281A3ADFA194CCA
784A02F5FC193EB3F202D9F4FB0387D88454098F96088C5C98E7AF24CFF8A830
8EA440CD6719A18D2174B4730947637701EFBB2FBA3063483F9E8EA1E5217C0F
69D4D0C42D85063F79EE76B68F6328AAC83F0637AF7034155870747F367DFBBA
2C7DD8F737341AB5858D1A944F0A1DDDE572EF836C49AB5E8A02778DD026DA1E
8F19BA6E2CD3F7E4CF30228310E48E1F43DEEBC40D2421128B808F7E62843453
C36014EF06649920649FC1C2BCF711FD5B6DB6EE58BE9799BD387E88D6AEE850
DFE2329C455788F62E54EE8A5768DA6B5B8DD57E9D41FD5731ABEDDC7BE3B386
B170694B6B5714EB27DE2C0BC7A049CC6336CD83C6849CDC52E5739EC4485E97
F3B6DF8C78284E909F271C226DB408E0820FAF1BBEFE4C6AA596DFEC0AC216FF
CC65D07325B193FE1C7DE3EC157952D8339DB1782B945ABCEA1D1617F9CA9B10
7F153E3FFC70BE6F2242830B3E480C40227883D7E7130F5D672A43F182E22F42
F338145EFF7120A225AD259F1AD9E05F0C80E25A8178899C68489BE5DF390CD5
99174F981B73135B54AC71BB1C2DB4981B0282FE5001E483594F3D3405D9AA24
CAF81A0F06B85A23E1C73BA29BE40B9C78FF3A77789649FA20E3F918A2DFA3BF
52671E50C0D812255489558C23DC7D1BCF740F9A2B329D144D87559824137CE0
EF73FA7EAC99B6FF7A039F724E7008132F88F240218332C68F6D3A210B9D995B
C3676CD7CA406F22A3F6B4F3F8F56378639FAC52FC6430523F067E3B169D64F5
8CF4977EB690123B8AAAD7FC24FBA59456597E2EC123B80CC16E09322A032399
5181FC871300C55407F05B0DEE00C4998C941BD228A8A792DBABE2627EFE2C9B
087C63E26FE1BDE804711A30BE6A768F0B8FC422B6F69B22AC95335AB83DEADB
1973AC8BCE6DAB5A3C763A4E6AC2EED1BA738BA193D04DFF5730A33DB5238408
6EC8118FF219E9A908D5A4688E260327D547CCC481E43AA3ECC390B730A674B9
ACFC897750CD8AB8435D179010C93F8BC06B7C4881C36EE596E2602A24BB45B2
386DF497A67F2809B7E471541CE2D0A1DFA3F2B41F59016F4F67A80E06B5D841
A1BCE7261FA2E23879F9C33CCFEFBBDF37A6AB1E73046582E57CF6B295561788
4F95B65FC00EA0FCB111907B8A977489204FA66EBC2B5C62D53910DE1DA605D9
A9852D54F8D3940839B592455C3BC8636DA210CD69BFB4B2E79A4BD64D1E55FC
57F08F336DE4011E07CC7FB684394D2F2DAAAA9984302952600A83350B77CE11
BC01E5D779C79EF8AB2A6A7172859756E4A7E0AB5F59A04E5116FC3728098A9F
41B72596598DE27129096A18EB5A57480FC86B528EA43BD1D5C220641D613320
F2CB3B24572EC2F454A4072EBEBDEF64A2EA8102DD0C47A2A9BD666BB09FEA96
BC08356E6458FB4F019DE37830B80CFA68080806E07219A1D84B2C37129A34B7
0ABC53A0951B9A8154D20CCE5FACBBBA7F73FE53D650371C9E0B389481621556
967A521A1C021CC503B6B40C650E90E8CC76C499CEA912D1BA33DC2A21C87F1C
32B321061F00C788BC8034269FA64399192903F78553C13A02AC2A87A57D5BFA
3083547569AA545A6F38FFEDF4E54416124B573A4C3C80C9B07A7EA9A0E49808
4BAE99A4D335479DD375C8871E898CF8512C7689EF0540186B21A35B0264D38A
AC253F8636FB228D4B0C4178C22E42C0B7C1DC27320B8C0ADAEE799ED3F5BC99
FCEBCCE7CB225AF197B3342ADADD0E9443E38596BF7D76E8A810D545D68FDFF7
59B04CB498FECD32C1600DA81A8BBC269F2BF6ED06BAFB058534BF9B35B7D8BB
BE7EFDD4DA582BBFB63CAEBD7498B9F7D342B65961674C1DB14E715101AC835F
23ACC5A1996B4C0761A24C17F8EDF421DC7EC43A39EF7B9EF6E2E446C1740A1C
19693C1245A77DFBF844786FF8C39266F65C13EC8F98AE228E11467D99BEB4C1
37727F2869DB189C0304AEE4376FD149C6C73F2A88A83D1A3697E218932652B4
BA0675C91C890D0E98FD06C7132C13CA938AE0A494D4F53B447D46FF55697728
7A348C5778E6B5B2737E2B7AA6A3B6535BCC61CBC71DE228BDF396AB2DF3241D
45D82EDA6E1F8CFA1967979AE2820D22477303F060DACB40EB740B6FD1353B05
468C9E0EA26676C1DC12CA2E64907543985139821AFFA57BF707682E2F76CDF9
669D906D7B60850D99683A93C3FB3A818B3828560BE774ADD7B198DE037A3FA7
2869E837EE39C2A3DC5356318C3C27567F6A3D0108ECDA893A548F5E7313772A
E09EEF7D247A74F9B764B7C40A5438EAC4509B169015A613C866E5942B5FEF31
7497B20CE477041666473996C3B5569A2594BE8D5BFE7BAFBF9F63D25B2A421D
D762B8976355DDB3A2F12700E35E5749888D6EFD4EAB5CB41203D454381F62B3
286184B5693BBDA5C1633D726BCFB324B10D12268DC6136927D22CDB723AF6ED
7099A97D55BA83AA4A676538144BF3B529BA27E612CBDAC40DB3F1B67799CCC1
4D7B4B903490227661F458B2BCEA196FC063DCC812CD5D22F345F19884F27BEB
3388C966336A720C198A3EA7D4DD1C2C736F81396D9FF42ED9BA82BA044572CB
04E9C2FD1588E22E30D2B418CAE23C6DE4DAA462EF4E430426692C88051EA801
7A6E8B54426088974CB32A4BCD73331B7B071369DB9671E4B389E1BA7D0187F3
23ED525CC87871730E45885631FD772169B4E54E504E9B23AECE70A8626E2754
A6E13031745CF6B6D5184F9DE0493C12194893D053CEF823F65D8C4BEBCC65DD
59530C30703CE74502403068235CC86E0C68D4E7A9919E8C2B79FCBCADE2FA4E
160B72EAF9682B5B49775BCC462B8D11596CAEE99236012C1A8A57FADC2E616A
A18998D276672F7E5DD0CA38F16F483BE601C7C71E60584AB4CD83B5B6EE100D
7790EFF45CDF2CACB2EEA5DA15632D3A07802603A4B73BABA0286517C9E43815
7F02F1B7559BA00C76CD6ABB7EDB537DEAB4D1C8F49B17245A107F3667B572BE
4A3BCD76E4C6483D3B92905CBA60455D7E75DDC13EC8920C0FD4838A23E7CF3E
1E58135841EE5894CD810755277A3678966BEB7243B151E60FDEAEEE6CF55E95
796232A9CCCBCAB95EA13E0C710CD16CB7F281B33471431FA68915B8D5EA1B46
F3568CE6A891DA89FE908E078DEC2FAFF69788CCDF206911B2F4698B0B01F9F8
7531FF46E333030B5134E94EB73AE18533C7452DCC83AEF57E469AD135424BBD
D50652DE5179CD1D6EA71B5AA513373D3D34FDC491EA21CD0D8AE34A748E6922
64AACA05AF0AA4A08C24A93DCE30AC4120B64634D177181AA4E91873484EF621
DEF90F3217AD77C899FE86E5EB353F5412E762440A7EA5CA2C3AC06BD52BEA2E
B649BD1901AB494E0E8967AED2C0F5094E7C2849982AF7730A90C4A1008A4686
FC8B86916B39D2B67C33778CDB3C5B9A82096D21270BCACBF9E8F62AA62CC71E
FF6BA7D1956E19ED4576208F89A1AE0D9B15A65DD2DD246B25B32786E4AA767F
F0B91060C6114AEF2A6CC5018965CE42AC968D09C875C8858BA0561443704865
630EE03681A624CB48FE4FAA1BE0196FA44AC7EEED75185D0AB195AB87A6E3D9
DFDAEB78A85A562F309ABF2C286D85ADBA2507381A3EE0BF9D48B21CE1CBDE3F
4BE1F8203A232F71F6C19AED18ECB7E5F553471C0C6C4DFA713EF3B86BA89CB0
9692EFC9EAAEA4EAD08CF821C61A5B4DB5B2C955116F1B1577D3AB7E24795607
7CD385B04CC7A83971CA14F1F0E8A455D751CDFA8607EC8F6A8E9AEFE31C90F6
649DCB86265AECAB7FD2CAB2E3C1B39218AB174B2F8ED3BBB748C08076DC1945
E19A4AE72AE582CDD1ACD81C211C0285669CD4AC83E5E34B1B73A71F130253F9
15B3CB10D333601B9DBD6666CFB188C50460039970FCCCAC7092ABCD61AE9D78
1CAB7A7B43281809EC53C56DB421230C65E3520D265DE6182B00FB0ECE59A815
92D2C9AFC3C6DE04927B9371531FBA5A0AEE590D1E7ED214E7DD8833EFEB73D3
45333F735DC6D08093E6666C11C97851CE02F37E21AF07885E37C730A1936156
5EC32727D6566556F911D283B698048EA2DF5C000B6CE0DC32959DCAE26577EA
ED7B11BE4331ACF1DC657B85E0EC30CCD67186C654BB93C55D35C72E5A86FE15
8A1BED527BBF8692B336C967C569A700358F00F0FC50D2FC7B8B746C4B214AE8
1973EC3083D115ED592066F614EB0D608816AD7EF9CE6B39E2F1CAE5544ADCEA
B922377BF56A1163998677C1CD38CF753A971840F5742F375B359A5A93D98365
DE9CB0E4C05036B73899FAB4F2A443D1BAF9A4F31859435E0395D22FE4C4271B
6F0E1A78EC069DD488F738818388BB374F63771C5343214B80A0F9D762EF64E2
E975B4C451277C384A16CB9BDAD3FA56D82E2F08643AB028E7D299332B8DAD2F
7810A36BFE83015D3CF7C5C0BEC7CBC56CB48AF13A4606FC1600513BA57B186D
D714D7188A7364BC3BF74EAA72F03F6C98819FAA7FA81177C1239B6A6279849E
0A0BD883DE8D9798D3BB22E35C6C5461AFB399E2AB53F86855561B0B01CC7BB1
CF5E0A585841A60F283538AEFA08E6A653FC2AC0065884E2983B9244432EA54F
13E1BC55E4995CCF3A42C06E5D82678F261B83D6D2A14B6B543D9FC75072E85A
82E0C638D841CABCFB916302EF97B0FAED6C100AD65DCC4A1B20164AFC60F1A2
0C9C6A2D07C558DF4112605A8B2865384A53B48162299642C7B2D20BFCC880FF
26EBEF104F4DE795AAAFF80BDE1F35F9CEA252BE80CF4D600945968493FED1E0
854036684FA0F93EFA8B4BAE5D6074F81064DD9AA7E340679BE63E305CB3B063
8B820BBE261AC2E3007D4FDA480F21B7BC51940B4B3C0E53AB14E6432760D81C
E73FD99084CEA6679CFABF8ED32AD8439E7DD3F393D3A4C626AD5A5A3346AB70
B672A5B01C98EB95D069DAF648B3C9DFC5483C1E15F9FFD431CF819F652F518E
1063E9AE6E1D2C1A2B894935BDD249F9944E7821CB28C5748A26A34A54DDE980
8DCF50A722FD039A24479EAC08EB87E62748F5BB1E9A94E7904ADD77B9DF3D08
F5B7DC1969A6700F84924EEE61CED9308A1E42F3CF73329B4D09F61F31C3D9DB
BAD46EF98A6E54C1787094F4910CDBFED31369F6396A0D9703F471F7A0218368
4D0A2DDAD57C86069540CC9F2641D597636A1D1EA38AC6332EC7FB24D159E187
3FCBBD53418B784765E74C993C720C87A24F81056F8A2FCEA55C9840F4AE57BF
FD72DC8D1A4D85488AEE05D4DC0744F844A1546267BF3857D1026C8AE5EF3345
DDBB31A7D6ADA54C62DC216E56ABAAD77DAF57BAEF14181F57F611E467652259
B29F511D557F4B3C36709AA5A7DDA37BA83D64BCCFCF97C3A0C12EC986DEDF7B
F9C8CDC53E67CE0E7BFA2F130478C2A096270B0409423573F16E9CB49A46FE08
199BB788BE170F10577F38758AD9D749CEFB9237D348CEB3AEF18522016846AD
F39235EB585095EEE03B1315BC1DABA6DAD0F64A4F775C21E874FB2CED1A89BC
505A4A78444271B2C4166515B89FCE5D7064A01F718DE4BA6AA4DF3DC18CCF48
F3022D08BA44B97EBA8DE3B2A34BEF74B4E47F735F6779341619559FD931FB03
B9E86F9E3E652D9FDA5485484902E3692C6EB57544E797543E69BBF65AFECDB4
1A66111126B7B1A7E222D68BC0856B7239F5027DBD878B983D98E4CF9BDEAECE
EDEA018840E2AEB1AFF5BD20503BD37E132CE618E5C0FD59BEFF8CE403D8EE26
A9BA9F7F2B8E1D7A9C76C046C8D29A1003B39FFA7FF3876A880B5FFE478D9DED
ADD758FF7CF4CB6511BFD3B84CA95E696BEEA9FF38C55FCD47CAA8F3CFC4BB0D
1704FFCA66E7AFCAAAEAB946B47A32D6A412196930EEC6F22BBD0865AEB02143
C16F784C2169186E152FBE0D3BC94843B71042A972156C7CE17BF141F4A2FEEC
8A93CB56E979FEA4E8C7DF920D71630516F487B382DDE4FEDFAADB27B4C12B5F
C91CA8222DF896B76B8B78B7E7F8C9BDF88AF4E8C00D6609B3825526290A16B9
74799B6BD986A2913E817E839233C66105A888E151346C89DF072DB33B1A6E94
B609240CD7022F0DADD805BA032675F8E7213F135E8E5526F927912EE8666D70
F262200F750BF48C32E3BFC6DAD0815535521B8C9E084383A60B8A558FE039AF
99AB12D20520361FF8D4535D1757E077CBA9B0FA3BFB53113F5A517E5D1635A8
D44C331602E50A1D5B0AF2A526B127942D4EC86C2AB681D4B20ACAF83E798421
58624E591735263923629FF858CAB2DB877E4DC6242ECF4CB3A71A15808F8470
437F24D25C6D3DE68D8091375405D32F725D847DEC4C7DA4C7186A74DCBAADBE
78C58079A2C539761726A3EDBCCC3937C371BBC4F2BBDD9D675296F790C484D3
DD4B5C221A479C9A23EC94BF9FDB2DD69DD90304411211EE2158921442855DAC
88537B933F591765B984D87E16C21C53A411D941D3BB91D185231DAB3975773D
1E78488C3879D3DF202F335AD3134D1E3934DA4623EBD9D41605186E43BB17A5
0D2B9BE2E8F161EA0804BCDEC54E0F995AB1E76D81890A44
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD262BE3D172E2F03F564F1325C9F1E050C83C12E0CE3
C7F58270B5C40B46B3F592FB41FFB7F59EBD69B2F489441E398FEF7F84C85055
531D95FD21629B0E509C2FCEE995D025BAD5D3F28CDBA5CD414405ACBD936C3F
AA4CB2620D7426002161F983AE95E542EB8553AFF7E57B82E05FDD5FC433E1DB
BBCFFB1ED92299DB0291CAB10A84529B7FE279C62628A24A2FC36B01976E13A9
C528A198B8EC8654AD69CCB5C209964A2B25D6DA9BA0FFB366D19D8C69701D7E
8ECBEA88569601C80E19A4165AC73F32D0ED08C8FD0D0407325DFF60D69BC8FB
95D27536CFD07285E9FA0E957BD98B45C2E7A24AA33635C6683B801BC89AF92B
57BDBD4C4FA2979D6344AC3198440DB1709FAF1D9DBD7EF56D60B6768DC2CD20
2AE70786FFB4D6A0AD0DC135BB2D47C7119A29B2B4E53AD1E9C1EA0ABC82FED4
2273AF8996F22F432DC34E592F158A14C9BD02E007815890F16BE09C594B89FE
0808925D5EB82EEA4B40B31620CF5955993738459F5473EF57C2A6A759244196
989D53420C235868889589588B2B6AD5946EFA166CF5BB9DC8240B922ABB3FB8
E27A660BBAA8F1A3895CA22E0DC64D220D276D6FF235A709102E02E572763EEB
CF81BCF86F7AEF92D1A93D698E968E09B7C80138263B8E0DA1344618FF03C62C
7465D1484506EC7186C73B5EE8FA9A8345CB2B64425CC6E4ABB578AB04DF4B0A
4738E169E719A0BB56A625302FB0BDC72739997D7ACC733598E09A19366189C0
7416EE31DF777C5321E04F3F35CDFA2CA064B3404619565C29F75AD0A8583C08
5823020D6E5915CFB01BCA0F898740B09BF5F34E6394E7E14B1AF7254C7A50DC
2A024ED45ED283836D169CB161EF7DB88DA4B01192A278F085AA1C3259E7DC33
819F9C74C10704BD1E68907491FC16163707544C4D6DEF81DB98D9995E6E2033
E6CC70055DF1ECDFF31D6900F90D907FB150BC26D9C7A7D524AD4074A750B048
142B1F694C2C9D0CBDA8CF2E75D433FDD19D0FC47A4AB10512D00512DADA128C
255C9E3912A2E150CD221FD8F5C9B40DEB9576568D5D1128B1331C3C28288682
7370FCE220EEDF432229762C58ADE0CF155B5943AEE4C749AF2C7AF66868ABCB
A1743E8363B900119107D1972EDD2BEC9853E4109510D3D064CD4720C0F0168F
A759D34604327CE97BCF624BDB602437E08FA0081528C64B91A303BF6D0EE0A4
92B28A10684539CBA740C041DCDDBAFDE46F063847180B6DCA83529B51369A4F
AF341B41D9A9A088E3F0A568F475A85C5F14C8B3D92834DD7292AB4F18E8E86B
FBC864C63D20F50697238C0DC58F64FC252AF9D5164F3D83D7F4E796E2ADEC03
85956F9D389EE8D5BE66E663E3C07165F871243AF05ED74CD90919557A7220EF
00D134BC3C1636B58120928E425226A6B225FF4511C672CFA82531F14A0F0128
05FAA41C6B6755AD2826ADA5AE621D87CC15F63571AC53BE76B066944C478657
93F72B32A39B291FE3F0C0C7C10F30AF98D586505A8EF2B9734A21149BE22A69
49505DF39DB9C8B7FFDE342EA0F472966666F1BBB806A5ADB13793B82630C963
936D36FB63C4399992E7A2DEE133376D26A4E1843CC4C70F676854056A0BF2CD
5203AFB5194BD003CED8AE9D11ADB58E9D91126505C490B6AD5EE97585F87421
BC9F127F79622FEB80E5AF5A1BCAF20C79522415BB0A84E8C1279677863985A6
980BB106E692323F0B5F9E3DF80C65097091CC97720047AEE1E29A778FA380F9
36E650E27E55A46FD2C3259AD661F22BC4F1FA56E3DFE8452902C1F01B6B8624
1C55EE3DA7CB57124F14EB33E3D01DD6665CCDD9013F15602A346C166766400A
3E861CEAA4300F6435F869EE05A5F522B32C9CBE122EA0CECD6BCAA19417AC01
5D2D71721AE02A30CEDB84505500536C7D220276E3B65B8624836465BA7BA6A1
1A934E2ED39A8BCE230F6713F5049D8FE1EBC39C9C793F212B291B66E7D67003
98E5CCDF443F4F5E320078887C12D6B3610810BD7C466F5F43840BF14C5FEB41
7B1F1C486F2A611B2151158107E3BABA0217A1E95C2B502227FAC605E36B5296
86CB53B8D463DCF56398E9105F1F6BABE8E41843B577DA6C301A51DD71F4A866
937A6FD4B88EA1427C5A12177D0902105ED37EA410873A093A4B6F9CDF16B748
587687D8D1634CB17B74B3C0E536FE1E4D2C166B006946937137CE00F68021ED
6A2C3F135CBED3131759563D2C7730AF276E6F18465BAF543186DA462E771E1F
677131859678A6BAD41B1392EC67BC3FDCE87AF06BB1F5D4BC570F5F25E1B24A
AF96EED5C4EDAE0E91E0A82F978EB763E9CFF951F9CC0B23CB0A5F003A67B1A4
1513450186A7C56F5AD5AB54DE70DA1B5E8A214DB550E5344C1E0775DA5D1E67
158B8B36C370676451726E8A9E23BA5A19D5028809A690B86652516CAF2F2518
2210AAF8D20BB7370FE8B7432CC98BC2A7D0731FDC965E72C44D24FF8306AD02
131CCD184BD605749C6B5EE3E6C0AE82A8D4946D5E7460616B294581DEF200BC
85F270A8D99812AB58517DC59F7216328AB7F4E02942187A9AB01B191240D041
2AC9497ABBC712470E821DD9FBBBFC412941BE46D0E11A6371CCACEF2142F5E6
394AFE2695169AC539ACBDA49DF3F6DE9AFEF342A709E535E6C2292B6DA5F8E1
2B0CB268DFB20282AB99FA79AFF9C8901A0A245BAD8C2C92BAA79A6331DB22FF
C5FDDB8E8CB081AA8D6C37D932FE13107191BF5245011C24ACB395A1D69A0514
60C3465211E8D77EB2A3411BE29173551CE8A2B8304F49020CF93A40732888FC
C113872D2D89E16C9E1B31F2646EE80CF6DC03C26B758C8E6D7527DB14D3CD95
3EA52291AD5033D04CCFCE46AEF6CFDEE48B865BAC3798C79C4AB05568ACEA18
C979F8F6B0D87100CF3D255B965DF51AF0812B425D8CC9A089720927D0595B4E
706F697722B875DED8BA9A5A7D6067BB702F2DC39A9127F271BE99825D11BDB9
966A2E127A7484AED092A13CBD9A283F82156DE1327BA31EC512FAD916D1DC6A
D0F4CD4154E89251F35B6F87265C131723E4FF204F50981EB928B80A57937411
3226E0F8CAA47C6E28B04C19B542AB31073BF913B8BAF1E8062386097F761E69
4CCF7F19BDA72D98B64C76E140A1CF053E96A86F3A3142BCFC8F7B6E130A1B5F
B42AA392ABA018902A6D5FDAF8DB53113AE058791624BC6763340BDDA29689C4
3C4C2A5F360DB5024A970DEFE213B6C0C725E4933163FE44DF6E663F8C9DDF6A
50BF5B5310AB60F7A07C70D22131DDBFF850B993EAEE30DD89F225089D889C53
FE4725D60C99CC9544C117291489323249AF514B15D066D33AC40301067C52DC
6ABF90E59A38B3FD953B099F5D91CFECB109FDEA335AE246492228CCE6DC2337
CC1D3C661938DD676C66C7D3EEC03A89BA6FC6E0AD919715A7AC01058E239899
B770F8055B538AB5D6F97EE62F9BE05F9571CAD98ED29168BE8293B28D9CFDE2
057CB8862C2E7589387B69180C9FA60A077E7E43E0662459CD7BA181133008F9
3754FA4990553936DCFEF3FB6950349371EC10263530A910F7622E9DD6324F0B
190D3CFEA4C87454B54D737C6DF396E922949D26D5EFEB3DB482E3C1F68B741E
41EB962F4E852B6A13C8B7F8F66A6C4D73908753952BF84B0DDB2C3BED0180EE
CD71FC22127EE83BB2388B7A7DF36193CB563B347CC5883768810DF2BC851D13
A614F1BF4A4BB6DED4F613AAE4298C2A5E2E34EEC9FCEFEF2E84AAB5E02CD27B
682EA7EE38E98B5F819C34800168F6058F58EA58233D6EC5B8DFD78A27E99CD3
1DE42642AD3F454DBA8DB0F5B673DC09885D1A5F47D385BB42D26C281DCDCB51
0C58876D8DE862B92C595DE138AF5B0CD717DF952F382B83D818BECBA14404F9
1A8B9498D5267A54FAFC6E35BF008D188836D07549BC5C0A877958CB475E4D27
4103243D99DE51BA53377358C8C081B34804E3F038EE6B93B74B4ECE010587E1
1387ACC2D3A352D79E37CAE3463EAD18079A8C1C34FC4014B8965CDB1CC0C7A8
ADD55068B6344C0B5B5FCECFDAC3A14B87FB2EADB2D0E98C8FF64B7F7F924E82
53FA8CBF82FE9B62C9B00A0571A1D96831FD17560D8C038ACB2AF8EA7CFDA432
24B89B7F7F97AFAD8B3C5D367F8BF5441E53C7B94E86FFBBA4EBA9F935F624A1
EA051F05C9BB1CB8190E881F6FCEC258205B33D534D1E5931626E391A7A8DA79
D78CB6B63C09E3FDD0CFE2AC24AA94CD95CE9C18EF34A50F911D633DC1CC438A
B4D242625DAD7F625BEA46A2FBDFF4E78BEB2C3457EF8D271B115305C00CCE1C
88144C9FFBAD84B1FF01C8143812F2CEEC7A87FF185B32A739151BA55E757184
6143222FADC19D0F9A3E9573FE4D1AC939FBBC4FC4FBD096465A26B2930A0047
3ACC28980AAA662A150A8DD4D830D831002DBD33512C6F08EE600567DAE95A84
B2B783DDEF613E067EA43D2F37A40E52927757D960A725592CAFA7CAA2CD39D8
380A24A434381E728F780824B86F46D7EBF24D69B7C17C765B48294ADA50E4A7
F5637826B94171DC8B8F986535BCBCEA8D89070297C337262A805000AE37930E
C996A60C1BE71BB90CBEFCA4573634C1A8071776D24F8A8FB53573FC9455E0E1
1ABAEBEBA6D4390342091E2EBE8886B8CFB0624A461ABFFDBF3F1BB8936D1BE6
A706DAF7321CBDC50B7C7F9B2EA65831A7E989531E83C50DA8BBCF62E4A9CCE9
00EEE8A33D40A66FB0BE15F11966769E5FE3EAC645CA322010905A47F8167CBC
4EBF0D8834656FA4E4A43AD16BBF1E10E6A2A3D9466BFFA639C2308D2C4A5302
D8392A0CAF2ABCC2897E646530EA8B107F46F629E76855E2100580C60CEF04DA
0B3232C08CD6F036EF48F5E7A911FF2BA7EBB4D34F750A7F62FC9B2CC646B962
7EB6035E47CD6A5B2ED1DC99D76446F722D9FC9FF0F95E0EDD1A281B5892AA07
608C0B1E80A08A867898FA466A9834738ED520E6D51AD40D94EB5A016F883EE2
711C47BCCA870E864823C30209C89BF4806F0B7EB1915396E1C8B7E98A985C49
BEDAAF49859760D26E68AE389A9A3554A2E297F2043F4E997746599B99A701A0
183ACB032FFF71BC5486036E1FFEF29C3C9F52816CAD0B00BDB4214BCE0E6A6E
C3CE3B148015B8187CA6C46B93E5F76D5E6D9C1231ECBA48DDAE71AE29FCD86E
CC2788151F0E54F4651691CE84D97865A26B39633BC0F919FDA155DB9610CD09
40D4C98BCBC966FFEFC88847E5D56DA08554D6106F9D17B47C1E30857E732306
ADB2ADF15388A34D6472BB7AD138FFA891AF29C407050B916C24583209407F0C
8E7A88ECFA233323149765BC6A5FAE1F8F869DC01BE066718AAEFF2933EBF8DE
513E1D8E306FA75B07BF545FBD07C275322BE5F75D1464BB365E6CA56A0332A4
0872FDBC525F34090D17F6E93E3780A67D56BE2245A51FC800695E90BDBEB7C3
2B215F2280F34571066270D0B033B35768E9527DC805D69E1AE79BC848C21CDF
B2F0E64F53994FC31CD499ABA891434FCF648344B322735D8B7387C106679FAD
F3E2C1A96F4876369AA5AE8C5627742F1F6AAD7C3AA808E12B4CC02D0A6C09B5
0816D233F7BF63338C37B9A7998727DDEA697DF2B981760EAC3F96CF23C2DEC5
20331A054CE07D60884EFDC394738229033CDC1AD75EFB710B45EA106D048CE8
A9462D30A47F9BE791F5B86C02FAD4C4255018C017130BBED4A33E483954EED8
722AFA540BAFB27EADBB293B2664C79F0FE8297C664ED759B27810BE12AF4FEE
D16EA5F47D6C9391F413C7D2222DC0C791DA9BEF403511626ED6F3E2E90031F4
89F0C653F23818A2CE8C65C1F57E1427B1251DD10CD44527A6D0DD90DB98E3DB
8A9FF3534EB0AE6BED5B245E9FB6A564B358D1F98DC11B8EFAEFB57DB30BC9E2
A8E7778F75331A8C61706CA9B23BC9DB4C340DC263D93B9543A642A95F6D24E3
6678C12EFF6FE2AEC392A8EB4339B6BEB92B4F461D5A60E0E044F591803C7081
FB87EE168391E877093E31DEF723B63334F32125CD4BEC46395C9C4EBC2C09E5
1D7366FD8F65160FDAD36746061B6007FB6CADEB3378C8FAFB504D314E077E17
3819BABE5F350C317DDA5B915382CF99440A3050BD38EC018A734FCE644F4D43
555C9E307E3CDC894330E2AE4020BA87D31C99A1CEEB2070FD7B57743B485E05
A54769A1FEA4FF798CADB23E88F1E85684E7813CFCF07D6C1489A7EAA55E7F71
5AD692A6609D455F535C6613B45A87293F44B3BC7CF589DDD3E5923DD3D19421
5775866858200BC110A269ECB88895FB13D8124BE2270066B26D1C9004214493
6644FCD7CBC224DB475567DCC62265A6A1E54721C5796D758C4B272E84FDB730
2292C77A87D182F6047805470CF8FD9603357E8A4FBFE4679EAAD641FED4594D
8278A73946ACC18E4F8A9C4076F2072C002B4F212858A9CF299D3B63512F133D
F887052AFFE91930C32AA607FF7348CFB347444C33879A52018DC631337668AF
D6E322E40FD1AF1564B4F51975DEEABC43D9546CAD81D6F12D1FD0AD79255C4C
6CA30FCA23EB78AEB0A83E49033F9A7735371FE5A2F54679B0D1CEE9D92C6493
F084C98DB9F5D23EBA83D4F85D39679B11C670E0C1008EC3F55FBCE97C094BB8
D85E9CBE63205D75E1C967D6FACD5CD1C2E41A9346D1D89A3A580BDAE909AA94
3E00BF08894E8E94839284DA732FEB057FC5A63B53FBFB704D3D51D592ACFF90
32E07A31CC66B5325C5878871E760CFE51FF0E1E3AFDF21E4A23C69604E76179
D2E9A0F0C194C69A7706056C5C1645FA6E088D5C8663F20119641FAC947CAD9C
BA3F7C50E998772BAA7B5E661C5391F7CE7EF6C4EFF14AE35FD6D463E259C524
8AF15E92868D5CCB40CD31A408A8FBF13BA9F2F323A4306C868C96E064B1CADF
C522AAFD0B6199323F3A7CE8C00FC9129B73B61F133C5D622031D1BE1AB3F771
A634871599DFE4CFE39EA5A4D87234CFBAABD16A6882829471EDB4B5AC087EA9
4CA622024512C6A1F13E226311429638912B5813999DCA367C1CCC8D706C9DC8
27B1E089754521477D6EBA33D82EEF7B263027C81802A74AB0ACC8F0EB5F0C6E
E0BDF82D6A592D02B2FABC64484431436C622308C80A59FEC89B50310FF16F1E
31A9E66B2CCBF4645335161DE847E995CBAF39A798EF2B0ACED769BD9DC5B14C
E2F5058FD9D0FC7989EE78FFB2B3C5854149A9A2A85D0B1FDBDD9E80CB1EE921
09701FA16235C7EA366B9DA9DE980DC9530868531065C6F0A6441806DF8F439F
E5DF45FB647E1FCD26C8D21AFA23D2D6AA8EAD2153B53DA490EF981805F98892
FBB2FFBFCF52E38EF0EC7E49D81D3FB3ED19AFF9F41950FBEF3C431800D10068
4E9775F35A932BC38CD6C47FF3C4CDC21C930B62C42E8E1A4A0C22FF942B57BA
35D3608B4AAD7FF75F8C57B733C5FB5B33939E080A4AA00FAFD6DC6440F92AC6
266F9C4B889B4196B39CF4B188CB2DCBF88AF023E7001998999E8E5868F416D4
1F534D03643EF739C933FBB15D3A6E4F9654A264384385038CC7DE85FA1EC6D3
3448A3DA0BEE044CBE6E749552FE26EAF8FF60DB0069F391E668A5D4367E1CF5
32204A94348E7ED962708C4967A55EDE65F97B33DD41F5CCCB1D6C97F20D8C60
38B6EB9CC96D7598F881A3BD60D806409826BC34AA1E333263B4820FEFEC7CB3
73B6C04EE69D1E9533020EFB643B12DA09E24D48C95A78B034A5AB5D8B3AB057
44D8A5901F8F1730CA9DD98C1F8F619AABCF3375D384BE6DEBCE67E3771ABDBF
2A9993994B30C640A866845F27EAB63DBD72BC9B4213B35462351FFD37B474BC
062199C5A54BE7830A98C7A89E90F51016B070A8DF923851C2D2258A1F7B7750
9F33030537621BE3FC0B5F87FB1A9C53637E7FA8FDA3C40B68DA11ED0CE1948C
2CF393CFC8ABCF1DB4840D7328966E3FB89DE0D2DB5EB5ECDD7B1A0532ABD2F0
1FC78AD26AAA1F548F5C5A5FB161DB7BD1F0356B427DA0239D9C0D2648180A45
2C9DD1E8A2FBAB9FD4425BF7B965F91B49B5D50E5E909AD71C8948C01428A4E1
5B9861818A54D0EB53531BC0E420217E7DD5995AEA772187C3EBF12D3D265F83
672C7F256D42B752F38C16860A732FB2DDA5AF128B1619C5A662B910CF084B73
FBFAFFEF9B32935233A1F5D1A610F276EF5E7C67A39BA6CF9886D2D771C59E2F
02442913FD6F06291CF1E141C646B30A4CAC58AA8871F405AADB9B5AE2337EEC
E300954BDF2AF2E02F28E668CA2E6B49A8955C1A4054F1DC5BE05CA7A6848F8D
B259746AC8D80EE8DFF1D55354B70C0954CB3019DE3D32EC7DD98AC6522FEDFA
E758AC2120BC527AB73F4EE220C3077DE4E8A46AA9B8480D5A659376E146F9FF
46E65E68616F1ADFB3BF1B60D3DEE10A1F68D816CB73562F5EC690B2C3A255F7
6C51D977B7F15DFB352A23E684B3E541D1370D5F4F2E7F0E815AEA9382402BC5
0B4871353CD9EFD607A814DE5006F289569C30C6CE2FCE428EFE1CFEB62B8317
3B860ED8CB651ACBDB63B237B048F04954ABBB12CCB42D38DB0C68DC4AD1DB8E
8055D0D9275FE86EE1808C544E40625CE3508E95E0EA9492D13FEE3DA0954C83
29A40B74BFE8433572F5438D78392D0244C00828868A41D5A4B47E4D28FA60AE
937178AB15E0CF9A6271478E53B9101B86D82594E86CE133ECC68258C985B119
AEC22AEB71B117C96B572A134CE47AEDE86FDB88FE1C4C16BB01526ADF8B71C2
6F8C7AF058F1A77FC07B611D43C212ECC8EF3E2527F977A9C7B43FB9F667136B
D3C50E28D58DF91E1B2D817A24C84BCBBFCBD666970F39E1F01589E9694144C5
D37674C86111D317E5CD57624CE13BB3FD38B28E060A1FF95BBDECBD89F03B6A
DDA28CD800C893CE5F0AD29E03474A6C9DF7A1B8AD53E34EB19835D1ED5ED849
D34045770487503ED3DD6B49082CEF498A11CE0828039DDD953DFD01CAEB1BDC
6B96C84B48FDE4E09829B6EFF320451F0B513A275B334E76F6AC94FD4CC4CC30
AD78194EC7E7087B4D24690199A1C5284553736E93812886B03382A0E463F94A
07891E091F00CDEF0A843F844845E0A4FE9E73131A2A5A1DFDC2D18474B9D03A
9A02B97ECA86FE5219EB59A53C5FE73223E17C7DDA8EA0BAEB19F44C68CE4F78
A81742006D39A5D6DAFD8EB5ADD771E7C643726F05E5BD7E3866AA90C4147E0F
C522DDD4C2F4DDE0462A05A2783B55768EC3632FAAAA29733B30E32CDF302E90
7327F67AB8261E0BC08DEF386C501BB14A8B7CB432E3719C61AB4C7116B96B64
98BE67530C7ED60233A623A3D9DE71FCAAECB9B5F470955B3D75270B1C30CE57
666B685D24F61B4A7F06FFA8CA1C2C0EAF61E7A99C4CFDBD354A65F12448133D
C1A8FCCF41B7B5ECC055AC39A9773026C91ED5A54C784B86DE8C262E6A6992B5
356BA07E0579BA145399442471689F81EF9E01F35D20733D85FCBD243D0F5DDC
7AE861893B4795574446D712ADF8754D683D892BE8AD342DB9753B6B678E585E
43491E5633466791DCF2318426267093488A6332A3AD8EB78AE2EB28531B5427
62C55FA8A9A714DC2653C4104190E9B7056D5CC50969472B0E254F4FE487E9C3
8200607182C758745C052AD5327CD5AD742928F9988DE41CC21BF95CB4292A51
457AD616F82BBA43BFA04C2AADF6F18F26B19F6DD7964050C1E36CA7E90528E8
45989F147E97BD87B78F3EC06F7F097CB3FACCED21C9BECB4B9BAEA06222D3E7
A602EA40C50AFFBBA7A3511FBFD0C25081D69FFECC29006DA052630028AA9031
3E70594EB5C3C20DCEA74684869FAD4E6F01E44ABCE47063D92156F26A517BA1
1FA90CA68DC4F4FC27AA9B0DDEE588D53704FEA651CB43EF2B25B5E56C31515E
5D08A55C12BA05879C5FB2D69D469407F9A6CBDAED6C0245B71F1953292C28D1
D4C41BD6716B3386D9DFED35A9642642269CB5E7F97D2940BD3BCB4931050255
EC7F7ED75264A91403D604DBA336CA68200169641A08A1E1A16B32F486F45D76
FC64681172E6D6F2A619E50B167661D79D0D1AB01BC7F48E4A8E6C92DE0ACDB0
ACDC60D2EBFC234591CEA2DCAF679D14D91612BDB5D6C656F325E9FE5C296114
9D673699618D8028F234B1C014B3ADB546C23D19188ACDB555A291FC4F0A4A12
E7DD19BF62A315750C87AE5971B2770052A5E6D24C671A9FA1F6769D89B3B366
E492D540DABFC80039C237905DAD092422F8550342E5C63F551AE6CC36A21B29
669EE631D4ACF55A9D35BFAD7A454CA16EA74016DBDD36143442E79912D9EDFB
A4C1B9C906B0185EC55F7E4F442F7187A109218A4389172F33461585A634E9EA
DD8A4A9F560355926CBCF6965939AAF9595314A2F7374E1FCA53ECBF0B4C8D2E
E634889C61ECBF15EBA71A439C4F5D7E9C9290FE9E2B59614E769005976B047F
FA9E004DF9412D43F695EC6C72A57FB3453257706C59E27EB0890F2C13B467F7
6C562CED04B9ED86152CA9288B3F009C9AB9338185DB05FA0DF0C2EBB81CFDDA
3FC63A10526CACD0D2D1D321E7E0242666C956829FCDFB09B59A52D77E0DA22A
73DCC2F00B50BF08687F0D42E31F92557F67D9F4CCF999E5EC480AE8A640047E
3C51CA144DA6DF0B1115C556EEA44499EC8E43A027F01DF831E45170562C867E
B037
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364703A31FFB8A31AB6328AA3B891E
A9410A536479A9A0378B1CE62E0205B073A9C3F004DB440C37234EC8C030E18A
42C47DD0FA1EE3521C98714EC451AB5E544183431A9C5254CA9A7F73A55B8B5D
A98941739E254A5DD0C519CDB28B2F4B9E4850788B0B46E26020DA98EE4E7AA3
9B55089D13329ACB496C86999B89ACF2099533DE1756F0248149468CC0F2C45A
CA7E24A4C93B99FB57A66912299D28DC5EA30C0D4DB0F6CDF4F8F910454D37E2
35E519763C2B61D2B1E6C3DE314A739F6DDBB748D0C6443D23FDFB6D6B162BE3
95DFA7EADEF780AF4D3EACFF2C28AB8FD4530E353E5270D5FA6599BA4CEECD08
BED2831AD39F1E8794319569D09632A4CD65FE1A20DE8FB18109D0F8B7EAE4F5
4715EACD45673984D60AF1EE8E6C93C4F789008648C1F96FA1F8B338EE47E2A2
2305B46D033B7C7A3E634072E1CE2711938D605AAC075BB8E678C339F7B42198
3E61AE2035C3829B1CEC2E9FBCD62C20CB0AE0607EE97E5A017628A9A8A5208E
BECACFDB8FEF5911988ACCD63572FFEE5C40A2025F26C24EC2A87A2745B3933F
41FB3EE69503CAE324705BE07519A307A6530BBD233F45464221B371CAEE0B23
787A20271277CA65E106143B0081D25E339919166E4C5685DB230CEBD600CD33
AEAD858BB6A43A41D38BF43D98B497587D795459121253EE898FCCBC2CEB4D2B
531BC917318A8EB11C4114060FADB071C8A822086E9A298740B5B09C8A925A3C
025767C0809544F529194EFEA71074FF82BE314681410AD7377674DBCD9FADBE
DFC8720511E9754F3D3E68B5D7652489FAE2DBDDED25B66055E56D4A8FB3ECB4
BE8FB8D21D943D33293AD54CEDD5F0628C95961A01AD0EC4977851FF7A7B144F
6AA2146D75497D79D160CBB55CF3BD474562426398F433C7064934FB530B35AD
9155EF03D074AB52A5170473D18BE8365338117FAE90B9F3164E2A29FC61C1D1
A24E7B41EBAD57574D43E06E13690F831AC3A92E62C8A2C7CBB362ED6571E7BE
314685A1B6CAC7B8019107539656A0BB8694FF4B38F3F559F5F584F724F4E97C
10D6DAA650C988E8473B9255921B32287AB75D5E1E1C5F4D2C469D6F178D4E3C
9A8E3745B795DE6E5CF8AB6F89BE0C1E4411918E89263269690589BF1E4AF893
19F6B0CB41AEBE47E67D238B18029CC6BF33A82FC1B8BBE36315E2A84A67F09C
FBED73EBD70DE14AF0F75A847999F1D3C9FFCFDC299E140BD42106DF4CE93BBB
7A9783B34A9A5F22879FB03DA32C529E5B76A2211B1D9B29B2CEE94575B26102
06D020115CAD343087C2D61408B4F29AECE73F18E35105121747E538BCE0F02D
9194D35DAB626176056CE5DB4AAFD79A9E43696F3ECA394C284187BF757D1835
465DB7C80131EE855732DD7DC86ADD2122AC2B78035C26D33DF9A1CB252A45F1
B3D83C153CE5EBC1AABA595E62EA0EB776ED9B2DF7133B35530A3D0C4E6A2E6A
34DC95A1EA5789C7434BACCE7484B9F89994FAEC782D6DC6895C50E2AF5CAD09
6A71A9CC94B3EF46F19A9B114090E2D39F9B2E14FB89272C707869C5FD40D940
D66D69F737DAAB3FC9B56CF3918057E93962D3CA8EAEC79C46AEB6719E558D3F
664D554AAEB1CCB0F9CB72F66CB6A4588E7FABF53DC4A68B4EF2356A395BBD0F
42D0CBEE87AE6D68A4C0336BE904ECD316741E1DF9F4914F8627CD9EF1D29829
9A9FA987376A8671FD6647166107D6C1A4FA778206D23BEE4101B6EBED5DB9EF
A5685D34F1873BE472BDA9A268C59A816C933FF5319499C92CEB690F901A50B8
44414F89C018FA57F41D297061BC7C77E1A57FE64BEA627D9D8C2EA5B3351D21
4B3DC904C32895291C563255CB46F8BFDF521AFB374052D5982BEF115C3CBFC8
2DCF2A367CC2CAA9ADFC6DB6742A1738BC6F2C35ECEC6D8523FCDC4D977D2AD4
E8FE26DE4F35EB5D1FE072E8E74D2852C62AC3A626A9360BF9B08BD03129DFE6
B472ECEF0DBF17559929768984246EF85A1A90C5CF8AB0D05E92A03FCD2C8870
87EBB2321F0A36B1B1C0621678B95BDD5DBCE2CB8757A81D84B8D8AA79D068F1
BB3C6B565D23199D0164CBC2FDCDF94E2588806297F44C6D928D7B3B7CA258A9
16D26F0EE535E71B0BE1A3A7054ED775C3BB9E9393DA2CAFE45B491C7FA71081
899A85E6FB7E5E9F9A7E781600F3244C90733BA17E41E08B7A55B88544455AA8
728187A81321FFAED9F54BC55B4E2EE1507B376E06D103F984035A523CAE95A5
9DB441473F8252E34FA99A9F9CB692E06424C2DE2CEB3EE7E494DA5EC88D86E8
B704D37E19D4F01F8A5ACD72D3C635376F88029E4DFC7171851F5F0572300F20
491C13075C828B73F30591C452A363D2E0F7DF3CCAFE077AE8ACACE067104A94
8A8ABD1D5F816B161543B8A807ACA07E6C168687B9BDCC13456AED960159774F
FFC79D016B5276B238A94A5329C6F9D39BFF185D73A31F2BDC6DDBA6C8156FC4
92F6BD7B6E712AD9BC6E4F3DB00520FF46577720F5EF2558A3497BB920D2D90C
24B66ECAD3AF64ADF60DF0B956ABAD7263D8DD78BB34B5C88BC8CB4F290DD3BF
9ACB3103A45E879A1E8CDB9DC49103D3517A96309E02D6F68D46F50A1422E72A
76924FB21289B6A7E19BF0B4F83AE6A8497C8E9324C277418E2F14862E3A6292
2395FC434DC1172ED7DF4001AB2F84DFBACC6DA0001ECCAD4AA203A80EDF016F
43B313FD8B3F70D05E716A216292D75A5247AA855E14CE79CE8D1B83E17446F6
E55F92CAC76E8DC9CF8BBE54D707AAD889FD0B564A9D3C22754587808974A6C1
97A9D9C55CE85B05AD7D7200FE6F7730D33F269C2517650C0F8B43A4F9D02178
825C57AD9BD6A3BC1FAE2033039B588999185585F81C9BA502299F006CBD7ECB
89DC079D5C0F445D03ED83682E42483387EF53053726CA3DCF7DC05E38752831
4C6AFEA7CFA315D2A1B0FAA10F66CCF3EC90BAE6CD32429AA56A57A955E2144A
602FAE78B968DFE332E649D9FD5AC7065959E7675EBF1CA4AFE40AC671E7124C
380BEB271E1C27D4B16F4739DBD89CCE3A9D58D18939D5E1F82A5D8741B0CF2A
62ACB73BEB9E0F1D4265FAD8ABFC5ADB63F35AB6A2D550828408679C8810A52B
C5F967CDA4DC951B9D1AC31E0FA0CB3EE0585D78441901F4B7ADD9C8DFF60DDE
4C2236D33C447E50AE7CC0287F1564F0982A41AFB582DB1F3C339A30E9D1D6B1
5B331C3889A61FD11075AA37A0A0AE340C3C9B7AA1312F154908FB0469DE0857
E44543C706AA317BC51D926CA862630FFD0C2579F9CEAAFC35AD1288037A3182
8453C8E8B3AAA98C963DA8E54AAA4E9368A2B8C7D2D5C921DD13AA7ACB9A5E6E
97D4BB603DE772DED3D1A2BEECF91315B23E59C215E93AB4E2A43D984F34B8BA
6CB7A94F0B8EC1E9A19C49904081F92BF5D5AF3CCA4A47F78B4368FC5B9567CA
5876B772FFB2879BB338946FB4A502E8794B6CBD81C03CD7D8AD6A0C82692B19
A92BA0728608C371BA1E3498CB9A38748AD38A79334C28D6C6432B3DB333AD81
BC9EFD6A9182A687B43D5918B4EB2A1C95BF082409D2D14FD5A741EE370947A6
93A7EC1596F6DB353A7D17708D4AA6253397E5FFABB5D7F0E5C67AD83B4E78E0
DB8666D60656B96F89BD150E52C6A86C06A5167BDAB041366DD531F70AC3A9CC
82089A1D07CF7CF32D6EFF6CAE56CB9BF699D26571CBE97865184F7B0295EA74
D0B111141FA1967BFC25691B9C937A75559A9B639BF46CB34C90FE222162B1E0
31284ED87ED5A18E6CD79A7576F429EAEDA9E7BAEA62929520F0BFC0D0DDE93F
C8ED1F95FCB151594CD686B891E16180CDC03DD07535C6586266A8D0897CB066
276D3A74F55A20CEEB39153061FEF9B823AB252C69A3E32059DC33368DFCDD05
D5EFB0D028528F61F0B77FAAA8C89C3B12E829A0F249B7C343D838C011E4070F
3E87523739402F9CF9508FBBB7AAB6EA32740A1E770BF79429BAE1D433FB2310
2093A173A687582DEB16D13BA07154D1F83CF3CEFFD7558991E2863E3559AB0B
98251F9119BB856FA98603DECEF9D76FDAA3F5CAC8F1B2A6D94B965248B957A4
A5B8514903B48FA55F73FB9648B66848EAE89CF668D0E0A1DF7804B5166F1B62
C6CE8209C64237B115DA6DB74D7B6E6E6C9AE42705E6AB5DF87F55589D74FC15
113C5DB211254746EB715D5695E1D169B03CEB5BBE3920B9EBB5ECCC9325B8A7
F7B0D83E2998FAF109AEB141B8E1345CA42E206E49E2AB037ACDCE98055B15BA
020984777DC3259E9A5952BCA2466B4E7FAB0075D8E395DA0D464F7F964D20AB
5087A56A75494D2202115364240EFAC9B306F0BBA93544F7229B676815AE2B48
AF83793FE4487472389CCE0BCE8B34ECD359CD82A5BA9E1E183AFAF4D5DFAF1D
7A69E205E483D0137AA4BD3611899B5275F36BFD14E913DEC476657320FB1CB6
AC56E33DEFA35B6BC0792B7A9BDC0902C0859F144FD00B6857BAB17E68A7E200
E3C37CBE8F869012307101F88B2E04FC531004F77113469EF06FFF255FFAD755
B598D1605AFC55BD496D5A2C7B50E376EBD4A403233B3986CA8F7B84D95EC617
C781C5E4280B2939F5A62FF3CD2685C4A131FB6AD67E8CE8AA7EE6381CAA6A85
CB6F87DFA9948CC4B46F898AF0896EA957F4FF8D57DDCCFBB47B47103A48ACE1
3007FC4E56AD563CCB45BFDCF0A2B09E2609787023B59FFE1CAF1486574FFE00
5C56EEDD4D65B54419E31F1BDA09C99A3E5F6A8E78F12AA6C2DAF119D9AD2FB9
C08266D7547C09B30C9E68B118206912D1B116B4AF7943549B049A816CB3727C
2EF9FFCF666B7B76A8656E158C210472EE33E3CE71F07D34DBB53BB5CB780D78
4EEEFDFCCAE0D4E7D3701E9FED3D58D623DF51E3AF4AA3FB436E0E7EF5007D66
7F395831D34F910474E18A3527F6355E0093BA49681237155E85502155560C3E
FF5164534EDA3A903F3CCAF5A7491D5B474A446011704E821DD20192B3FB3DDC
2E0886CE292775A231CE730020E6148470437FF80819BBE1FA8713CC9CBD1053
E759E24379FA8B1F677EFF05766E9640AD55006383E87FC1BB3755AA355FB801
5B528E982214B6B3C8661D8AD6EE35599A71F813469904235C1C6E673D989705
C05DE5930E91B38967E58B5405FB09AB05250FF9138BF3733F7E8C23F379A336
EB5EE108B5062CCECE60BFE9B531E217A4FAF409646B0D888ABE28DC0E06FD87
647FFE7F0A2E14FE92FEA7177E00CCD09554B7BC0757C723C8091C198C9F89DA
380DC41A364363CD7A330B5DD0FE0140918939279A093CEA32F30D44A6C7FDC8
4E132E01BEBCBABC3CDB5836C936E9A7B8B5F780B36AF78BE03F4B3CFD3B60AE
D5323FB847826642FE6A4F54DD784BC12842BFA7D843239A57CE1690179C8747
94D20096091FCACCBDDC50EB12B69448326FE0CD6FFFCDB8D95AC1FF9078F5DC
17EAD89E31A12151D31560A9341C90FE154344F6BF4B3BD808463A8CEF0D3273
7F39F6C71BCBF3D64896478799F189B04787594F8E13769AC9F66F879846CED4
3BADC37760D94A2A94D431761313837D87A644DEBF6F90E6F95889218073F4DD
8FB10BA72872507DA3C67185A1B9D4A5EC48932BBF9592FC6EDBDD8D01EE519E
3B47A2938AB9F6D85D2C79101E96618380B189B69D075742238EB45A7676EC51
178ACE378242067F760B7B6F45CE7F0F7065844F145D95ABE2D03B0A19ACA016
B3B42C4BD76C436C97969FF4BD51128A8B338F470074E8775AE667D03286D9DA
1EAE48AB8BFA5CA232845AAD07D5738D89F7085FDB5D6D031D34A5415977B743
78CDA96C69E7209788789862D08F0AFF16A5AE89B04AE78C5ABA84F96B1E15C0
B30BF4D8B3AFD0A0027B878315D7EB4930CDD0CE9245978395C9A032D9FDC32B
BEA11FD194371217E7C02FB6D164CDFA3A712F17A6073506D85D9D0204FB593B
32313FAEF75490E5C1283AFB49907CB89E2CABAC8171F58D59DCDD7D5FFECB83
53B13D39D629DA6120AE817B8F83CDC1EF07C3DA16AE8165638FE8546EA9B1F4
F0912C12B9CF118B2C6237772935FFAF01C2607D1E0630349C630C8B5E9696B6
D2D638C9D1EA69C72588326DA978CFE3B6AE3BA3FBDF246E381E932EC29A3E7D
32B61AB2538CA9A2F362CF8D7693900F287837F9C4FA34AF6BB44F8047875944
95FD92CB42663A5077F5D5DDB84D739F56E5FCDDD607EBDD53A8D66FDFBF4CC6
E06F7F4ECDB929C1AF3A0C20B42B2221D46C4369AF95152C583FCDF945AA54CF
957EF04E5AF5AB7D16DAE605346C6C2BE075ED86E69A97BD0741DA6D085663DE
BCCF7CA520E290A2E71933D238E54C7762AA5E3B2D3DD70518C5DED3A849C7B2
340BFA5560E250AA7520EDBF1DA274A6713AA4AEB37845011A731F42FAE9E067
7C2F0D50519813388497E9D0569EBA4C2E7B1E53203BCE7B4F406707FE2ABDC5
B9B0AB40CB5C9BACE97CD848906B09180B8F3ADEE4817926E7A52B60031E6A98
25094C9913EC18E762931F2BD5C760C9EE8CC34EC09B84D29D930DFAE502342B
ED7BFFB1D898A03F0B6DAF08222F7539C8F2E3EAF5AA467937760409FE49A46E
4150EE3A7C40AFFCE5AB73C2F16B6692E841CE2AE89826CF197D702ECEE3FB54
9A9E0F14DF3D11FB6EB5C184D23F79A9C6A457E137B39DF924463C10D0F1EB6A
BF5B5A0FB395C9D6ECA8F050B39DF98AA97FFEA1D8EFBE12773D9BAA4E351F6E
DC739705D9E598930E8EA1E8CB520F304F2CD8675497628139ABFE095BA337E9
41F018B2529509981C853DEA041092514DA5D29E5E9EDFD455621B709267DE51
42E848C5FB257FAB47733D37687A4C45AAF2BF28A019175829DB21F7619180B8
C74CAA5D06E2D30AE1D840B694EA4FE0D164C056CAA1FEE3385BAED8333FA1E9
0EC7EBD463F8AB8C6EADC4EEF1C1D465D258F4CE0AA47A7E2201549BB6315625
ED780C3BB2B427CFF8EB000CCECB2B9FAEA9642B52F5C518733E0A6447AD24A0
7A5F75DEB7352207E8F73E0102906FD5678D0BB172936E86BB982AF5C87A0D1A
C3ACF9569708B6B50C712B2AB277AACF4658CDDAA30204CB7959E4816E3B4319
835D2496212126DC3B2AB398B299DB5416626617C307FD7BD914D688BEC2A6AB
61AFBD1B30359508F8147E62D25FEDEE128451076A8A70EC911CBE63F9B13666
95124080EE51A93B48C892D4FCCA7C3F9C91B33912145209EA14D0C46D9B34FC
8C761A94FD772B3664A3BAAB2AA633D24E4E4EF6EF45D4015321E777824D965C
63CA6F754F633A983B05A2783727D9A9E8E02F8DBCE74B9E29111D5EDB9107DD
81D1DF5DB9990FFE343483F4BAF7180ED922874722CC0A365CD7A9C2E93E324F
F5545DB284728BB3C34F8CDB053BF07FFB8F9F199002761C163E09670014D1BA
E727C30125C1366BEEC2C770C1F01B17243B97893ABCF2AFE683875315CD9E38
3232D65BEDA418DA22B8F3E97E84C6640AA0E6CDCFA4214FB1C3E902A1AAFB80
CD539109E2E1AB5A8ED33E9BC37E739C32DAFB3B2123602CD706F54DA1485BE4
5A64AC888F6FC7CBACA6761D55A799F8B0FDDF869919024E65245D9F5CB6F889
04EA78C1A95CFEF5D632EDF7ABE1F972B7100477FEB54B1E3D6227CDE6D72672
87D680CC397978C4736F6A71BA719DBD866905B551B58959E0AE5EDDBA73E5B6
6564C327027F77F758039BBC867B5FADD68BB386EF79A26BC352F810AA42D0DF
C534DB4F21FE59ED6DB4B26292FDDF56A5A34BE3AD25FCD818819252346E37D0
E68F6AC4145837A949FE39323B7EF363872CEC1B37E07D21421F56F715F27F2C
175E06EC5214CF8D728E34D8E9A48DED550E8935970AAF485A4431AF6B90D067
A7A38C6A5D9979DB6D2C35EF3C83CE7FF4EFAC1D126E5A019FFD57620AC93DBA
87965DF957D74A8C2B6A85E098544890426B589FF1B487DBB03A9012369387E3
E8F67B79BEBE17DD56BE206AA2D6EA7B0B3EBABD180E2BA6351722E152ACA6C1
AC0CA152E570C03BEDA028219C232FAC46283D4D1A54AD1939A85B2FDA753AC2
E09D9DB27589C65B58D3EAC411D667F2A432442FFB95DF812AFC43CB4127D7BE
1D6EAC36B62A5EE8BBD8E81553EF2168687ACD0ADC89E847BAF7501C8813F785
AB1C1B433D286A6FBD96A33E9F0C3D5C53A2BAFC57EC1884C23AB9D4843AE603
76D35FF42C22D30FFD93858BDC96F7AF345352B2F6616F5DCD18F919FCB32CAC
BF5FDA0A9E5385D3A41FCB6E4110AA9D81F8904DA36B2B167C93FBA59D6FA801
CDD75A4C4D1710425DABBEDFF39FE70495960A62FCDF01C52AB166EEF9C878A6
337DF1ECB3D40A53E21901F2A7944CE649A2F2A8E1D403626CA7611AAB7CF9CB
F20410BEBD30CBAB6F7B516A65C1353457A75D6001168EEBD659489534D7631A
44EF78C167190FFB933DE0A37429B9F267A33CC7E41736794D8A4FE923C3F309
B96548D257426587F5D8043D5D246554B8FCAEDAAE65086FBC3219380AB49215
6C8D2AE547ACA40E735402D093DC8507EC3CC2E5761D491E14EA3C8E05E34C1F
328260B5E6B3A21B7CACB73F5FA20188F986FA02607ACB13472D45E0E438930E
621A157CA1FF6E35B6662C98DBC9D400FAC3275DE7A16E702272249F7E0F5C19
7C715AA8D8B176A7F984211DE2DCE586DA98F4C5C1397B73583601AD0913D01C
86157220D1C8EC930532E0E9D19483B807F3C5AEBCD37FF50D7A9C5EF6FA13AC
624ACC142F8BC043B252BC5568800DCA374B7181FC2F8A38B65A469895FB7DE5
28DEF41D7C993AF6ECABAD2E8DFC5DBDA94DCF6F5A17D0A887B5BEC7C9FFD671
3C3767AAF0C1A13B76BD86EE4B440E134C38D23F07FC0A27566500FD272B403A
3CEE64CE565B67C845A530CD20CBFA34A57C81EC51A3C673A681B64DA94DEFCB
E71830337A8A0E4D952989A37B6E95E990DBD6EA58BB58F15F496470A734818D
9ED981A2FBB3870B2B2181C93D4D8BCBDA30EF8F45EB3F180070D74F5261C4B2
CEADD1BDB60DC69DB3E68AF105D2AF9B220347DC6126FB2682FC393E761F8157
A10A9FC7FBC73EE8C1463F3546CDD34B72FC9E4BF262D9FD0AA2E3F01010FA3F
165B5541A18633D5150A9A5C48DE91C056BD9164478DB2ED2618698A70F593FF
6FCC4ABBA3326CAB46D314B91F40341B68EBF1CEBC649A641B4647CCA473D587
7D24EEEAE7BB22F38266B4888332DEF187EE76DBBFC15CBF2F30ED65195CD2BF
DEE811A2DC07C800137C9D69090B57033BA0082D03428A6F2C351FF9A5635B53
99ADEFD1F3F203799FB134490E23967C182B95DC4D7E7136136CD5A0EF8D8CE0
04159882D79C6A17B8EE863402FCC6BC15E6E04A0AEB21EB891EBD59BD9E60E7
16DB2B2757F1C007687B69016F072416529A226063ABB3E9F99559EA356E626C
8BFB8B904A69690E9F0C184BC1A7B2411562088FE661CC0D11516B55CBE28646
418258BF8BEB5C179CEF41803AE71D05172667C5E4604CAAD170B2DC863385BB
D56A63A50D8FFC1CF15FF78842DDFCFA994C1AB2BA82342BE1121C8600389EA2
B27256F6F772E4B79739F2FB995AE130F9987E04D14B57A1D447023B325AB121
974868B2BB8E0BCC70B98C55BAB2BB52EECA16BFD796E3DB9E3914D2B8630E15
7115E5C3903B1EE6DC16AFC2D45A9EA67C9A55BE97C0443ED6FEF328BB20E393
04EC85035F503D50A9F01B4BE6A5254487B8F60C829C58DB22D391C91AE19BAD
824A80DC48D07036FE64887E9CCE061FFEDFAE11E4DDC10E7D9223219EAD6BB1
EB504D2EDFDC41E59BA8C550C009F151EC3B5955C0756817F652CE95D5FF264A
792CE2018E925FB0773550501DE7901954BADC5AB117972AB8C09E906C56E7F8
4C8504C9E643F96931D5970F8D02DA0CE574AC04165B15D23DD59F4CD0C007D4
D73A56D35A7F0C4B049F3347E14FA17729ECB2ACB8F2F61AAB01999790483E0C
D90F59AE7A402AC847B20E2AEF8B7FB7405EA7DB7DB18784BBA9AC910A716337
3E937F0635D05DF251222F772D66892DEF6E96C0E4570F1C2220C8A21062513E
6E458FEF348FCADF447FDEC00BA77EEB440D32C25CED0594B2CF9F81A6DAD9B0
2A9EDE3216E403FCED6AFB68D0399FE79485D4DC1B081855DE6EC077B74B249A
24EEAF9CED14F321FA42864487FC69C4F102555AF120B2A081B623BD359B9F2B
2FB9E5C6E6EA527549171CDB0B9C13C92E901332896F9D0012863B30CFF23D92
28F7B9D8B97343F8D9005E12F41C3DE20E5E1DC183CA471ADC9E64D81F409D22
53283850B45C134457409BA1AD2D3D2AA9607BD7ACF995661223F68CD2D3A64C
101E4EFDB50E3FC0D512691C87539C52371E05E9717109C92A3D2E21515E85F2
5B24F7BDADBCB8C6B23539A6E966236A31332FA9E68DBC206851E8569920F5D3
97712155404D2AE1DD6A440492910E795D8DDF5B6E987495BAA0E929C08A0745
FF145DF9DCDD841AA9138D95E82FA1915DFCFA0EC338172C54FB2A5236BF8CD0
CACC4F9C7EB553FBB10ABC5C66C2CAFBB665714659FB653FCEF26455EB2C3E78
FBB364DAC8D975F009D89B19B1B839580F12B972DDE84FA6331D89F3FE6019A2
977DB038D7B0E54C157346A3E3D1F84CDA94396ACBC61B5E4EC99FDD2012E4A6
D346FFD788C5B94438DF645E787365954EA1BD81CDF8426C1EC9E7876204A7A0
402AA975F05FA9F939C6139424148A1F1A1D19F40940ED0D968DF5A2FFDAA72F
5907C76DD0725783D284D3B31618189C8F9A64DD35D114016BC136ADD2A78030
5568A7DAD7B45C9B2312CBFA2CEB9186FF86F7BE12BC4465F01E6DA8DAA2760D
8FFBD72AD9A619F569C45B46B1998A6C07EEBA6CB0F4C0A228C2B4D7AE80363D
97AA6B484179E453D8E0F1C1B1C0B09BEA06496E2391F296DDAC7338E9825427
714B5D88A0FD58D80A6D7251BAC7962C6D3FF570C111A38EDE6EDC72B7B9B4BC
C188B5150EC741F5B1BDD160165C4C6F03178559CDB9F93B6F0C9350EC7CA2B4
72EDE2A39D16341B8AE2BDA85EA66A985C34AFF534290C19A139415058E20BC6
10D82A04168B3EE2FC2D8DCD077D3AF604DCECD70E27D43697B67F4584A5BACD
4DC8AF83254B63A3BC6AD2BEF3991AC179EF46D4E9CEDD340C17634D949A0592
6FE501D6E83F5CF39BA4B42BFC199714C36295A985C3134FBF5D07ED7FEF7D29
E5E0AFD0212A50BCC6812EACA6DC76AAF114D82434569C2E5E1B86052B855DA8
36EC2EC2DFDB8F4CCDB193B3ED3F76B5039BBDFE1BE51C691925B184DEB01CD5
F52EA8EF5FB8FA799B20BCD078714883F557B8ADDD8BBE011BA3862E275571D8
015691868508D6BB7AE61DD05D06BC893B183633044D273B0524CA83FCE5ED7F
8BC00E42ED30D546C1F9026AEA04E2925A6640B727E21B1A68742382821C49A1
7E895A54E7C2651B93A5BF621089E89FB682848CF22FF7CD2BDB2236942924CF
C86772419A681B6A8E530AB85E841EB9E57070BACC457B18E9F0F268E21AEE67
7592710495D7A30239408DF069F5F2C0A307DFF166F2C9E3FE49796376956DE3
12BE66A497BA366A8BFD82381170DB1D71B6A475322702C737C0A296F153B216
69061DB8B56AB62BF95E01CF680B61F84A4F089F187B59BB40D47BAB27D725C0
E9E6F0464BC60F66038190AC66E6AF17EB99460B855AE42677374EC83665CEC6
DAAC86C6D84A95A64053EE6E72F1156A0451723449DC0DEE0954E1D1B7D85047
220C15DFDEC1C9184830F62606F7CBEC7401ABEEC62BE2C63BE4C6110B4BF726
DFF64494F2BD5823FF743948E3F963516492A81DBD90D47C91B0FA0BF364B7D5
447BE0C2D6DE59B175EB66A2D6F5D9FC08852B158D36B288107B60DA9FC29BE7
DFB5D4B67BACF4CF4AF0B07A2342DA64D408F0E4E159CEE1368630ADEE3F2128
B37AB6EFB7C66DCA9CFAE8F180CBD15CA3930A5FE3144526F4B01BD32184549D
4A6D468CE9B589E8BF2FA059DEE8072A902015B61739812C902535E1E04B6460
EB609C3537DC2907DE7050017D30E1E3B5835A7E35F67F1518C25A850F9F663B
31D2A835680AB759F0E0201BCBD91BFA552A3A1B804232F293880BBC51FBCC05
AA03C2B66F441DF38BA2A870414B4BB10237304457245D46DF18B8A417708CA9
9EC06340396653F33601F7C1746CF7BEA906EBB8AE6A19FB8962E0627A2BF9E7
5F454C46A763F6943EA03712E798E568EF54ADE3D4B852F8BEBFC308DC250C7B
4BA09FE538616C2D6C8CCA14EF95134F8A29FE8473207F6F2EF2EF58EDD62208
DFA7BC68E1607ACD7F31C68950620332EBD1B9865040CB807019733EAFAF69C3
ED21D471E4B88CADD0B1AF59A767949ACF1BF5E71A55698282C8350892A7863B
E3794AE3340C7E28385CC97A6C1D5EC709693B0DCBFB30E18AE579B3E89BF0F9
B65D3AC65739C917102152217D19380C0BFF22867766C5E27A879C55D60BC7B7
41BBD47C84548773158752D5F01EFF19929B10316B38F0F6EED6CA16F7D1B1A5
8F93526EEB0F8F901CCEEDA05C9DBBADFE6CC7A23BFEEAE076BF7984A90D3DF8
258C756FB4288CCD78897D86B01D0EA4AFACC34B303FC26940BABA2C6C56C971
408DC0317127C1B21507BAE472D8695404A2ACBC0E8D3EBB3002C728C05AEE3F
BE72AB6DAEB70014D846F45409347441980B86433655338ADC6D208FFE3B7FD1
CD6695BD51993DD6ECDAAA65209B2A44FC88A69ACC4FB783F8A84FCA73A055C5
A5F7ACCB8FD9F72EF06DCB64DE97B0A61F3FEF9158DAB872B3F74CA199938864
F38891D4142FFE518B96964347A6C414D24BE823FD8FC11F483C0C7ECAE83EBF
F8E8CE345FAD0037DED8665E1F4072E993ABC46EB9CBCF7B763F4D6DFD2DA985
1E01883CBF5C8B45419A94D2CADF62CCCA1411E9616BB66E9177447BC3608F64
7A1C2387845B7E4FF2EC264D4659F9EF46C732D508EAFC732D41DFC7EA1CF057
049080658E367279F9EA1E3729A1054A806B8547B78D70463D29EAD28AACB8EC
05A6909EDBE6C5341C19CF1A9322D11B24AF671627647C4C169EBCBB1976F540
3327B614B6C71F406733E7118A898E06C03A74F571117BC7C410F4814B48039B
8ABCF098088AFEE631276B810E44C2D459AEA381457FC31A1BD3CE8F285D27A3
FFFF070C1B4E93CC54AD429176F5EC0E121AECAE01FE2F3686C81287042F8C21
A7675277D536E4F66D493BCC030D72F437BE3109D4E6FB920969A4261DA2C606
6766C90A033B1147D103420CB8C35E9C3E75D9401A11828FB36F4474EC999982
6BD5BE82744DBC4FD52DF5EC5581E449E7321C1BD580E5390BD295F58B3DF83E
C2144EC205BB96082010398AFF727B94871805EC8868EC7CCFC1C840AB18CB09
3252326670FE55B34C031E0F8707A637DAF7C9D74A53BFDAB97203A79E76E46F
7F4F62ABD5E3782C95FA6AC222B74F02B1B41A8111BEB0C20FBC6D2FB340B2C8
C178366EE5DEA0D6640D6083CA69CB7A292588F5CD3D15160F19D615E4963905
C75BA3AAD14DF1E6E407FE7C13D8839CF32C51CE7CEE05BD529A3501EA017C42
0595BF1D6AD08432970B3612714D87382245812DA59B2B2F1C05FFA661059FB5
D08F0E48E0CD3A35617C3AB05673042709E7C76BA6860AC811AE356C4837B9F0
EA74951264CD8376433E9D25C0BB93D31284EE8973DB978D0025215F68A6D054
59F0E007F92CCAD979C7E673D9183465CE423C66B7EF8EC8F3CBA867BE1A36A6
FA4EE9BE17E868CCD064CAB706F2964EBD082BDA703503666D300E3A9BF61EB9
CCF781946570A3B5CBC45EECF6EBE7302A1D732E20E351825EE41EEC3DDE5AB0
03B17C958F2D21DE6ED323CDAFD7636846ADF57414EB582F133B7A392E699A35
B8278AC8392F254A7EA6E53A09204EA7318180D6F81167AD2EA616318D243D62
E3E82877FAEF55954390FEB52869BD57E02E81942DDD16E4F98FD6A8F1078F9D
39936F2C6B7DF86EFE1E5981B2C77397248730F6F391FE867A5147DCB98E7964
CD5E8B33DF52434F099255A7590EF2BE04CDA2D4A8090FE2A90F5E4B8A3BA2AC
0F121F44617A98E4825057963C9B8BB6DE53FADF7274A5E4753E8F466C09EBB9
BCC412DF189D6DA064E200951AD30451FE52186131508FBE164EF4FCBE6CD726
27F50DB061A9D1FD681BD5B9B8E6BF37F9FC9395E2B905319A493AC20FB740BA
7D151AB52648FE086EE740C35CBC1D12E6263B7BA3F931AA445D39F402AFE522
06A32394F71AE050B01C741B541113F529D9856021D8170224108828FE1C9164
AB2FAD9D1C01B12B713F4C0A2B117ED3C254489AC1A0D97E9B3B7E80E0634312
A6DA1609B15682C61920120EA840FDE7B5350F72322FA5A971F2E7CFF0AE0914
DE465B2FDFF7A6F33D20CCADCF08C43941CFC59B8B1D85B723F73DB90A0FB132
29F66F4E438EF5F3C555D465A842068B3D1CF9AE98BEC3CCAA6AB6B4C13A781A
E979279BC1E60D4C0FCB08B110A7C9ABF2F7D951AFE938D687FDC8C7D992033D
293684B48390D0C24BCE74CDA615115716D916D574BEA711D29E402D86EB4979
A0B929A6F9D7D455423C83D24CA4A3F592DD86F7065B0E4523FA7853D6CB888E
9E89FCF6DD02FCB027945A2C0AF1D7ADE45E3E72C373CBD756363A35335F65F8
EADFEC9461787B05FB312DE5E7E0635FF782F43933E3E4182723901415B89FFC
1FFED72620C34531B9A4DA3A2B3EBF0B889E63F96CFB68E9D84B01F8A1F5D923
35641D8F71E72DD163E4F4561F85763886792E8F443C0878BC3448CD5FE9DCCF
CC1D1810E240AFFE595303AE6B6A5A27B6F8566FFC4364424BEC3D7E0E993BC8
AF4156D427972209400CFF1E6455042431404E2B85920F1E817EEEDD6FD3B661
3D85F10486666A8615AFCBB9686305218C8E56AD2E70C3FAC5B4A9D77DEDDC30
4DA2FFB28022480D6C377474928D0994603EDC28477307853F378421AEF08D39
E8EEF0AC97E28159488FBE462561E90C9DEFBE3F7C0E90074FF37F7A0E77AC02
AA181D914994660A4A26E721BD0BD91ACB9F889223A79D4C31A56D6D205D42CA
94CE3D077BB1EEFE71F8C4BC5176F0263913CE0819084927E0DA3DB454B118DC
9EB5578BCC0A821383B8F3D73A58821010702B8D809B3DFBFB52C71EAC6D3CAD
AE91E1B7B2AA2FCDB48353D2E4C81070CA66BBB5CA27B694383FF6E539C2B5DF
CFC4FFB85B5652DA2759021AA08E1A68DF83C177EDE6491CDAF2F0A15FAFACB2
D61FC923A335853EADB92248B4C80138263B8E0DA15A8293F1939E29661FBB0A
DA100ED1845D9BBC6846D593BA5CCFCC555284E5A1FB6991731B9DA2DCAE635D
3FA5C99EA21F0F81FFF9C8D53A1AA6E3AB038734DBB5F9A0B1F88FE78A082510
E67F00E7A8A1A5D8717E13CA836E420789B4BD8920909AD07723BE9853C4B99A
5BAEE562CFA4166D29DD54A672326CC8ED9EDC313D665B8BAC464F27FF17C5F3
321547D03732B9C15BE22BEE62456392E5DCAD3A84EFE8F0D3043EE71C72FF3F
6CC2C7D747729FB148AFD4F914FC0906E6AF24120FE5FD866FBE11C2FEA0D3F3
360EDF02192EC4ADB080251DC207EE38F218726AF5952B8DA4D50DFA02B75946
9C0232D69905837417FB97C9266AA9BF67AD41FABF8E9CCBEF61331D36C159D7
AAB5A1F41248FDE0B428EB055A1EC77A113052798DED31BF797790717015CDE4
3E17F5804962E8EBD9FE00812A0CCFDFBDBE13943267F98F89380663A7088DA1
548A01B8F692724C1B9F4FFA0EE05C585E210D0614482B2416EB4ABCFE186B24
61B64A880C4E6D166D6872DE8EB03B9A3FCCD571CB056C6F9C26B51362EABA49
915DDBF9983C67E28E93A66A9CC8C9F5BDAD09EC4F2225F46F3903D08F975E43
68EF6CAC820AE8F2F9C08DA2F1B7FE92460A6263805542515A0DB578E32F1F53
956EA60CB1A6368267DCCE5BBFB0C055427E8254BCAF795FB34D396916F1679D
30319DEBB01EBB36B6E664CB8B9557A4A81FCFDCFC5476799A65DD8B3C6DB214
AE5172A2CAA22C5D5B478EEF161976A9D82CF790BB50199BC832C64D5CFE654D
629205CBF6B7EEC39B5DDAAA9D7B8862C6AFDB98C2A0362F23198D7DF8CD2360
1F351BE7FFD3C30775EF566D33F198F0B3902F5EC80901C715C7E18D988368AD
30D26E53090F79550BAB52F2681485ACAC1CF1DCDBA3A0D3E47CEBB3401F0B05
D0B6B0A5A2074165D55E25D443576212C50561793B07491BCD5D503108BA58FC
4A62D6A10BF337CF6921A44874C86F0360B769CD97E10A2E18ED2599DE22B5C6
25E73CDC7FCEFCCD665D25A3376B541AED4940420B1E6CEBDCBAB8FAC1712B75
2CE891B55175BD880321CFF73EED8905B5076A94AB36741F2AF7D7230C33208C
E7AB5C82F2A9642D1C287C9C64D0A49A6E0C19D77286EA7B42C04CB070F06D04
61303537973818E1EA4A2DC59D3A469DF44CFFBC2439DBE23A0D45F2F93B98DF
6EEBC694BCFF028CE72B8D08A2CC357E4EB2C3AA804FF8643828964FFFCEB161
115A465063867FE5E09EBB00B160F4C8E959793F4B6BAE749B5B62D8BE5A1F9A
83B36A31DF8DB91ACF31DC5FDD27935452BCDC92756605B3E05AD366B5604E76
8D1CB20B97C6ED6285DBB79EF7540B901B90CB8431DA8F43F549B83FFD5A7AF8
B4FD66C014D83D980BA1679515F00DE2516B7C7A25B4E373CB940C57F8F8FFD2
A904A0D292074D0FBE72FB5038D7505B585958034D9F9D424C77E73494140A74
D8023C79C341F5D88D02174627E2814886E7545FFBC130965158D9BE2AE67390
5F1109399DE589DFDBC744B6F1FBB3221D0D3D859DC7DD72E8C333A8AC77EA31
96A8B9BFBE7DC5713C5A0F83A7A3A034879E9380E4717792466893370F76CD36
E888BA74A443D1B59304C81C53E117A09E81024B3A52F57B85C935D543EF3E55
1EC8FA8F9E9B549FBC2367C7D7BCD1E9025B04CE5F7A146539A7C1A4D61765E5
A1DB6DE1EAA3299E99CEA6C4804E36B31C4F1070B44050FDD7C23D4DD3AB73B5
AE4CC8735F6500E572AB7B4B06C6A38F2022A79B66B20B4D30D0A8E62CCE76AE
61F78999BE15DA458CDE3A8DE8CDBB954D212BE6B7CF83FECD9A153B24FA6A8F
3743A1F56CE1CECD38BE03720FDD433C8308340A08C5FFF69F469EF969E1E421
113ECB028FB4B6B7965947BB5EA7CFA7A15BB5B8680020ED86E7D085FFB5FC34
471014F5E2199460FE65D00835875C693DC152C1FDBFEE6B2D5CECE2ED69F847
1064D5ECB3901C72633B723DF977C0F42CE4FE154BCC54B5D0B529CB0EFDAF85
87012A92B31BC5D9FB6E1CCCA5FFC39489456A9013637C55D648B16A7BB3F1D2
396AC7EF213A7F5D1272EC6751EBF3E52F7CC7A64196A9097DFAF5BBBBBD2F92
B25D6F56796355A1E521BFEE9FEBD3C219C996A6F389D7EDC53E5D86A7C362F6
E141F478A1C6DB30F7AC21E53565A422906FDD4108B017D288D7502A53183832
2F78B7FD08E1EA9E8F81211A5F9002B14582A6B613405D1DDF871406BDF1E160
5116127A594BB14C83C9E4A4AED1C3E2BC95F194882B7D7A874A17B9D8B28BCF
B25E0D3ADF55B64E99B76D63CAF9A7652832A8F59E026EC31628004C65F9D701
A6983A3503AA4A4B4BCD1238275A1ECA72B58263300072114B3A9307A2378707
9DE7BE22C5BABACE48AB69958628DD495902DD0060FD6B399AE3BA3737988743
4FF33213F139DA240123BF862BAEAAD8F192DB95DB08749C22716895B403D830
62F0BBB1AFA4A0A114F9B6EDFB092EEF99DFED3C5BAAEA819F428C157EF96DB7
65307A052789BF6434C0EBE496923448A12E92A935015DDB0F8230CC8506F2DE
87757F53A056A320E9554F3C2BEAD48C825901F05D4F18820F498A179300648C
687CFABA078CD27EE015EBAAC4E5D1D5C729893FC0304174F7E1557EDAE29282
A3BC5F68E56F348314A0C547E4B563FDC051B1F912D9A3A818747C1AA8D15A86
CA090EBFE33316C49C07BEDA6A23E5025E646A06507B6480B95AF9C5719ACE01
ADB02907F47B8F6409B06CD9FFE71EFF965FB56A44BC6C913B19727B6873AFB5
C4F7FEA587041FF00AEE4F0B28440305558A623DEB4A0021AAA2F43EBB06E6A5
F7583C15B4ECA2C76421520C3197771A72CC51EB11A65AED7050FAF96FA6B047
F9F6A4EED10BC12736D3B604C475B44AF584CD38B64280CD7D72F70598605D7B
5C9A25E1085CB46599EDCA589A546013FA388694B3F172A8BE0927C8EEB4A079
6B5575584073257EE3560FDFAFC23D6B18AD4EF9F28FFCA5B60262E907184154
5FA3D9BA2196E2C51075765C672F3DFA5CB6BFD8F070C6F167844DB92B5DC909
DA5DCD0C08A1852D6D90B37461D33066329055B60FF3CBFF5186048464D599FE
3363871BF137CBA68FEE460BBF7D4004D5B5974C186460FEE4446C3717FEB1F3
E0BDDBCBBC1287F7A76DD68F7E5DC23934754F380051D66B463A7EB88F349E24
C4F6DF85F93599281BDFA73295809CA79B6750F9D1578BF0097E732A39AAFCB7
D840A382D5E4E5FCC9B54D75E6953B69CA135BF8DFB5A6A4DD34FE74C06FC8DE
4B24CC30581FB034F41B5D7F04B6E7E483DD7306D9C663B9285918FA343DCBCD
EE637211FBE158C8034C8C0F93E4F0B4CB36D65AC9A574D86274C37444D40525
3C0EA992DF67999B1A79E9F3592204FF4E5193F51AB5DDF2041BCC688BB6644F
258360C0568518824701AD5E29FCAC07300E0BD4289E13D563A7FE87374689D4
77E64B9CCC24B0783CFF9A3B677BDF13DAC060B6F4C51F055780CAF913F0A2CE
15FC95810F2006721ED60E92D24583302844AD8B842796369DC16F0DA83581BB
B566D4DBB1D7D2BFFE9D267DBB7C5021A3FEC413220A3B842A942CA5DF3FF408
4479DC8AF6652F0CCF7F36D6FD0BC4AEDE1B9729B0275AF422EB54D1D175ABE6
0A7C845EE3EBE85DEF4023C640ED475686C2CC19C3BF20082199868767E75AB4
40D554F10DD52F2B45E8FC856B5AA29AB59C3A06D42AAE530A6072DD0289D395
9173E5BA6CCFD1C92F5D2EC728437115A6B11D91A49859D2A1B3AC29F0856EE4
F10259166AD1A9BC5CD4A4DA18DE5FB21C91F1F8FB2012E8BDCE492851979FBE
B1065613A1415F574785F0724E7C766BDBBF6F5643A1FA7C984D9A094A9CC464
E46215F2EBFA0796C6554BA3F487520F5D045073F03567394081C1D6AAD4A849
77A4E7834070CDF669879FC96CC1F7FF5EEA3E3E85E85ED94D4B62EFE6E38F1D
3233E68EA441F8B48ED1605C3013A0AA7C60B1384A0CE95896CA656BEB061586
2D6DDF63E8F64CF149A515461310CE30F724498EB05E8A8FC28C860E6AC69532
3A0CE0D06EB59CD7F2DE7B903B43450490FEDDCBBDD5BB40BFC8CF0D1BCDBEFE
0D84C45B1B4770493F8DD1D8689B7F2CAB619C92118CE6FC9A2029306C48DD3C
CB9FCAB52E83AA1C47C4421275FEDD618D57D849CB2E410707BE61C89A8DEA8B
5218ABE6BE8506842AA6C12357ACB54C3E68A5AA70A760D78B55BD71DABBB920
4CA7EB71FB878B0963FEAF5E12C5AAF8877294E90273BE619E5BC62CED3AC51F
35B54B3350BD982CB972E46405044AF9AEDD1B86237F014AE050F2580DB44063
46334D4A728AEB2F24489F1339A6AFFF925A937C42E6DDEAE23C947DE0466E75
7FC7B9EB31D839275769AB1009F9A2AAC0C0447549A8E8964911C8C0E593A0D2
9981ECEA5224BCC267E137FCCAF083F425137DCDCAF9D8BAB26B54EEDBFF0A02
59B9F6EE86E8D50535AB4BC1A4CA3653C677CE680D294ACA784A02F5FC193E25
8BAA610589116F24A78E9870015C8345867486621FCAB7C09DDDBE38BC54A9C4
C12F3C44756FD13D0FF58623253FD75343E7014657E78A426BB03AB1CC5617B8
35CE251038D645BB509E1E119CFFC06646430C2B3E4186061EB2FC5BC98DFB14
1DD0FF0190EF554786D6B267CEF8C19052EF0961298CEDA9644E5D097FAF38E0
CDE2C5D0D2B94C15BEE461DAAB885F73B0A2252B126EBF4FE95BEC195A356D72
4CF8A29B931EB14E12999E44B46BE154E6D93058B311083064BE23FB1A497B29
25009D528F3FADE607A8EBAC2D0AC7BF416E27E5E72C78BD4B01D2A17E9C50A4
5A43E7349A9961D59CE09A819428DBE41CF0C2443A9E912182972A2BA2077953
32350EE0F4A1F95F0DF3BD937E03FFB5DE0A341DA155F4D28351EDA0E07E868C
2C348EBD5AA2C3C3425A7590ADB3C6D261F64CD2526BEA68250F7245D8EA4DD0
B2F524EDA5B18AFDAFEB7CA8A907FEED9D2DBEB5FA46C7DE5E49045FB28C6EBD
5F62559365349D08BC5A8070651653F8E235951FCA45B7F74604EBBE83B2EBD3
E215DFB11FDB7D693C66D4FB5A6DBD3B216BFE01CE35B605EBC732945616C21A
4BDE2DDFCA208AEC505B89E8CCB0DE34C6CD814FEEFAB222B50298C31DEA3ADB
5460A73766719A6FFFD9AFC3A4093B77CF698532576FBE8CB3D385C463BB7428
6FCEB35B9387A7C747DB4543C9E2AB3EF86243829960B62E2BF9B58BDBE017ED
94C22EF7C52BFE7D43C45AC91B826C611AD4A8723CFF897742E191416B4D9BEF
E60A2F0772440F7C2DBA1B77119CD7EBB8D195D24A4316EA497D6ACA8D6AECF6
3575BB4D2B360BE7BB33BDFD2BDD8EDCAF026FB617FE6F70B9C71FCED70197B6
72436185D4BFE5BF2A2F77B704AB9D759472AA734FFEDE6B5614F35D0B769D7C
8E1AB077430FABEE3C46E4BBAB6A631D9980E44A82EB409D823075CF349473FF
4A5ED7F5523A85AA377D33404BB27E1E82FA9DB89831E35CA74D09EFFA891BF4
DCFDDFCEB4B5A2C381D828CF9F99FA358407B2379E0C76EE98621F62BEC5E549
803CE1327B095611D0CD35F8965D959DE488BB2FAE541B9C5DA0F413BABC3F4D
B23DC31245773BEEFED7111D87A9C6FF5CCC18042C99258B05FA2BC6EAB05558
AC52915076F07F9122542FD997D4B27D15D36FF8C3846659DF1D32955A65C23D
0A188347FFEF5DBF5190CCAD0ACCC75A0E35C9BC09087A087E88D4A07253F09A
03C41B43B100D908D80B4ED84349FDF8D7C0250D658C633DC414F3268DB006F6
57C55748FD642CB1C27AD3768601E5A2982EBEF26B658A86B9D3F2B5364F07A4
70177051FB9170D57BB7D4A6A291D6A70F1299C078EBD4C758BC2720F81081D3
582FD83BC035ECCC765577D41D269DA3A43095DA1D14BEFF27D3476F444016FF
CE3D27CC005B4F0EED61AC732CE0F08C01F6DEDF36E738093B31F5FA7F96CA2C
3E53562F90936E7D57786031E2778972F1050E85C8A1509A60EAB1C410B84D1F
F5DDB6396F4A8661C1FDE8888E360FCCFE09AF43
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 72 /H put
dup 74 /J put
dup 76 /L put
dup 97 /a put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD75529DD9C606301104573BE52595C9B1077B0D91AE55242ABA9BD995B97
52BCF5C8B00400D9EB69441F5BF27D7BE31F67423A3C5A0DB25DDACBAC1620BC
E6A86358D4D8CB7F5BBADEA1FAAFAE84A72D0651115A552EA34758B8342ACC92
A24301AE3DD7CE12F28F247B69E8B560065A80608FC7DFE2A33280F7D016909F
822BA892754E5AEF31D662A395BBDCDAEA57F7C78FE64B0FB10B28C52B18762F
7C3094CCD05EB3A862384EB6687FCCA91D51B22CC22FB0CA8D4CB0F4BBA97C07
75FFE9C32944E91C54B0DDB7836C89B9B9F063D53C828987100560B3F66A7F21
D8266A9509093958D0758F9A24E29F04F2732C9B41EFA78314BB63E95F3F578E
B3D0B41C877CE655D16E8460D894623DD486CA1CBE5BA7674E41F315D3824503
B8CFDCEFE9AB8FEDFBF3F5A0AD37C94A21D9D1F042E9F1D5FECD7AEA05AEEE22
FB41DAB8F9041C564626D9A623B1ED71CDB49BCF45B16997DD3E2977CC55345A
4EB29406ACF4F84C3486D4379E2245DF669131DF9D937DA7EF8F33E1202C18A1
E2C8F9B172A73844A7A4AB5AF8B201E2E001F8DD56BA309E805B66FBAC323DD5
2CFA87E0817AD0004D0C33DBB3B3C253BAD3085324DA60C8F84D51CD706693CB
31649F5BB2B274B27F3638B59766AC98132623E77F6AB055AC5E0306FD4C97E9
7BA7068393110AED9C406FE9CC11F629EF8FF1010AE7DD60BD4AEB26F83AC589
4D0DB7DD93DCDC093CBBD838CF997624C9347B7EC44E68B94D251AC87916A9D5
B5A217DFCF0231AF59AE5A419568E2B22625F199F9735DA0EEFAFB78338529BB
7D591175268661C97580B1F987A8F5591C32CCACA474EBC9F53C2A5D3A7F03DC
50F41C46E057428E2A6DCF36288B5F956A432F08F665216F73557F0D9E9E81D4
67D536954505ABE8C78E6666DD119FE85731A5CEF7F3BCFCA344604A62F45F18
123AC7921B212DB194D7449AF5F3F58964DE8E933DC60E554AFD02825E9E116C
10F7F4A1F0D605F0BD429D430026227135F264A8EB8E6515ACB05D68D3FE44C2
0A3A5C2758140AECF48366403B0F3FC3B937EF5956FC785BE55700745358C97D
D26B35AFEB3032F9E08896152C4248CE7F422DECCC3595EDF36A5404D0110C06
EB25DA3D4F4F84D7C37DCC92C0FBDBFEF20DFC415BA837360BB0F02358D5EEEF
476424CADD2CC00882FCA7E44791AB022793804B60FD2059BEFC1E2D1218F956
2C32E485C9C2F70313A8D244E5426E848DB8546820FA4D9AF5318B0439B77458
520C23B8E1A56EDC9E1CB61EF2A4DEFCD6060A01CA3E0CB555C13BE5155D3B02
3CE2D74AF29FBD18202DFCA00DF96967B95C8514E0E18E2C3013D202041323F8
D64B78DD7097839CBA65F0FE2E2EC603AB2FE632691A2389EE5379F94E081EDB
5FDD1BB89759AC3B08163F78C5A9228FBEF749EA4F20F3894EC48ECCCE381CD2
26DF357C452625C7725EEC9F610910218707703873CE6BF44E24ED83F12DC251
E53F2150AC7E3E3374804E0CD15114C64D29CB2B73092D499696D8697248AA08
3E57B32E3B3D93690897532E5909409A62CE1C5331C8A54A7A1AC26CAA3899B2
03E3F496AC12216E9CACDB5D626982A662B3115A926EC6D3C2270B8BD3E3B2C3
7A86D9A23CA21070070BFA91E183EA8985D5C8BDB4BA972972A91C68E58F9187
71F72D246EC916D62FF119C552A6AF27149176EEAAED83333BB2E4F0D7DA3D1F
0AA3705D453535070B3D99B5662C0B63490E4581B313B884B1C00698760DAAFC
725845BFA6F8B3540DDF80711EBDA905290CA044978691E032187C6024F851E9
05089F5CACF2A00491B00724EDEC161A1E096B0E4437A331EBF5CC74725EC93C
E3426D250174530EAC8F8DCA8D0B95CAA109E0344C14B0DEA6C66A076363F633
696AF26B25A69212F09E9CE900EAFE7E414C0C116E4323270ADD2F783DA934D9
12321225F0F73C127B811C021C762C9A479F06F7773BDA76B718C573EA4672A8
B640F248AAD1B7E7BCF2EFD62C363351EF52CE3E23330EC699BA529BF16D91A5
4B9D90978930DD01B4A1D6233B04302C66B2A75CE07D2DB7F9BFF12B3A029FFF
E67D4A64F4DD6790AE829FBAF37E89C8F836C02AB74B631EA711E7B702E0001B
F34A9F64167EB6EEB68B1301D4A15E3A65213BD166856B65631E557B1DA1CEE6
AFF19071546C948D614F2AFC06F7C1764ED929F540E8D554C066245B65AE8149
5F7440215821597C7F779DCB203CD646CFE774018714F834AFBB3BC14ECBA5B7
8CAF8ACCC11DB675183442CAAB870797A84231D9A19F95EF50D968CA6173D924
7444A232EE7958ABAC5FAFED30DF20FDA28094EACA97E70A6869F855146AD028
2FF68F88819D11F97A0D05B9AEA111C3D5E9CCC46DCB3C98248A091C985CB050
A46AC6FBBA351814BECB07BE2144EBAF3DEE9137411609911E668C27C97253A4
0C6A7B5F13493D10925DFEA024CC04412D942F8A200144CB342764FFCA4F8787
907A4A199DF38DC3CD0606947FCC9A6B883B2E4C5A04DA9E8BF6273D58259D01
BEF117E0FCAF2EDA387374CF894C3B0F59849F11A4A7B63BF86DF4D3CA2A1666
89A005AC452CF8DDEDC7D089A94F3791862D6FD70C7C11E85076D0F5393DAF1D
8AC5C2A316F5D9D532198510C01B7733716469A3BEAE1B6780833215B266FD16
5CC6B883CCCF0DB750D6546C9690DC646C542ED0F8F0CAD32B367D4A2E39EE3A
81D30F107C73A7E30AA213CA6F9BD8FC3ED604ADE56A32215242BB328F85CAE1
E2E2004CBDD5B95D85F7A059EA61A1C2CBA4291A6114350F7F9B39ECFF3DD18B
85110FD50C8F83D98E1E6919DDE44D19AA384911BF9512F85C097BC91EA47C3E
354E12CF33917A9ACB7F611965D4FD33361DB3CEC7E2F4D8DB5B33AD602F08DE
E35462103A59AD01BF7916DA2E402344FB586FFDAA2C69562023424FD9392169
4BD329C809B734A8778C3B000A27582A75C42A2DE33AC2797D08C7A34EB41389
BD197195D8C1A85B80FE4579471C252BE03EA1BB1191EBF0E70091D629E7FF1B
32EED96348011443ECFF92062F694030945EB2E1C39C79A9331B2779973598BA
66BD7A04014D38B12E9F0478CE1D9CA1AE2D7E2FCAF3F23B0363320109387722
CD2F571D8A6A8C8BDD29B663B7B097FF0835960BE14A59DFCB0139F3D0C880AE
14C9D92AF9B67714950AFBCB87E04DFFA6D621A9C4F8D3710950F8CB5CB029B4
D8658CD21674B7C4D10FE7E4E1A05C9939456612C0E4B83A8D32AA9AC1B9B37F
117E845D0D15512DD807AE278F8BF81F56DC669531F981E7D6C23910E484DD28
7FA2FB573F08B056FC722214684240591F8CFCEB3CF60293FE094ED57FE8E22C
BC6C4C9F01745475B1E3E5B656B11066E96FB2A580580DEB9497E1A4F858A6E4
D50BD8AD43F424CB19B486913E675BD1175D3EC2AD92FEF1E894A51D8054124D
CD8E974407DAF58C5EE77ADC5E27C7D69C90C82351ECBA74D66FE5DB7EB56D32
7F589DAE3F097945AAF7AF0B3940858082FE3AEA9D0672B78A0AEFD3D529013D
8BA48F746BA4DED806A749068B674DACBD96367DEE91BD10AA97F76C8D72207B
8B5C52EA0A3005D22A3F7484D5C64C8815F6B7035FE2A0758FFE557E377CF8F9
1100D0D6616B0C25621B94F80C3A5483C2EC4120A7E18D762587B863139BB69F
90371FF2F11DC16DA637526C59663F4C4976BDEC0DDB517096E4F260EE63127F
1C407BCD5A940F12E14301D5BA556E3778B538ACB809BEB24DD0CEF1F3F2B1A2
AB092B560D7B445921EE478F77E5AABB595D1D20F0C3FC3F1EE3CEA2482F934B
41F5AA9050FD85F1A4EA3DC8D7B603897FF8BA80A94AF37267BC399238E66364
2E491A69D3748BD99A3D1931D2292D33115D03EAF903F26BB3DDAFCF03AC9756
112AC6326773E566F0FC5F4F33785F852104594C0E6A0FA1552C71B2408EFC91
2DD39971248E271FE38DB3189B8E45F60EB48F6FA4B48CD1619D4EE8674F140E
177FDE5EF1C89AC366B327C85DC00B8995A0A8874019839ADC5E75C125F33B70
5B2935B6010CB2644513A14DD6786979578C736C530E04C73B6BE1F66DC13BA4
684EBCF6BCD3D6746D6524D940A2FA7E894E40CB69E683961C2FE87EB72200C3
89DE1BDCDC81632C94C14966624A48486511670D2DB1B38BE000D1413EE621C0
3F2B5B113246EB2278758A3E437EE9ACCD098D38E14B4A1614A7EDD5221F0B10
6F0B1598F5F6C270A8A7B8C433B89B8A461796FCA1313F946783A548652E04FD
E47327164E8D7A715683175D9A6663FAFD0BA9ABC437696896F79D3A6B533D57
861F5E6B38D5104CFB43CCB2B8FE6535EF24BA4E3FE4A03FD19B78523E88B7E4
0B9B8669C757ECE9F799100420E1C257B18045C24AB3489007C555A6A08BE3C5
5CF822133489DB9F6A0FB23464FD2630B3C08C160B52DBAD610488DEB4C33C10
17DFBD48AC8F58BEB347280BE74342ABEEC33550CB825ED9D2CA3303DCC16D8C
5E8D9108801C392757E08DC164209E469F81BA5F3A3E4357F79355EE68AF6FB5
308B497206337C881C3F5D876B5092C8CFAC160900207F4249FAB96672C3D299
0DBACF4514FCC85674455417F8D484E90B50FAEE712DAAB9AFB91702BE4B6ECB
CAA26B48FDC624F0B3822179722BF820005ED6A016445BEA5E45B5A3DB61D6D3
DDE203E0AA7E6F886EF022125FC009C9417A6D014C3273290520117325A65C73
005ED9435D5AF66B6CB4CB643D31A1C3315B66F5BEE91B04D8B87C846D41A8D8
DA8C7CC8E6D790BB6ADE29EBAC3DE9BB8A86FDDF564D59DDC4026E082A74C687
6F44D2C364A113A17891E24AE2420F4ACB2609B299D07D62AC33C08AEB761971
A52421C595CE0BA57CEA54D10A1AF7833873DCED0653454362F6BDCE4BB9E55E
EFB3F0488B6AED8346C0E37A2C84BE06797DCBBE2F340068D1CBC28EBCCD5459
843ECCC93E1E3137FEF03B11BD4CAB5A0C402C55559CF6F291293B7E4376E7B2
28B03540570F790C7D7224D94D503491756C971E943895D919BF6FD2E684FC93
B97412932F2ED48A64CA9932B887777E4C3599DEDCFDD64FD3C40A49C6870F88
56B6D2B6B769A3605855B8DFCEA9971D9B9E735411BC71EED8BD7ECF78291469
2DC5050865963BA8EEC82C14CA3625747CB067D5A8DEE2262863F90A859221AE
A2940043F8089CED874881BD909AEBDAD276FDCBE8DEEFEBF553C3ACED039BEC
EEF70B6081310C18C0120D6F0CA2ADEAB78B3D44B97691875A2418E06736ABF1
E66E82EC72125A2157D81C318647FEE9BEAB6DEEF2E7E52E61813DB44C391B55
10D754573BB19497E75C0C8145595D0285C42ADAAB85205641CF77F269533915
AAFE5329D224A3C3AAE86EEC43CA4C22D00EFC742C8E7D7B57D9A71DBA615555
5F226245B174992DB8D542BE503360DFFDAC20AC308142728C561174AA2E38A6
465FCEB703A21FE488A8EBAF7A5D474CC2937A17441779F1AC01175F1F46737D
7DB5E5624E336E2F3C0B442C1876AB6E2639F1E278F2A9AA41F074E5356E7525
C0788168AA324E0EAE5F2ADFF816D656197B7022976688426D0D349301E1E48B
32126AD1498E79D4D4DD07A2F66F6623FAAD37E7171897A928F47261877C17B9
39AA529D2866A4C179EB60BCD98F1D4E226E09AF03238590E793BF7E7F9AC7C8
395ED3511811C7C751C46F7FE87EB3F501837E044A1BC6DBD4D465392B4AEA58
BF51EC644F609E4E39DAE98AA42FADB57361C71658C304B84E040C6C7D42A2DC
F66279A5A56EA8116C5398ACBE49326801D0E094066B4004FF71C626130E70C8
CF409C94A7989B900C2244A5BAF1018C5945E9A4A3AC746F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57183FE1C6ED5D71A48D20EA8C18DB6CA7D3C3A6403B9A767D805747C0D25BF
7F2F88CEE69141F72141640FD36EDB5886A78D3A1E0FA4DD0E213082C3E6822B
F981212D179C25CD0570748C3BBE642CCF1F43F5226B9C2EEA6B966628B185F7
11441471ED972022B4D84CF007C1D9B1D12804610E4F730DAF2F2D5AB767C320
C62543E261EDE128761D164A9843955BBFEC7213307B78378CD1914FD7D79D14
947572CB28073B7AA530ADC51270B03CEB7FD7ADB4D72671135435609A235501
EA55EDE2B2B915DCA5D50A7E3512B325253FEEE5FB8F99189924DE9EDDB672E5
653E83A354F6E55F47CB4B2F056C6232AA66CF460A06E592FB4DAB538C280A86
6C7FC5A1A8A411A597335E6BCB62888AC8539B30E8AC2A39A813FC4891B49E77
75375100F55E9F16BABDD3F76B2F587530D12214A376FCA98170E67BE8E450CF
CD9116344965344652128A18AA5FBC61A89117BB7D016B4F18A1BBBE56EEF55F
CA0430198E886ED2A850EF54AB0DE58D769978F220CA23E531EA276574CA366C
91F983EAF4F167B0A07FC9111856649926E3E81EA375693E3AAE59F71DDA1A97
9E8B438B8790DC31302A3B57B8D71DFD740F169C122EACFF3304518C35E555B6
D5AB925AE2F1B1136D823BFD6740539D150B9DA167D221D2C4067CD370D80E4C
D44FCF85718BE02130F6F9404A18C8FE0FDD273573CEF1F39B46533A74B3E290
DCC979039D827871D821CEDFBF30A901206CF1FD424EE411F08E2D337213C738
0FBC1D28037FE65DF98228BB093E42B1C5C8F503176496DDF8F41B51EB52E717
D65833126380B90C4569C2EC16F0BEA6F6F66CFD73692E35BE484E2FEEA71020
4EEC0C83F54DB3589491AF4F0075BE64973B193D479452375FBC13AF55C0A3FC
35CAA5B993690D1DEB9E7AF13C1761E9CA23ABF0F43433BF6DF8CEC13B976278
CC551E9AD7D9A5B7E84C0BCAD838E6AA380A985755B8398F875E5ABDF6FE666D
DE7942CC3931C38FBAB37D47ED34D68C32DC787BA1FE1D119287CBC4BE309830
093E5DE0FB95A5C8A2053D6456E47F19A269E7824A4F4F5E01B744B205181D60
FFBFE411868ACAF0ACA14B31A55F606B55FCC2E65B67DACA5673E0A792F13310
D6A9806A8C16F8C5D7EAA891ECF3ADA2AFE4CB228EC502B7C159F207276272A1
335A13A3122D897E5B6933CA3B55E37615959BA5ED485DD766EC203BF8244F40
B09330DFC750932665500149458FE819738996649AB47D64B4CCC6A9FF2C723D
49F068EA1C2527878BAEE83AB15A4FDB9CF98D54308AE971B1EF5BF714F1E626
1BE2573CF805E129A4359A82C06D755A1D1CF00230D51265390C94F2BA8384CC
08D4C8D8463E3A69E46AF7F4E0E1E34AFB9AAA45A8C73ADA9E3D5D43BF703069
4AEA7D96872646D0DB3DF0051E8436631CCD570684B7EE64AC6EA15C3BEA5693
9B5F60F00EF5DE04A600D3921738E3ABEEDF8BC142DF92BEF0BA13F64522C505
66427958A682E94A96C2CE326A52757D00471B70F4F896D37B202D5AEAC67C9E
D2F07FE648BE484DDA6371DFFA62853E856854AF8660D60A9D4678840B0F74F3
67C1C4F04141B7D825E574D3FB911FDD5B77F6D149D2DB87716A559E7FF7EBEB
FBDFA3C6EC2106B86578189F2ADF2C0646B16FB5B35F346901432031B38024D1
B9D7A62D5CBBC5290D9846A66E97783990E467C43F23E78033F372A022DE9104
CC056980245EFFDAF624120451E6EF0AA3D0EC70073FB78CBEAF4EE32A0146C5
94102530F7670FD654BBE711EFF23FF1D67601C9D54E1D7A9160E1B45C46DE8B
745015A8B308AF0A1609EB92A7AE7B2FDF890F96DB929965278506B73AB1A250
63A207203BAB86EC572781AFA8D4371A63874F1BEED5EF33CB87042164D0014D
E6536E87D5D7FF4264D9E700D889BA3D78D067F8697ADC8391728BF014B7E05E
1802C21D8B0410B199EB5523FFAF92C51B491862F2F5B9846D84039DCE322DFC
CE3FE4D939B7B21E700995A45F7BBF7F846A26C1A53AA98B772CA11094DF29D1
0E8DB6F6810687D8014945929E2934ABAE3EC4BFDB62A9542045E633F72F76CA
5FF747143BD29626EF5F2909950F5066876D6E77DB67F024E0D901D6F4BC9D6C
BA2D29E8DD39094D02138E991BB69F04AB20674CC1FA544061ECBA44579A7EEE
91489E92CAFC2F7B3B35CACC52262CC1678AB46AE109BC4BAED91FABE8FF63EE
2E3C881681E5B5306F9E18F0E91B3E58D3AD222408838DB849E940DB6ADB6C17
12EA3A0B2109F88FF6D4043D0A21315AEEFBF1B9887FC7BC06C5AE2552F1A5E7
292D0B180791E431F96796A846965DB8DCAF9CF957EB61A08595E721E01B54CF
8FE80BD706FE0D5C44453EF7017436707DD717D84C6F0B64306AC6AEF11EEDDF
BC057C95B34597605D062EBD8120049736E21B5A87FCF5609B9D78287C296AF1
3240929B3E85656BBCE37DBD16228106611BA583FFDDE0AB6E2D39EF56B39EC1
4C16DECA5D0711E950BF1126635EEC6C26755A37865A6EBF165415789E739646
5419A2EF7FC0A9ACEE4C4E569DF625FCBF629AE4C90379910D2D80D43BE33EC7
568B9C060AC8BF251A67F7CD5AA35F7FDC541CC295FBD6A669AF3F698E41A25A
BDA65805A5EA12A3196B5CA2CE49464A69D2BE50D75C407274BEB1F531F0B5F5
A14D4977D4DB0C4E2ECC1D60F5DAC9260AF2B6BC80A98757E5AB9CE8542B8AFE
55351C7DB8F1205019EAF0494ABA6E305C46F9923185BA5A59FC8F2405EDBEB3
3AD72AC48FCAAB992E11CA093E25D6A27AFD193D82C5990D3334208340A743AC
5CECF2DF9553F4F8B38F5476CCB72DF469A9873166D57932C1F55B3FB10C0952
2C894F16C2D75F2423654FE98C659CDB532FD57FE099C0814EE315C66BCA71BB
04D0323445719F2619ABBB73F0B17762183848D4CE018B13E3B493629C76E4B3
A5C74D1381642515992DA991A67E5ED964F663105839F442484ABEF71BFC9D65
A718FDB8680517182E8A98B44AE189E3E19564BA5D18853C71328EA65291AFEA
14D7CA15E88AD69AF572A15539707FA4F66CA2884FC6581396EF93936C036FEB
F327DFE1B15D90126D9701630920B84B95532104BED09D2EBACB928AC7893EC2
DCB29267A46146AEA1E17D63CDBEBA98A32C0B5A97A2BC24C0B65EBD81C39FC3
5F92603D0B9D347D9C1EA8257461B4E9EC7BDD354468E9B8D486AE60721023B8
0F7D29F6859ACC97079CE30ECAD0FAF3E568A09EC0F351ED39610285FFE7CBD3
4F4812205DC6D0294354E6E0483BE35ECA416537C9D73BC1F34E688F67F545DB
7D9E4CD196484121F164E59F44EC0B0C6433D8441BD0CEA40D7DF3A24C71AB62
62F53712BA1405E9C19650E3ECE7A877082260CC383529CE1CEBF0B4A28AA481
ABAD74ECD6F921A6F61A3B565CCC3E48D5CCBC6029D150AB3C5936DB455C5EB3
7AC079516046D21A560A401BA6CD3D0F6120D2561D55C9E03EBB58DCD993F877
0FD0F2F3BEA80D156A22846669C5C1136751710704AE51DB4944B3A283B1682E
9A9A363BA468033DA2F49FD3BA099BFE23748AFCDF967871E2EA8BB80F474F6B
9F997666C1546D63D0D370DAB2CA743C8D3200DD2729AFA971F6FB7CA9B33786
9CB41DC1F00C3445D54866257D7CA62D2BA5E12832430E0B19DA03A1EF4D6A69
8BB1E518A7CA3366A82ECB585B33FDBD1F6145691A8D4C28296A2D1B58ECCE05
7E2158B2383C0003B20B3E17B13222C609DFF716DCAE7C623CC0112D099E061C
15988847BCB5B0B6823E08777F8B36B8D5AF63CB3E0DCDB4B476ADA28FFF7D11
CA50B7A6F55DCC7799EF57E6716D7AF921E93D950F151D40C8FE92A3D6C3403C
78DD1676D34B5BF9ADB482C407351B1FD520A1B4A653C0721A13338F2A25106B
EA65E72C6EE71A48CF5A58F0E81A00D3139416F4F05174809D7D2F3BDAB3C47C
4BD6724380598937ECAAD0FE8B9904977E8D58EE257E1E9193CEEA7EA99ADA5B
86B890F2E81056DB12F8044CF4554E10751C29FBEB8DA8C1265F7607190D952C
D94560530FD743349EE7F9A15729F950964C666E6947261E3035A475573FCF0D
7ECF876CDFDB0B3118CC4D91AB70F1B67859A45585A872A807AB244E79EBE5F5
743B7F29C42DACD3630BEAEBAE2072D4EB7C0C5B3F7443F62A4482F91325569C
65EDFA865DC835D30DE43A3E5648D861897B68629F006A74A32B63B3FFC0D277
111636C2461FA444491570EBF18E88DAE31D489680F7C15B7D3636D7215BE24E
FF783946572FDEC962F9CFD2B976C5F4083C0B69C88A730B6F734F4F7AFBAEAA
A6B902737E45F463931443EFCCE1EE3DD10DD6A62E3D7E2356CC7FC3F3BBCCD6
2D1D4B6619183209D1BBFB5A606E825A0FAA9D69F65E4B0897B2FCBDD5B7364C
FF5F8DDEE625B160B5FBC596600172E34D3062E68F3D69566AD473AB37BEE08A
F30DAECA8C66082082F59C92510D38EDDF2E3E13936C92B5B8D83FEA1C0E9B31
D693E88BD68D01CB95F74F636F958B7F632FA37DE03335C7886F230B2627FE4F
1BFC764D17E412E58DD9CE27C89A2CB33C5A2A2E483F1AE3D7BF67C5DC3DB70E
67801656F7177D1EC50941DE0656BFFD220319E6EF3B6A995B0D85362F6A6B07
4B2E243B17DE56BBE88218E82AF9137E9B87E93C2C57030C5C13F8097051B9F3
DD395313A52F9D0E5E272CC6B277BB1DF93013936E37D4F98C51536FAB6BF134
1F73436736D2F7AE91EB46A5C38E81F3C5374E1492DD3CAF2AEF283D9B4A6C06
3F9DC26B8FA8A5D8AA7D9C72EED178E188882211B8C50E62D6E3AE24CA7F3C2B
C26B573775CFCF6BD70C3A1C153547568E26038D174A08267F509102100DFD76
F8B65F819F635484EF65652BED6E62C2521F9AB5BBFA9DE91787DCEB018968BF
E90A80F77E039CE123142071F039F90C76FD00BC89578EB24D9E354E7FFE9B4F
41F172FF90F986C99676C79782DF07D18BD31E3206673751D11332BA667C2CD4
7C3CAB016C8F80C543D1E95847ADB7074A1E7360E6E3D74A6345C6CD800BCEB8
EFC331B119BDFC8E4E42E103807E4853ABB3D806B24A2FB6F87B2A5D34157176
7E4F5B329E60AEFC947D5E755E2F75C0C7C0E3755B430150999FEC516F137546
BCA20CDE8C3B3EB1EB9FD2DDEBB8DF94DCB83BA2F59077B56E050F1156C72FDA
DDC9FE453B82B1AAB0C64112804A81D5007F7DE1D9C46FF710A84C188ED8BC33
AA4621A59C7F9B4C6E4DE55CFF85277FEBABD1EAF7A1BA0B05CF9BABE7009047
D58D13B03AD178A465B01138BCFBA5ED89B417A496BDBDFB182147CBE6591919
30EE8C1D5B1F7B7F04F3AAC7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (template.dvi)
@start /Fa 240[42 15[{}1 83.022 /CMSY10 rf /Fb 136[59
40 1[30 39 37 1[42 40 1[73 1[43 1[29 48 40 41 39 43 36
1[44 35[42 2[23 58[{}19 83.022 /CMMI10 rf /Fc 134[39
39 39 39 39 39 39 39 1[39 39 39 39 39 39 39 39 39 39
39 39 39 39 39 39 1[39 1[39 1[39 4[39 3[39 2[39 1[39
39 2[39 1[39 1[39 39 39 1[39 2[39 39 39 39 4[39 39 39
1[39 39 39 39 39 39 39 2[39 39 1[39 38[{}55 74.7198 /CMTT9
rf /Fd 139[37 38 39 1[53 48 53 80 27 2[27 1[48 29 44
53 2[46 9[99 1[73 1[53 72 2[72 5[36 75 75 60 1[73 1[68
66[{}25 83.022 /CMBX10 rf /Fe 136[81 59 62 44 44 46 1[62
56 62 93 31 59 1[31 62 56 1[51 3[54 12[78 7[67 1[58 1[88
1[70 1[86 81 80 85 65[{}26 99.6264 /CMBX12 rf /Ff 133[37
44 44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46
42 25 37 46 37 46 42 6[51 62 1[85 62 62 60 46 61 1[57
65 62 76 52 65 43 30 62 65 54 57 63 60 59 62 6[23 1[42
1[42 42 42 42 42 42 42 42 23 28 23 65 1[32 32 23 26[46
48 11[{}69 83.022 /CMR10 rf /Fg 134[71 71 2[75 52 53
55 1[75 67 75 112 37 71 41 37 75 67 1[61 75 60 1[65 9[139
4[100 1[92 101 1[128 81 2[50 3[88 103 97 96 102 6[37
7[67 67 49[{}35 119.552 /CMBX12 rf /Fh 138[54 38 38 38
2[49 54 81 1[51 1[27 54 2[43 3[49 20[61 1[50 1[73 3[75
70 69 12[49 2[49 49 49 3[27 44[{}23 99.6264 /CMR12 rf
/Fi 134[70 4[51 52 51 1[73 66 73 111 36 2[36 1[66 40
58 73 58 1[66 13[73 98 36[43 45[{}19 143.462 /CMR17 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142 -316
a
SDict begin H.S end
 142 -316 a 142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142 -316
a 0 TeXcolorgray Black 150 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 150 0 a 150 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 0
a 150 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 150 0 a 0 TeXcolorgray 150 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 0 a 150
0 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 150 0 a 150 0 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150
0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</S/D>>1<</S/D>>]>>>>
/PUT pdfmark end
 150 0 a 0 TeXcolorgray 0
TeXcolorgray 834 1902 a Fi(Stopify)43 b(-)g(Real)g(time)g(road)g(sign)g
(detection)1002 2334 y Fh(Lane)33 b(Breneman,Josh)m(ua)i(Deare,)d(Hari)
h(Caushik)1643 2641 y(June)g(1st,)g(2015)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-316 a
SDict begin H.S end
 142 -316 a 142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142
-316 a 0 TeXcolorgray 0 TeXcolorgray 150 83 a
SDict begin H.S end
 150 83
a 150 83 a
SDict begin 18 H.A end
 150 83 a 150 83 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 150 83 a Fg(In)l(tro)t(duction)150
331 y Ff(Our)34 b(clien)n(ts,)i(ON)e(Semiconductor)g(requested)g(that)h
(w)n(e)f(researc)n(h)e(and)j(implemen)n(t)g(computer)f(vision)g(algo-)
150 431 y(rithms)e(to)f(b)r(e)h(able)f(to)h(detect)g(street)f(signs)g
(from)g(video)g(or)g(still)h(images)f(in)n(tended)h(to)f(b)r(e)h
(captured)f(from)g(a)150 531 y(lo)n(w)22 b(cost)h(camera)f(inside)h(an)
g(automobile.)35 b(The)23 b(algorithms)f(w)n(ere)g(required)g(to)i(run)
f(on)f(lo)n(w)h(cost)g(dev)n(elopmen)n(t)150 630 y(b)r(oards)33
b(lik)n(e)h(the)h(Beagleb)r(one)e(Blac)n(k)g(and)h(the)h(NVIDIA)g
(Jetson)f(TK1.)56 b(ON)34 b(Semiconductor)f(recen)n(tly)h(ac-)150
730 y(quired)25 b(Aptina,)h(the)f(leading)f(pro)r(ducer)g(of)h(CMOS)g
(image)f(sensors)f(and)i(hop)r(e)g(to)g(en)n(ter)f(in)n(to)h(the)g
(Automotiv)n(e)150 829 y(Safet)n(y)f(industry)g(sometime)g(in)g(the)h
(future.)36 b(They)24 b(in)n(tended)h(this)f(to)g(b)r(e)h(a)f(researc)n
(h)e(pro)5 b(ject)23 b(in)i(whic)n(h)f(w)n(e)f(can)150
929 y(researc)n(h,)f(dev)n(elop)h(and)g(test)h(a)f(v)-5
b(ariet)n(y)23 b(of)g(stop)g(sign)g(detection)h(algorithms)e(and)h
(analyze)g(them)h(to)f(determine)150 1029 y(whic)n(h)k(algorithms)f
(seem)g(most)h(promising,)f(whic)n(h)h(dev)n(elopmen)n(t)g(b)r(oards)f
(are)g(most)g(promising)g(and)h(pro)n(vide)150 1128 y(a)g(base)g(for)g
(future)h(senior)f(design)g(pro)5 b(jects)27 b(to)g(con)n(tribute)g
(to.)150 1294 y(Our)h(clien)n(ts)h(at)g(ON)g(Semiconductor)f(w)n(ere)g
(Matthew)h(Zo)r(c)n(hert,)f(Carl)h(Price)e(and)i(Don)g(Reid.)41
b(The)29 b(mem)n(b)r(ers)150 1394 y(of)g(our)g(team)g(w)n(ere)f(Josh)n
(ua)g(Deare,)h(Lane)g(Breneman)f(and)i(Hari)e(Caushik.)42
b(Throughout)28 b(the)i(y)n(ear,)e(w)n(e)h(eac)n(h)150
1494 y(con)n(tributed)f(to)h(the)g(creation)e(of)i(the)g(algorithm)e
(dev)n(elopmen)n(t)h(framew)n(ork,)f(testing)i(framew)n(ork,)e
(capturing)150 1593 y(of)g(images)g(and)g(video)g(for)g(the)h(test)f
(dataset)g(and)g(presen)n(ting)g(our)f(w)n(ork.)36 b(Our)27
b(clien)n(ts)g(trac)n(k)n(ed)f(our)g(progress,)150 1693
y(pro)n(vided)d(suggestions)f(for)h(our)g(algorithms,)g(use)h(of)g
(hardw)n(are,)e(and)i(the)g(presen)n(tation)f(of)h(our)f(w)n(ork)f(and)
i(ev)n(en)150 1792 y(pro)n(vided)g(us)h(with)h(starter)e(co)r(de)h
(early)f(on)h(to)h(ramp)e(up)i(on)f(programming)e(with)j(the)f(Op)r
(enCV)h(C++)e(library)-7 b(.)150 2133 y
SDict begin H.S end
 150 2133 a 150
2133 a
SDict begin 18 H.A end
 150 2133 a 150 2133 a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 150 2133 a Fg(Main)45 b(Pro)7
b(ject)46 b(Changes)150 2432 y
SDict begin H.S end
 150 2432 a 150 2432 a
SDict begin 18 H.A end

150 2432 a 150 2432 a
SDict begin [/View [/XYZ H.V]/Dest (section*.3) cvn /DEST pdfmark end
 150 2432 a Fg(W)-11 b(eekly)46
b(Blog)f(P)l(osts)150 2730 y
SDict begin H.S end
 150 2730 a 150 2730 a
SDict begin 18 H.A end
 150
2730 a 150 2730 a
SDict begin [/View [/XYZ H.V]/Dest (section*.4) cvn /DEST pdfmark end
 150 2730 a Fg(Pro)7 b(ject)46 b(Do)t(cumen)l(tation)
150 2978 y Ff(Our)38 b(pro)5 b(ject)38 b(consists)g(of)h(four)f(main)h
(comp)r(onen)n(ts:)58 b(the)39 b(dev)n(elopmen)n(t)f(framew)n(ork,)i
(algorithms,)g(testing)150 3077 y(framew)n(ork)19 b(and)i(test)h
(dataset.)34 b(The)21 b(dev)n(elopmen)n(t)g(framew)n(ork)e(pro)n(vides)
h(a)h(w)n(ell)g(de\014ned)g(in)n(terface)g(to)g(dev)n(elop)150
3177 y(the)h(computer)g(vision)f(algorithms)g(and)h(runs)g(the)g
(algorithms)f(on)g(pro)n(vided)g(images)g(and)h(displa)n(ys)f(the)h
(output.)150 3277 y(The)27 b(algorithm)e(used)i(b)n(y)g(the)g(dev)n
(elopmen)n(t)f(framew)n(ork)f(is)i(link)n(ed)f(based)h(on)f(rules)g
(pro)n(vided)g(b)n(y)g(a)h(Mak)n(e\014le.)150 3376 y(The)35
b(algorithms)e(pro)r(cess)h(the)h(images)e(and)i(determine)g(whether)f
(they)h(con)n(tain)f(a)g(stop)h(sign)f(or)g(not.)58 b(The)150
3476 y(testing)31 b(framew)n(ork)d(is)j(used)f(to)h(test)g(the)f
(e\013ectiv)n(eness)h(of)f(eac)n(h)g(of)g(our)g(algorithms)f(based)h
(on)h(a)f(n)n(um)n(b)r(er)g(of)150 3576 y(ev)-5 b(aluation)26
b(metrics.)36 b(It)26 b(essen)n(tially)g(in)n(v)n(ok)n(es)e(the)j(dev)n
(elopmen)n(t)e(framew)n(ork)g(and)h(the)g(algorithm)f(link)n(ed)i(to)f
(it)150 3675 y(on)h(eac)n(h)g(image)g(in)h(the)g(test)g(dataset.)150
3974 y
SDict begin H.S end
 150 3974 a 150 3974 a
SDict begin 14 H.A end
 150 3974 a 150 3974 a
SDict begin [/View [/XYZ H.V]/Dest (section*.5) cvn /DEST pdfmark end
 150
3974 a Fe(Dev)m(elopmen)m(t)38 b(F)-9 b(ramew)m(ork)150
4194 y
SDict begin H.S end
 150 4194 a 150 4194 a
SDict begin 12 H.A end
 150 4194 a 150 4194 a
SDict begin [/View [/XYZ H.V]/Dest (section*.6) cvn /DEST pdfmark end
 150
4194 a Fd(Usage)83 b Ff(The)24 b(dev)n(elopmen)n(t)g(framew)n(ork,)f
(written)h(in)h(framew)n(ork)p 2326 4194 25 4 v 28 w(images/framew)n
(ork)p 3025 4194 V 26 w(cpp/framew)n(ork.cpp)150 4293
y(from)e(the)h(ro)r(ot)f(pro)5 b(ject)23 b(directory)-7
b(,)23 b(is)g(a)g(C++)g(program)f(that)i(tak)n(es)e(a)h(command)g(line)
h(argumen)n(t,)g(the)f(path)h(of)150 4393 y(the)29 b(image)g(to)g(pro)r
(cess,)f(and)h(returns)f(a)h(1)f(if)i(the)f(algorithm)f(determined)h
(that)h(the)f(image)f(con)n(tained)h(a)f(stop)150 4493
y(sign)d(or)f(a)g(0)h(if)h(not.)36 b(An)25 b(optional)f(third)i
(argumen)n(t)e(can)g(b)r(e)i(pro)n(vided)e(to)h(displa)n(y)f(the)h
(image)g(b)r(eing)g(classi\014ed.)150 4592 y(F)-7 b(or)32
b(example,)j(to)d(classify)h(framew)n(ork)p 1447 4592
V 28 w(images/framew)n(ork)p 2146 4592 V 26 w(cpp/p)r(os)p
2466 4592 V 29 w(sample.jpg,)h(an)f(image)f(con)n(taining)g(a)150
4692 y(stop)27 b(sign,)h(the)g(prop)r(er)e(usage)h(is)150
4779 y
SDict begin H.S end
 150 4779 a 150 4779 a
SDict begin 12 H.A end
 150 4779 a 150 4779 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-1) cvn /DEST pdfmark
end
 150
4779 a 150 4854 a
SDict begin H.S end
 150 4854 a 150 4854 a
SDict begin 11 H.A end
 150 4854 a 150
4854 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.1) cvn /DEST pdfmark
end
 150 4854 a Fc(./framework)42 b(pos_sample)r(.jpg)p
0 TeXcolorgray 0 TeXcolorgray 150 5091 a Ff(to)27 b(simply)h(return)f
(the)h(classi\014cation)e(result)i(without)g(displa)n(ying)e(it.)38
b(T)-7 b(o)27 b(displa)n(y)g(the)h(image,)f(this)g(w)n(ould)h(b)r(e)p
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-316 a
SDict begin H.S end
 142 -316 a 142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 142
-316 a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a
150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-2) cvn /DEST pdfmark
end
 150 0 a 150 83 a
SDict begin H.S end
 150 83 a 150
83 a
SDict begin 11 H.A end
 150 83 a 150 83 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.1) cvn /DEST pdfmark
end
 150 83 a Fc(./framework)42 b(pos_sample)r(.jpg)e
(1)p 0 TeXcolorgray 0 TeXcolorgray 150 320 a Ff(although)27
b(the)h(actual)f(v)-5 b(alue)27 b(of)h(the)g(third)g(argumen)n(t)e(do)r
(es)i(not)f(matter,)h(just)g(its)g(presence.)150 598
y
SDict begin H.S end
 150 598 a 150 598 a
SDict begin 12 H.A end
 150 598 a 150 598 a
SDict begin [/View [/XYZ H.V]/Dest (section*.7) cvn /DEST pdfmark end
 150 598 a Fd(Implemen)m
(tation)20 b(Details)82 b Ff(The)19 b(dev)n(elopmen)n(t)e(framew)n(ork)
g(includes)h(the)h(framew)n(ork)p 3071 598 25 4 v 28
w(images/framew)n(ork)p 3770 598 V 26 w(cpp/algorithm.h)150
698 y(header)28 b(\014le)g(that)h(pro)n(vides)e(the)i(in)n(terface)f
(the)h(algorithms)e(m)n(ust)i(b)r(e)g(written)g(to.)39
b(This)29 b(is)f(the)h(pro)r(cessImage)150 798 y(function,)f(with)g
(the)g(signature)150 885 y
SDict begin H.S end
 150 885 a 150 885 a
SDict begin 12 H.A end
 150 885
a 150 885 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-3) cvn /DEST pdfmark
end
 150 885 a 150 960 a
SDict begin H.S end
 150 960 a 150 960 a
SDict begin 11 H.A end
 150
960 a 150 960 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.1) cvn /DEST pdfmark
end
 150 960 a 0 0 1 TeXcolorrgb Fc(int)p
0 TeXcolorgray 40 w(processImage)s(\(Mat)40 b(&img)q(\);)p
0 TeXcolorgray 0 TeXcolorgray 150 1197 a Ff(The)34 b(framew)n(ork)d
(loads)i(the)h(test)g(image)f(from)g(the)h(path)g(sp)r(eci\014ed)f(in)h
(the)g(command)g(line)f(argumen)n(t)g(on)n(to)150 1296
y(memory)27 b(with)h(the)g(Op)r(enCV)g(imread)f(fun)n(tion)h(as)f
(follo)n(ws:)150 1383 y
SDict begin H.S end
 150 1383 a 150 1383 a
SDict begin 12 H.A end
 150 1383
a 150 1383 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-4) cvn /DEST pdfmark
end
 150 1383 a 150 1459 a
SDict begin H.S end
 150 1459 a 150 1459
a
SDict begin 11 H.A end
 150 1459 a 150 1459 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.1) cvn /DEST pdfmark
end
 150 1459 a Fc(Mat)40 b(img)g(=)f(imread)r
(\(argv)q([1],)h(CV_LOAD_IMAGE_COLOR)t(\);)p 0 TeXcolorgray
0 TeXcolorgray 150 1695 a Ff(The)33 b(second)f(argumen)n(t)g(sp)r
(eci\014es)h(the)h(loaded)e(image)g(to)h(b)r(e)h(a)e(3)h(c)n(hannel)f
(color)g(image)g(and)h(the)h(output)f(is)150 1795 y(stored)27
b(in)h(an)f(Op)r(enCV)h(Mat)f(ob)5 b(ject,)28 b(a)f(wrapp)r(er)g
(around)f(a)h(m)n(ulti-c)n(hannel)h(2-dimensional)e(image)h(arra)n(y)-7
b(.)150 2090 y
SDict begin H.S end
 150 2090 a 150 2090 a
SDict begin 14 H.A end
 150 2090 a 150 2090
a
SDict begin [/View [/XYZ H.V]/Dest (section*.8) cvn /DEST pdfmark end
 150 2090 a Fe(Algorithms)150 2310 y
SDict begin H.S end
 150 2310 a 150
2310 a
SDict begin 12 H.A end
 150 2310 a 150 2310 a
SDict begin [/View [/XYZ H.V]/Dest (section*.9) cvn /DEST pdfmark end
 150 2310 a Fd(HOG)150 2529
y Ff(The)40 b(HOG)g(algorithm)e(w)n(orks)g(b)n(y)i(extracting)f(a)g
(HOG)h(Descriptor)f(from)g(a)g(64x128)f(image)h(windo)n(w)g(this)150
2629 y(descriptor)31 b(is)h(then)g(run)g(through)f(a)h(SVM)g(to)g(see)g
(whether)g(the)g(windo)n(w)g(con)n(tains)f(a)g(stop)h(sign.)50
b(If)32 b(it)g(do)r(es)150 2729 y(the)27 b(matc)n(h)g(is)f(added)h(to)g
(a)f(v)n(ector)g(of)g(b)r(ounding)h(rectangles)f(whic)n(h)g(represen)n
(t)g(the)h(matc)n(hes.)36 b(The)27 b(windo)n(w)f(is)150
2828 y(then)g(shifted)f(o)n(v)n(er)f(a)g(little)i(bit)g(and)f(then)g
(rerun.)36 b(This)25 b(rep)r(eats)f(un)n(til)i(the)f(en)n(tire)g(image)
f(has)h(b)r(een)g(pro)r(cessed.)150 2928 y(The)j(matc)n(hes)f(are)f
(then)i(run)g(through)f(non-maxim)n(um)g(suppression)f(to)h(eliminate)h
(o)n(v)n(erlapping)e(matc)n(hes.)150 3094 y(T)-7 b(o)18
b(run)g(detector)g(co)r(de)g(y)n(ou)g(train)g(a)g(mo)r(del)g(to)h(do)f
(this)h(na)n(vigate)d(to)j(the)f(hog)g(directory)-7 b(.)33
b(In)18 b(the)h(git)f(pro)5 b(jects)18 b(this)150 3194
y(is)28 b(in)g Fb(=f)9 b(r)r(amew)r(or)r(k)p 809 3194
25 4 v 34 w(imag)s(es=f)g(r)r(amew)r(or)r(k)p 1580 3194
V 32 w(cpp=hog)s(=)p Ff(.)36 b(F)-7 b(rom)27 b(there)h(y)n(ou)f(can)g
(run)h(the)g(command\(assuming)150 3293 y(y)n(ou)f(ha)n(v)n(e)f(a)h
(tagged)g(dataset\):)150 3385 y
SDict begin H.S end
 150 3385 a 150 3385 a
SDict begin 12 H.A end

150 3385 a 150 3385 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-5) cvn /DEST pdfmark
end
 150 3385 a 150 3455 a
SDict begin H.S end
 150 3455
a 150 3455 a
SDict begin 11 H.A end
 150 3455 a 150 3455 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.1) cvn /DEST pdfmark
end
 150 3455 a Fc(./trainer)41
b([)q(path)f(to)f(dataset)i(json)q(])f([path)g(to)g(output)g(model)q(])
g(-c)f(200)h(-)q(e)f(1e-6)h(-i)g(450)g(-o)f(.5)h(-s)316
3547 y(1.10)g(-r)g(5)p 0 TeXcolorgray 0 TeXcolorgray
150 3784 a Ff(The)28 b(argumen)n(ts:)p 0 TeXcolorgray
275 3999 a Fa(\017)p 0 TeXcolorgray 41 w Ff(c)f(-)g(C)h(v)-5
b(alue)28 b(for)f(the)h(SVM)g(\(See)g(CVSVM)g(do)r(cumen)n(tation\))p
0 TeXcolorgray 275 4156 a Fa(\017)p 0 TeXcolorgray 41
w Ff(e)f(-)g(Epsilon)g(v)-5 b(alue)28 b(for)f(the)h(SVM)g(\(See)g
(CVSVM)g(do)r(cumen)n(tation\))p 0 TeXcolorgray 275 4313
a Fa(\017)p 0 TeXcolorgray 41 w Ff(i)f(-)h(Max)f(n)n(um)n(b)r(er)g(of)h
(iterations)e(while)i(training)p 0 TeXcolorgray 275 4471
a Fa(\017)p 0 TeXcolorgray 41 w Ff(o)f(-)g(Amoun)n(t)h(of)g(o)n(v)n
(erlap)d(required)i(to)g(b)r(e)h(considered)f(a)g(true)g(p)r(ositiv)n
(e)p 0 TeXcolorgray 275 4628 a Fa(\017)p 0 TeXcolorgray
41 w Ff(s)d(-)g(Ho)n(w)g(m)n(uc)n(h)g(the)h(image)f(p)n(yramid)f
(scales)h(when)g(trying)g(to)h(matc)n(h)f(\(See)h(gpu::HOG)f(do)r
(cumen)n(tation\))p 0 TeXcolorgray 275 4785 a Fa(\017)p
0 TeXcolorgray 41 w Ff(r)f(-)g(Ho)n(w)g(man)n(y)g(o)n(v)n(erlapping)e
(rectangles)h(are)h(required)f(during)h(suppression)f(to)i(b)r(e)g
(considered)e(a)h(matc)n(h)150 5000 y(This)j(will)g(tak)n(e)f(a)h
(while)g(but)h(once)e(its)h(done)g(it)g(will)h(output)f(some)f(basic)h
(statistics)f(on)h(ho)n(w)f(the)i(new)f(training)150
5100 y(set)33 b(p)r(erformed.)53 b(T)-7 b(o)33 b(use)g(this)h(trained)e
(mo)r(del)i(w)n(e)e(ha)n(v)n(e)g(to)h(cop)n(y)g(it)g(to)g(the)h(mo)r
(dels)f(folder)g(in)g(the)h(ro)r(ot)e(git)p 0 TeXcolorgray
1929 5349 a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-316 a
SDict begin H.S end
 142 -316 a 142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 142
-316 a 0 TeXcolorgray 0 TeXcolorgray 150 83 a Ff(directory)-7
b(.)40 b(With)31 b(that)e(done)g(edit)h(the)f(name)g(of)g(the)h(mo)r
(dule)f(\014les)h(used)f(in)g Fb(detector)p 2960 83 25
4 v 32 w(ser)r(v)s(er)n(:cpp)h Ff(on)f(line)g(10)150
183 y(lik)n(e)e(so:)150 254 y
SDict begin H.S end
 150 254 a 150 254 a
SDict begin 12 H.A end
 150
254 a 150 254 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-6) cvn /DEST pdfmark
end
 150 254 a 150 345 a
SDict begin H.S end
 150 345 a 150 345
a
SDict begin 11 H.A end
 150 345 a 150 345 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.1) cvn /DEST pdfmark
end
 150 345 a Fc(svm)q(.load)q(\(<absolute)41
b(path)f(model)h(file)q(>\);)p 0 TeXcolorgray 0 TeXcolorgray
150 582 a Ff(The)27 b(path)f(m)n(ust)h(b)r(e)f(absolute)g(since)h(w)n
(e)f(don't)g(kno)n(w)g(what)g(directory)f(0)p Fb(detector)p
2811 582 25 4 v 32 w(ser)r(v)s(er)30 b Ff(will)c(b)r(e)h(run)g(in)f
(and)150 681 y(w)n(e)h(w)n(an)n(t)g(to)h(b)r(e)g(sure)f(it)h(\014nds)f
(the)h(mo)r(del.)150 847 y(With)g(that)g(done)g(w)n(e)f(can)g(no)n(w)g
(run)h(it,)g(to)f(do)g(that)h(y)n(ou)f(will)h(need)g(t)n(w)n(o)e
(terminal)i(sessions.)35 b(In)28 b(the)g(\014rst)f(run:)150
934 y
SDict begin H.S end
 150 934 a 150 934 a
SDict begin 12 H.A end
 150 934 a 150 934 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-7) cvn /DEST pdfmark
end
 150 934
a 150 1010 a
SDict begin H.S end
 150 1010 a 150 1010 a
SDict begin 11 H.A end
 150 1010 a 150 1010
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-7.1) cvn /DEST pdfmark
end
 150 1010 a Fc(make)40 b(detector_server)150 1101 y
SDict begin H.S end

150 1101 a 150 1101 a
SDict begin 11 H.A end
 150 1101 a 150 1101 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-7.2) cvn /DEST pdfmark
end
 150 1101
a Fc(./detector_server)p 0 TeXcolorgray 0 TeXcolorgray
150 1338 a Ff(In)28 b(the)g(second)f(na)n(vigate)f(to)h(to)h(the)g
Fb(f)9 b(r)r(amew)r(or)r(k)p 1779 1338 25 4 v 34 w(imag)s(es=f)g(r)r
(amew)r(or)r(k)p 2550 1338 V 32 w(cpp)27 b Ff(directory)g(and)g(run:)
150 1429 y
SDict begin H.S end
 150 1429 a 150 1429 a
SDict begin 12 H.A end
 150 1429 a 150 1429
a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-8) cvn /DEST pdfmark
end
 150 1429 a 150 1500 a
SDict begin H.S end
 150 1500 a 150 1500 a
SDict begin 11 H.A end
 150 1500
a 150 1500 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-8.1) cvn /DEST pdfmark
end
 150 1500 a Fc(make)40 b(hog_server)150 1591
y
SDict begin H.S end
 150 1591 a 150 1591 a
SDict begin 11 H.A end
 150 1591 a 150 1591 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-8.2) cvn /DEST pdfmark
end
 150 1591
a Fc(make)g(test)p 0 TeXcolorgray 0 TeXcolorgray 150
1828 a Ff(The)28 b(mak)n(e)g(test)h(isn't)f(necessary)f(but)i(it)g
(will)f(test)h(that)g(the)g(serv)n(er)d(is)i(running)g(prop)r(erly)-7
b(.)39 b(No)n(w)28 b(y)n(ou)f(can)h(use)150 1928 y(it)g(lik)n(e)f(an)n
(y)g(other)g(algorithm)g(in)g(the)h(framew)n(ork.)150
2210 y
SDict begin H.S end
 150 2210 a 150 2210 a
SDict begin 12 H.A end
 150 2210 a 150 2210 a
SDict begin [/View [/XYZ H.V]/Dest (section*.10) cvn /DEST pdfmark
end
 150
2210 a Fd(SURF)k(and)g(Bag)g(of)g(W)-8 b(ords)150 2430
y
SDict begin H.S end
 150 2430 a 150 2430 a
SDict begin 12 H.A end
 150 2430 a 150 2430 a
SDict begin [/View [/XYZ H.V]/Dest (section*.11) cvn /DEST pdfmark
end
 150 2430
a Fd(R)m(OI)150 2666 y
SDict begin H.S end
 150 2666 a 150 2666 a
SDict begin 14 H.A end
 150 2666
a 150 2666 a
SDict begin [/View [/XYZ H.V]/Dest (section*.12) cvn /DEST pdfmark
end
 150 2666 a Fe(T)f(esting)37 b(F)-9 b(ramew)m(ork)150
2886 y Ff(The)28 b(testing)f(framew)n(ork)f(is)h(prett)n(y)h(straigh)n
(t)e(forw)n(ard)g(and)h(requires)g(t)n(w)n(o)f(prerequisites:)150
3001 y
SDict begin H.S end
 150 3001 a 150 3001 a
SDict begin 12 H.A end
 150 3001 a 150 3001 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 150
3001 a 0 TeXcolorgray 251 3118 a Ff(1.)p 0 TeXcolorgray
42 w(The)h(main)h(framew)n(ork)d(is)j(already)e(compiled)i(with)g(the)g
(algorithm)e(y)n(ou)h(w)n(an)n(t)g(to)g(run)150 3168
y
SDict begin H.S end
 150 3168 a 150 3168 a
SDict begin 12 H.A end
 150 3168 a 150 3168 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 150 3168
a 0 TeXcolorgray 251 3284 a Ff(2.)p 0 TeXcolorgray 42
w(Y)-7 b(ou)27 b(ha)n(v)n(e)g(a)g(tagged)f(dataset)h(with)h(the)g
(corresp)r(onding)e(.json)i(\014le)150 3517 y(With)g(that)g(done)g(to)f
(run)h(the)g(testing)f(framew)n(ork)f(use:)150 3604 y
SDict begin H.S end

150 3604 a 150 3604 a
SDict begin 12 H.A end
 150 3604 a 150 3604 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-9) cvn /DEST pdfmark
end
 150 3604
a 150 3679 a
SDict begin H.S end
 150 3679 a 150 3679 a
SDict begin 11 H.A end
 150 3679 a 150 3679
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-9.1) cvn /DEST pdfmark
end
 150 3679 a Fc(./tester)41 b([json)f(file)q(])g([path)g(to)g(the)g
(result)g(.)q(csv)f(you)h(want)h(create)q(])e([)q(path)h(to)f(the)h
(framework)316 3770 y(executable)r(])p 0 TeXcolorgray
0 TeXcolorgray 150 4007 a Ff(This)28 b(will)f(create)g(a)g(.csv)g
(\014le)h(with)g(the)g(result)g(statistics)f(for)g(the)h(algorithm.)150
4306 y
SDict begin H.S end
 150 4306 a 150 4306 a
SDict begin 14 H.A end
 150 4306 a 150 4306 a
SDict begin [/View [/XYZ H.V]/Dest (section*.13) cvn /DEST pdfmark
end
 150
4306 a Fe(T)-9 b(est)37 b(Dataset)150 4575 y
SDict begin H.S end
 150 4575
a 150 4575 a
SDict begin 18 H.A end
 150 4575 a 150 4575 a
SDict begin [/View [/XYZ H.V]/Dest (section*.14) cvn /DEST pdfmark
end
 150 4575 a Fg(Resources)150
4824 y Ff(The)28 b(follo)n(wing)e(resources)g(w)n(ere)g(particularly)h
(helpful:)p 0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray
eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-316 a
SDict begin H.S end
 142 -316 a 142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 142
-316 a 0 TeXcolorgray 0 TeXcolorgray 150 83 a
SDict begin H.S end
 150 83
a 150 83 a
SDict begin 18 H.A end
 150 83 a 150 83 a
SDict begin [/View [/XYZ H.V]/Dest (section*.15) cvn /DEST pdfmark
end
 150 83 a Fg(What)45 b(W)-11
b(e)45 b(Learned)150 348 y
SDict begin H.S end
 150 348 a 150 348 a
SDict begin 14 H.A end
 150 348
a 150 348 a
SDict begin [/View [/XYZ H.V]/Dest (section*.16) cvn /DEST pdfmark
end
 150 348 a Fe(Hari)37 b(Caushik)150 568 y
Ff(By)30 b(con)n(tributing)h(to)f(this)h(pro)5 b(ject,)31
b(I)g(learned)f(a)g(fair)g(bit)i(of)e(tec)n(hnical)h(information.)45
b(I)31 b(impro)n(v)n(ed)e(m)n(y)i(C++)150 667 y(programming)25
b(skills)i(and)h(gained)e(a)h(familiarit)n(y)g(with)h(the)g(Op)r(enCV)f
(library)-7 b(.)36 b(In)28 b(addition,)f(I)h(learned)e(ab)r(out)150
767 y(the)g(ma)5 b(jor)23 b(concepts)i(in)h(computer)e(vision)h
(algorithms)f(as)g(w)n(ell)h(as)g(image)f(pro)r(cessing)g(tec)n
(hniques.)35 b(Through-)150 866 y(out)23 b(this)g(pro)5
b(ject,)23 b(I)g(also)f(learned)g(ab)r(out)h(soft)n(w)n(are)f(design)g
(practices)g(and)h(made)g(practical)f(use)g(of)h(algorithmic)150
966 y(complexit)n(y)k(analysis.)150 1132 y(A)k(lot)g(of)g(non-tec)n
(hnical)f(information)g(w)n(as)f(also)h(learned)g(b)n(y)h(doing)f(this)
h(pro)5 b(ject.)46 b(This)31 b(pro)5 b(ject)30 b(required)f(a)150
1232 y(lot)k(of)f(do)r(cumen)n(tation)h(at)g(the)g(start)f(while)h(w)n
(e)f(w)n(ere)g(determining)h(the)g(sp)r(eci\014cations,)h(during)e(the)
h(imple-)150 1331 y(men)n(tation)g(when)h(w)n(e)f(do)r(cumen)n(ted)g
(the)h(pseudo)r(co)r(de)f(and)h(algorithmic)e(complexit)n(y)h(of)g(the)
h(algorithms)e(as)150 1431 y(w)n(ell)f(as)h(our)f(\014nal)g(rep)r(ort.)
49 b(My)31 b(tec)n(hnical)h(writing)f(skills)g(ha)n(v)n(e)g(impro)n(v)n
(ed)f(as)i(a)f(result.)49 b(W)-7 b(e)32 b(also)f(presen)n(ted)150
1531 y(our)25 b(pro)5 b(ject,)26 b(particularly)e(to)n(w)n(ards)g(the)i
(end)g(of)g(the)g(y)n(ear)f(at)g(the)i(Engineering)d(Exp)r(o)h(to)h
(the)g(general)f(public,)150 1630 y(at)i(ON)h(Semiconductor)f(to)g(ON)h
(emplo)n(y)n(ees)e(and)i(our)e(\014nal)i(presen)n(tation)e(video.)150
1796 y(Doing)f(a)g(nine)h(mon)n(th)f(pro)5 b(ject)25
b(for)g(an)g(actual)f(clien)n(t)i(in)g(industry)f(has)g(taugh)n(t)g(me)
g(most)g(of)h(all)f(that)g(the)h(main)150 1896 y(c)n(hallenge)21
b(is)h(carefully)g(de\014ning)g(an)g(initially)h(v)n(ery)e(lo)r(osely)g
(de\014ned)i(problem.)34 b(Decisions)22 b(that)h(w)n(e)f(mak)n(e)f
(early)150 1996 y(on)28 b(can)g(ha)n(v)n(e)f(a)h(v)n(ery)f
(signi\014can)n(t)g(e\013ect)i(on)f(the)h(w)n(a)n(y)e(our)g(pro)5
b(ject)28 b(ma)n(y)f(turn)i(out.)39 b(I)28 b(ha)n(v)n(e)f(also)g
(learned)h(that)150 2095 y(pro)5 b(jects)25 b(in)h(the)g(real)f(w)n
(orld)g(are)g(v)n(ery)g(malleable.)35 b(While)27 b(the)f(high)g(lev)n
(el)f(decisions)g(w)n(e)h(mak)n(e)f(early)g(on)g(guide)150
2195 y(our)e(pro)5 b(ject)24 b(in)h(certain)e(directions,)h(sp)r
(eci\014c)h(requiremen)n(ts)e(frequen)n(tly)h(c)n(hange)f(as)h(w)n(e)f
(gain)h(more)f(kno)n(wledge)150 2294 y(through)k(implemen)n(tation.)150
2460 y(This)32 b(pro)5 b(ject)31 b(allo)n(w)n(ed)g(eac)n(h)g(of)h(use)g
(to)g(tak)n(e)f(a)h(pro)5 b(ject)31 b(managemen)n(t)g(role)h(at)f
(di\013eren)n(t)i(times)f(throughout)150 2560 y(the)g(y)n(ear.)49
b(I)32 b(learned)f(most)h(of)g(all)g(that)g(establishing)g(clear)f
(comm)n(unication)g(among)g(all)h(team)g(mem)n(b)r(ers)f(is)150
2660 y(essen)n(tial)25 b(to)h(mo)n(ving)f(the)i(pro)5
b(ject)25 b(along)g(smo)r(othly)-7 b(.)36 b(It)26 b(is)g(m)n(uc)n(h)g
(easier)f(to)h(p)r(erform)g(when)g(eac)n(h)f(of)h(us)g(kno)n(ws)150
2759 y(what)e(is)g(exp)r(ected)g(of)g(us)g(and)g(ha)n(v)n(e)f(clearly)g
(de\014ned)h(resp)r(onsibilities.)35 b(When)25 b(this)f(breaks)f(do)n
(wn,)h(there)g(tends)150 2859 y(to)j(b)r(e)h(a)g(lot)f(of)h(confusion)f
(and)g(consequen)n(tly)g(inaction.)150 3158 y
SDict begin H.S end
 150 3158
a 150 3158 a
SDict begin 14 H.A end
 150 3158 a 150 3158 a
SDict begin [/View [/XYZ H.V]/Dest (section*.17) cvn /DEST pdfmark
end
 150 3158 a Fe(Lane)39
b(Breneman)150 3377 y Ff(Before)20 b(this)h(pro)5 b(ject)20
b(I)h(had)f(used)h(Op)r(enCV)g(for)f(ob)5 b(ject)21 b(recognition.)33
b(That)21 b(said)f(I)h(had)f(no)h(exp)r(erience)f(w)n(orking)150
3477 y(with)25 b(the)g(C++)f(in)n(terface)g(and)h(v)n(ery)f(little)h
(C++)f(exp)r(erience)g(in)h(general.)35 b(Through)24
b(this)h(pro)5 b(ject)24 b(I)h(learned)e(a)150 3577 y(lot)28
b(ab)r(out)h(linking)f(libraries,)f(creating)g(mak)n(e)h(\014les)g(and)
g(using)g(classes)f(in)i(C++.)38 b(On)28 b(a)g(di\013eren)n(t)h(note)f
(I)g(also)150 3676 y(learned)f(a)h(lot)g(ab)r(out)g(SVMs)g(and)g(mac)n
(hine)g(learning.)37 b(I)28 b(had)g(attempted)h(to)f(use)g(these)g(to)r
(ols)f(but)i(had)f(nev)n(er)150 3776 y(made)d(m)n(uc)n(h)g(progress,)e
(but)j(after)e(this)i(pro)5 b(ject)24 b(I)h(feel)g(I)g(ha)n(v)n(e)f
(the)i(skills)e(to)h(emplo)n(y)g(them)g(in)h(future)f(pro)5
b(jects.)150 3942 y(I)39 b(learned)f(ab)r(out)h(taking)f(notes)h(and)f
(extracting)g(the)i(imp)r(ortan)n(t)e(information)g(from)h(researc)n(h)
e(pap)r(ers)h(in)150 4042 y(order)26 b(to)i(reimplemen)n(t)g(their)f
(algorithms.)36 b(I)28 b(also)f(learned)g(ho)n(w)g(imp)r(ortan)n(t)g
(comm)n(unication)g(b)r(et)n(w)n(een)h(team)150 4141
y(mem)n(b)r(ers)g(is.)38 b(This)29 b(largely)d(came)i(from)g(the)h
(fact)f(the)h(t)n(w)n(o)e(of)h(our)g(basic)f(algorithms)g(turned)h(out)
h(to)f(b)r(e)g(v)n(ery)150 4241 y(similar)35 b(and)h(t)n(w)n(o)e(of)i
(our)f(adv)-5 b(anced)35 b(algorithms)g(are)f(also)h(kind)h(of)g
(similar.)60 b(This)36 b(limited)g(the)g(v)-5 b(ariet)n(y)35
b(of)150 4340 y(algorithms)26 b(w)n(e)h(explored,)g(th)n(us)h(lo)n(w)n
(ering)d(the)j(qualit)n(y)f(of)h(the)g(pro)5 b(ject.)150
4507 y(Our)25 b(pro)5 b(ject)24 b(in)n(tegrated)g(really)h(nicely)g
(together,)g(a)g(large)e(part)i(of)g(this)h(I)f(attribute)h(to)f(our)f
(go)r(o)r(d)h(design.)36 b(W)-7 b(e)150 4606 y(found)27
b(that)h(w)n(e)f(almost)f(nev)n(er)g(needed)h(to)g(\014gh)n(t)g(the)h
(framew)n(ork)d(in)i(order)f(to)h(get)g(our)f(co)r(de)h(to)g(run,)g
(whic)n(h)g(is)150 4706 y(nice.)49 b(Ev)n(en)30 b(when)i(last)f(min)n
(ute)h(w)n(e)f(need)h(to)g(mak)n(e)e(a)h(w)n(a)n(y)g(to)g(exp)r(ort)g
(videos)g(it)h(to)r(ok)f(ab)r(out)g(5)g(min)n(utes)h(to)150
4805 y(extend)e(the)g(framew)n(ork.)41 b(This)29 b(reinforced)g(the)h
(most)f(imp)r(ort)h(fact)g(that)g(I)f(knew)h(ab)r(out)f(pro)5
b(ject)29 b(w)n(ork,)g(that)150 4905 y(a)e(go)r(o)r(d)g(design)g(is)h
(imp)r(ortan)n(t.)150 5071 y(Pro)5 b(ject)34 b(managemen)n(t)h(w)n(as)g
(a)g(v)n(ery)f(mixed)i(bag)f(for)g(our)g(pro)5 b(ject.)60
b(In)36 b(the)g(b)r(eginning)g(w)n(e)f(had)g(v)n(ery)g(go)r(o)r(d)p
0 TeXcolorgray 1929 5349 a(4)p 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 142
-316 a
SDict begin H.S end
 142 -316 a 142 -316 a
SDict begin H.R end
 142 -316 a 142 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 142
-316 a 0 TeXcolorgray 0 TeXcolorgray 150 83 a Ff(pro)5
b(ject)33 b(managemen)n(t,)i(planning)f(ev)n(erything,)h(dividing)f(w)n
(ork)f(and)h(comm)n(unicating)f(often.)57 b(This)34 b(lead)g(to)150
183 y(the)24 b(b)r(est)g(parts)f(of)h(out)f(pro)5 b(ject)23
b(namely)h(the)g(framew)n(ork)e(and)h(testing)h(framew)n(ork.)34
b(Our)22 b(later)i(w)n(ork)e(w)n(ere)h(less)150 282 y(though)n(t)h(out)
g(and)g(more)f(divided)h(and)g(I)g(feel)g(that)g(it)h(can)e(b)r(e)i
(seen)f(in)g(qualit)n(y)f(of)h(the)h(w)n(ork,)e(as)g(our)g(algorithms)
150 382 y(could)k(ha)n(v)n(e)g(b)r(een)h(b)r(etter.)150
548 y(Comm)n(unication)h(is)h(k)n(ey)-7 b(.)42 b(W)-7
b(e)30 b(had)g(a)f(really)f(great)h(group)f(and)i(I)g(enjo)n(y)n(ed)e
(w)n(orking)g(on)i(the)g(pro)5 b(ject,)29 b(but)i(for)150
648 y(most)g(of)h(the)g(term)f(the)h(pro)5 b(ject)31
b(b)r(ecame)h(mostly)f(individual.)49 b(This)31 b(lead)g(to)h(t)n(w)n
(o)f(of)g(our)g(algorithms)f(b)r(eing)150 747 y(prett)n(y)e(m)n(uc)n(h)
h(the)g(same.)39 b(If)30 b(w)n(e)e(had)g(comm)n(unicated)h(in)g(more)e
(detail)i(w)n(e)f(could)h(ha)n(v)n(e)e(seen)i(this)g(so)r(oner)e(and)
150 847 y(adapted.)150 1013 y(If)k(I)g(could)g(mak)n(e)f(one)g(c)n
(hange)f(I)i(w)n(ould)g(ha)n(v)n(e)e(done)i(1)f(adv)-5
b(anced)30 b(algorithm)g(eac)n(h)g(that)h(w)n(e)f(w)n(ork)n(ed)f(on)i
(o)n(v)n(er)150 1112 y(the)h(y)n(ear.)48 b(By)31 b(adv)-5
b(anced)31 b(I)h(mean)g(more)f(complicated)g(than)h(ev)n(en)f(the)h
(HOG)g(or)f(SURF)h(algorithms.)48 b(I)32 b(feel)150 1212
y(the)c(pro)5 b(ject)27 b(w)n(ould)g(of)h(had)f(more)g(to)g(sho)n(w)g
(and)g(b)r(een)h(more)f(rew)n(arding)f(if)i(w)n(e)f(had.)150
1511 y
SDict begin H.S end
 150 1511 a 150 1511 a
SDict begin 14 H.A end
 150 1511 a 150 1511 a
SDict begin [/View [/XYZ H.V]/Dest (section*.18) cvn /DEST pdfmark
end
 150
1511 a Fe(Josh)m(ua)38 b(Deare)150 1780 y
SDict begin H.S end
 150 1780 a
150 1780 a
SDict begin 18 H.A end
 150 1780 a 150 1780 a
SDict begin [/View [/XYZ H.V]/Dest (section*.19) cvn /DEST pdfmark
end
 150 1780 a Fg(App)t(endix)44
b(1:)60 b(Essen)l(tial)47 b(Co)t(de)e(Listings)150 2078
y
SDict begin H.S end
 150 2078 a 150 2078 a
SDict begin 18 H.A end
 150 2078 a 150 2078 a
SDict begin [/View [/XYZ H.V]/Dest (section*.20) cvn /DEST pdfmark
end
 150 2078
a Fg(App)t(endix)f(2:)60 b(Other)45 b(Material)p 0 TeXcolorgray
1929 5349 a Ff(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
